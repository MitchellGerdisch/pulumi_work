Previewing update (demo/dev)

View Live: https://app.pulumi.com/demo/eks-main/dev/previews/714c24eb-9c30-4c5b-83f6-266c39f123e9

    pulumi:pulumi:Stack eks-main-dev  debug: AWS Auth provider used: "SharedCredentialsProvider"
    pulumi:pulumi:Stack eks-main-dev  debug: AWS Auth provider used: "SharedCredentialsProvider"
    pulumi:pulumi:Stack eks-main-dev  debug: Trying to get account information via iam:GetUser
    pulumi:pulumi:Stack eks-main-dev  debug: AWS Auth provider used: "SharedCredentialsProvider"
    pulumi:pulumi:Stack eks-main-dev  debug: Trying to get account information via sts:GetCallerIdentity
    pulumi:pulumi:Stack eks-main-dev  debug: Trying to get account information via sts:GetCallerIdentity

    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=pulumi:pulumi:Stack, name=eks-main-dev, custom=False, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:meta/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiextensions.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiextensions.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:admissionregistration.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:admissionregistration.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiregistration.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiregistration.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:core/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apps/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apps/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apps/v1beta2@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:auditregistration.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authentication.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authentication.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authorization.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authorization.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:autoscaling/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:autoscaling/v2beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:autoscaling/v2beta2@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:batch/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:batch/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:batch/v2alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:certificates.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:certificates.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:coordination.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:coordination.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:discovery.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:events.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:events.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:extensions/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:networking.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:networking.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:node.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:node.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:node.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:policy/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:rbac.authorization.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:rbac.authorization.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:rbac.authorization.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:scheduling.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:scheduling.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:scheduling.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:settings.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:storage.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:storage.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:storage.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering package kubernetes@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:accessanalyzer/analyzer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:acm/certificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:acm/certificateValidation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:acmpca/certificateAuthority@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:amp/workspace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/account@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/apiKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/authorizer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/basePathMapping@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/clientCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/deployment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/documentationPart@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/documentationVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/domainName@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/integration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/integrationResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/method@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/methodResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/methodSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/model@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/requestValidator@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/resource@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/response@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/restApi@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/restApiPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/stage@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/usagePlan@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/usagePlanKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/vpcLink@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/api@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/apiMapping@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/authorizer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/deployment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/domainName@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/integration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/integrationResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/model@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/routeResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/stage@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/vpcLink@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appautoscaling/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appautoscaling/scheduledAction@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appautoscaling/target@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/gatewayRoute@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/mesh@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualNode@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualRouter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualService@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/apiKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/dataSource@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/function@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/graphQLApi@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/resolver@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:athena/database@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:athena/namedQuery@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:athena/workgroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/attachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/lifecycleHook@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/notification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/schedule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscalingplans/scalingPlan@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/globalSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/plan@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/regionSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/selection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/vault@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/vaultNotifications@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/vaultPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:batch/computeEnvironment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:batch/jobDefinition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:batch/jobQueue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:budgets/budget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/aggregateAuthorization@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/configurationAggregator@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/conformancePack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/deliveryChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/organizationCustomRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/organizationManagedRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/recorder@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/recorderStatus@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/remediationConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/rule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloud9/environmentEC2@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudformation/stack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudformation/stackSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudformation/stackSetInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/cachePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/distribution@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/originAccessIdentity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/originRequestPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/publicKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/realtimeLogConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudhsmv2/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudhsmv2/hsm@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudtrail/trail@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/compositeAlarm@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/dashboard@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventArchive@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventBus@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventPermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logDestination@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logDestinationPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logMetricFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logResourcePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logSubscriptionFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/metricAlarm@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/domainPermissions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/repository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/repositoryPermissionsPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/project@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/reportGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/sourceCredential@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/webhook@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codecommit/repository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codecommit/trigger@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codedeploy/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codedeploy/deploymentConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codedeploy/deploymentGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codepipeline/pipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codepipeline/webhook@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codestarconnections/connection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codestarnotifications/notificationRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/identityPool@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/identityPoolRoleAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/identityProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/resourceServer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userPool@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userPoolClient@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userPoolDomain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cur/reportDefinition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datapipeline/pipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/agent@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/efsLocation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/locationFsxWindows@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/locationSmb@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/nfsLocation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/s3Location@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/task@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dax/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dax/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dax/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:devicefarm/project@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/bgpPeer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/connection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/connectionAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/gateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/gatewayAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/gatewayAssociationProposal@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPrivateVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPrivateVirtualInterfaceAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPublicVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPublicVirtualInterfaceAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedTransitVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedTransitVirtualInterfaceAcceptor@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/linkAggregationGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/privateVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/publicVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/transitVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directoryservice/conditionalForwader@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directoryservice/directory@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directoryservice/logService@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dlm/lifecyclePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/certificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/replicationInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/replicationSubnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/replicationTask@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/clusterInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/clusterParameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/clusterSnapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dynamodb/globalTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dynamodb/table@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dynamodb/tableItem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/defaultKmsKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/encryptionByDefault@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/snapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/snapshotCopy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/volume@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/ami@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/amiCopy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/amiFromInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/amiLaunchPermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/availabilityZoneGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/capacityReservation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/carrierGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/customerGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/dedicatedHost@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultNetworkAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultRouteTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultSecurityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultSubnet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultVpc@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultVpcDhcpOptions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/egressOnlyInternetGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/eip@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/eipAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/fleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/flowLog@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/internetGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/keyPair@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/launchConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/launchTemplate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/localGatewayRoute@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/localGatewayRouteTableVpcAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/mainRouteTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/managedPrefixList@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/natGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkAclRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkInterfaceAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkInterfaceSecurityGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/peeringConnectionOptions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/placementGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/proxyProtocolPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/routeTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/routeTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/securityGroupRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/snapshotCreateVolumePermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/spotDatafeedSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/spotFleetRequest@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/spotInstanceRequest@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/subnet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/tag@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorFilterRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorSession@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/transitGatewayPeeringAttachmentAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/volumeAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpc@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcDhcpOptions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcDhcpOptionsAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointConnectionNotification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointRouteTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointService@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointServiceAllowedPrinciple@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointSubnetAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcIpv4CidrBlockAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcPeeringConnection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcPeeringConnectionAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnConnection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnConnectionRoute@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnGatewayAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnGatewayRoutePropagation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/authorizationRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/networkAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/peeringAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/prefixListReference@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/routeTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/routeTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/routeTablePropagation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/transitGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/vpcAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/vpcAttachmentAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecr/lifecyclePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecr/repository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecr/repositoryPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/capacityProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/service@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/taskDefinition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/accessPoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/fileSystem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/fileSystemPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/mountTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:eks/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:eks/fargateProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:eks/nodeGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/globalReplicationGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/replicationGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/applicationVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/configurationTemplate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/environment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/appCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/attachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/listenerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancerBackendServerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancerCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/sslNegotiationPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticsearch/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticsearch/domainPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elastictranscoder/pipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elastictranscoder/preset@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/appCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/attachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/listenerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancerBackendServerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancerCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/sslNegotiationPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/instanceFleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/instanceGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/managedScalingPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/securityConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fms/adminAccount@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fms/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fsx/lustreFileSystem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fsx/windowsFileSystem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/alias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/build@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/fleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/gameSessionQueue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glacier/vault@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glacier/vaultLock@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:globalaccelerator/accelerator@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:globalaccelerator/endpointGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:globalaccelerator/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/catalogDatabase@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/catalogTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/classifier@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/connection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/crawler@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/dataCatalogEncryptionSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/devEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/job@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/mLTransform@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/partition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/registry@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/resourcePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/schema@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/securityConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/trigger@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/userDefinedFunction@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/workflow@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/detector@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/filter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/iPSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/inviteAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/member@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/organizationAdminAccount@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/organizationConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/publishingDestination@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/threatIntelSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/accessKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/accountAlias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/accountPasswordPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/groupMembership@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/groupPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/groupPolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/instanceProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/openIdConnectProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/policyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/role@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/rolePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/rolePolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/samlProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/serverCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/serviceLinkedRole@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/sshKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/user@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userGroupMembership@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userLoginProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userPolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/component@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/distributionConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/image@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/imagePipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/imageRecipe@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/infrastructureConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:inspector/assessmentTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:inspector/assessmentTemplate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:inspector/resourceGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/certificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/policyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/roleAlias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/thing@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/thingPrincipalAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/thingType@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/topicRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/analyticsApplication@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/firehoseDeliveryStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/stream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/videoStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesisanalyticsv2/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/alias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/ciphertext@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/externalKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/grant@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/key@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lakeformation/dataLakeSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lakeformation/permissions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lakeformation/resource@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/alias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/codeSigningConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/eventSourceMapping@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/function@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/functionEventInvokeConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/layerVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/permission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/provisionedConcurrencyConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/bot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/botAlias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/intent@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/slotType@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:licensemanager/association@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:licensemanager/licenseConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/keyPair@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/staticIp@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/staticIpAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:macie/memberAccountAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:macie/s3BucketAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediaconvert/queue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediapackage/channel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediastore/container@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediastore/containerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mq/broker@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mq/configuration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:msk/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:msk/configuration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:msk/scramSecretAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/clusterInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/clusterParameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/clusterSnapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/firewall@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/firewallPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/loggingConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/resourcePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/customLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/gangliaLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/haproxyLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/javaAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/memcachedLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/mysqlLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/nodejsAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/permission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/phpAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/railsAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/rdsDbInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/stack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/staticWebLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/userProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/account@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/organization@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/organizationalUnit@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/policyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/admChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsSandboxChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsVoipChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsVoipSandboxChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/app@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/baiduChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/emailChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/eventStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/gcmChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/smsChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:qldb/ledger@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:quicksight/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:quicksight/user@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/principalAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/resourceAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/resourceShare@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/resourceShareAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterParameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterSnapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/globalCluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/optionGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/proxy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/proxyDefaultTargetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/proxyTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/roleAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/snapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/snapshotCopyGrant@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/snapshotSchedule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/snapshotScheduleAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:resourcegroups/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/delegationSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/healthCheck@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/keySigningKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/queryLog@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/record@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverDnsSecConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverQueryLogConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverQueryLogConfigAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverRuleAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/vpcAssociationAuthorization@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/zone@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/zoneAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/accessPoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/accountPublicAccessBlock@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/analyticsConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucket@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketMetric@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketNotification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketObject@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketOwnershipControls@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketPublicAccessBlock@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/inventory@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/objectCopy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3control/bucket@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3control/bucketLifecycleConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3control/bucketPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3outposts/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/appImageConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/codeRepository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/endpointConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/featureGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/image@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/imageVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/model@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/modelPackageGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/notebookInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/notebookInstanceLifecycleConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/userProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secret@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secretPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secretRotation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secretVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/account@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/actionTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/inviteAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/member@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/organizationAdminAccount@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/productSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/standardsSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:serverlessrepository/cloudFormationStack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicecatalog/portfolio@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/httpNamespace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/privateDnsNamespace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/publicDnsNamespace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/service@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicequotas/serviceQuota@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/activeReceiptRuleSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/confgurationSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/configurationSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/domainDkim@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/domainIdentity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/domainIdentityVerification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/emailIdentity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/eventDestination@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/identityNotificationTopic@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/identityPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/mailFrom@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/receiptFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/receiptRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/receiptRuleSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/template@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sfn/activity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sfn/stateMachine@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:shield/protection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:signer/signingJob@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:signer/signingProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:signer/signingProfilePermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:simpledb/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/platformApplication@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/smsPreferences@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/topic@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/topicPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/topicSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sqs/queue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sqs/queuePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/activation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/association@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/document@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/maintenanceWindow@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/maintenanceWindowTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/maintenanceWindowTask@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/parameter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/patchBaseline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/patchGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/resourceDataSync@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/accountAssignment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/managedPolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/permissionSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/permissionSetInlinePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/cache@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/cachesIscsiVolume@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/gateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/nfsFileShare@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/smbFileShare@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/storedIscsiVolume@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/tapePool@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/uploadBuffer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/workingStorage@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:swf/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:synthetics/canary@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:transfer/server@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:transfer/sshKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:transfer/user@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/byteMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/geoMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/ipSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/rateBasedRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/regexMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/regexPatternSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/rule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/sizeConstraintSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/sqlInjectionMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/webAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/xssMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/byteMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/geoMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/ipSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/rateBasedRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/regexMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/regexPatternSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/rule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/sizeConstraintSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/sqlInjectionMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/webAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/webAclAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/xssMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/ipSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/regexPatternSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/webAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/webAclAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/webAclLoggingConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:worklink/fleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:worklink/websiteCertificateAuthorityAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:workspaces/directory@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:workspaces/ipGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:workspaces/workspace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:xray/encryptionConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:xray/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:xray/samplingRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering package aws@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module eks:index@0.22.0
    pulumi:pulumi:Stack eks-main-dev  debug: registering package eks@0.22.0
    pulumi:pulumi:Stack eks-main-dev  debug: reading resource: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev  debug: preparing read resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver outputs
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver secret_output_names
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=eks:index:Cluster, name=eks-main-eks, custom=False, remote=True
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster_security_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster_security_group_tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster_tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver create_oidc_provider
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver creation_role_provider
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver desired_capacity
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver encrypt_root_block_device
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver encryption_config_key_arn
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver endpoint_private_access
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver endpoint_public_access
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver fargate
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver gpu
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_profile_name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_role
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_roles
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_type
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kubernetes_service_ip_address_range
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver max_size
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver min_size
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_ami_id
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_associate_public_ip_address
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_group_options
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_public_key
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_root_volume_size
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_security_group_tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_user_data
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver private_subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver provider_credential_opts
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver proxy
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver public_access_cidrs
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver public_subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver role_mappings
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver service_role
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver skip_default_node_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver storage_classes
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver use_default_vpc_cni
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver user_mappings
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver vpc_cni_options
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver vpc_id
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver aws_provider
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver core
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver default_node_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver eks_cluster
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver eks_cluster_ingress_rule
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kubeconfig
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_security_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver provider
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=pulumi:providers:kubernetes, name=k8s, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver context
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver enable_dry_run
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kubeconfig
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver namespace
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver render_yaml_to_directory
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver suppress_deprecation_warnings
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=kubernetes:core/v1:Namespace, name=eks-main-app, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver api_version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kind
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver metadata
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver spec
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=custom:resource:App, name=eks-main-app, custom=False, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver api_version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kind
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver metadata
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver spec
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver api_version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kind
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver metadata
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver spec
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=custom:resource:IngressCtl, name=eks-main-ing-perms, custom=False, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver path
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver policy
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=aws:iam/role:Role, name=eks-main-alb-controller-role, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver assume_role_policy
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver force_detach_policies
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver inline_policies
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver managed_policy_arns
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver max_session_duration
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver path
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver permissions_boundary
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver create_date
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver unique_id
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver policy_arn
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver role
    pulumi:pulumi:Stack eks-main-dev  debug: Waiting for outstanding RPCs to complete
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc read resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource outputs
    pulumi:pulumi:Stack eks-main-dev  debug: waiting for quiescence; 13 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=pulumi:pulumi:Stack, name=eks-main-dev
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} prepared
    pulumi:pulumi:Stack eks-main-dev  debug: resource registration prepared: ty=pulumi:pulumi:Stack, name=eks-main-dev
    pulumi:pulumi:Stack eks-main-dev  debug: preparing read: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=eks:index:Cluster, name=eks-main-eks
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x110c4d040>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x110c3fc40>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x110c13a00>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: create_oidc_provider -> createOidcProvider
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: fargate -> fargate
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=pulumi:providers:kubernetes, name=k8s
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': <pulumi.output.Output object at 0x110d49d00>, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=kubernetes:core/v1:Namespace, name=eks-main-app
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'api_version': 'v1', 'kind': 'Namespace', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x111db1fa0>, 'spec': None, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: api_version -> apiVersion
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=custom:resource:App, name=eks-main-app
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'api_version': 'apps/v1', 'kind': 'Deployment', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb460>, 'spec': <pulumi_kubernetes.apps.v1._inputs.DeploymentSpecArgs object at 0x110dcb640>, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: api_version -> apiVersion
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev  debug: transforming input property: app -> app
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'api_version': 'v1', 'kind': 'Service', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb700>, 'spec': <pulumi_kubernetes.core.v1._inputs.ServiceSpecArgs object at 0x110ee2730>, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: api_version -> apiVersion
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: policy -> policy
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: assume_role_policy -> assumeRolePolicy
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: force_detach_policies -> forceDetachPolicies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'policy_arn': <pulumi.output.Output object at 0x110f48670>, 'role': <pulumi.output.Output object at 0x110f9bc70>} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'policy_arn': <pulumi.output.Output object at 0x110f48670>, 'role': <pulumi.output.Output object at 0x110f9bc70>} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=pulumi:pulumi:Stack, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: read prepared: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: resource {} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=custom:resource:App, name=eks-main-app
    pulumi:pulumi:Stack eks-main-dev running debug: resource {} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    custom:resource:App eks-main-app  
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=custom:resource:App, urn=urn:pulumi:dev::eks-main::custom:resource:App::eks-main-app
    custom:resource:IngressCtl eks-main-ing-perms  
    pulumi:pulumi:Stack eks-main-dev running read pulumi:pulumi:StackReference demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=custom:resource:IngressCtl, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl::eks-main-ing-perms
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    pulumi:pulumi:Stack eks-main-dev running read pulumi:pulumi:StackReference demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: resource read successful: ty=pulumi:pulumi:StackReference, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:StackReference::demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: outputs -> outputs
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'vpcId': 'vpc-0b7b646c66cd6f099', 'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768']} -> {'vpcId': 'vpc-0b7b646c66cd6f099', 'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768']}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: secretOutputNames -> secret_output_names
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: demo/eks-vpc/dev -> demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name outputs
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name secret_output_names
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: private_subnet_ids -> privateSubnetIds
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: vpc_id -> vpcId
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x110c4d040>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x110c3fc40>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x110c13a00>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=eks:index:Cluster, name=eks-main-eks
    pulumi:providers:aws default_3_30_1  
 +  aws:iam:Role eks-main-alb-controller-role create 
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=aws:iam/role:Role, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/role:Role::eks-main-alb-controller-role
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-alb-controller-role-480c3af -> eks-main-alb-controller-role-480c3af
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job. -> Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: maxSessionDuration -> max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 3600.0 -> 3600
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: path -> path
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: / -> /
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: forceDetachPolicies -> force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: True -> True
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: assumeRolePolicy -> assume_role_policy
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name path
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name assume_role_policy
    aws:iam:Policy eks-main-alb-controller-policy  
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=aws:iam/policy:Policy, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/policy:Policy::eks-main-alb-controller-policy
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-alb-controller-policy-1929516 -> eks-main-alb-controller-policy-1929516
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: policy -> policy
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: path -> path
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: / -> /
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name policy
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name path
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: policy_arn -> policyArn
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: role -> role
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'policy_arn': <pulumi.output.Output object at 0x110f48670>, 'role': <pulumi.output.Output object at 0x110f9bc70>} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment
 +  aws:iam:RolePolicyAttachment eks-main-alb-controller-role-attachment create 
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-alb-controller-role-attachment
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: policyArn -> policy_arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: role -> role
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-alb-controller-role-480c3af -> eks-main-alb-controller-role-480c3af
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name policy_arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name role
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=eks:index:Cluster, name=eks-main-eks, custom=false, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=eks:index:ServiceRole, name=eks-main-eks-eksRole, custom=false, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/role:Role, name=eks-main-eks-eksRole-role, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-4b490823, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-90eb1c99, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-eksClusterSecurityGroup, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterInternetEgressRule, custom=true, remote=false
    eks:index:Cluster eks-main-eks  
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:eks/cluster:Cluster, name=eks-main-eks-eksCluster, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=pulumi:providers:kubernetes, name=eks-main-eks-eks-k8s, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=eks:index:VpcCni, name=eks-main-eks-vpc-cni, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=eks:index:ServiceRole, name=eks-main-eks-instanceRole, custom=false, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/role:Role, name=eks-main-eks-instanceRole-role, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-03516f97, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-e1b295bd, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-3eb088f2, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=kubernetes:core/v1:ConfigMap, name=eks-main-eks-nodeAccess, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Invoking function: tok=aws:index/getRegion:getRegion asynchronously
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/openIdConnectProvider:OpenIdConnectProvider, name=eks-main-eks-oidcProvider, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-nodeSecurityGroup, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeIngressRule, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeClusterIngressRule, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksExtApiServerClusterIngressRule, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeInternetEgressRule, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterIngressRule, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=pulumi:providers:kubernetes, name=eks-main-eks-provider, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: , obj={}
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=eks:index:Cluster, name=eks-main-eks
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=eks:index:ServiceRole, name=eks-main-eks-podExecutionRole, custom=false, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/role:Role, name=eks-main-eks-podExecutionRole-role, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-podExecutionRole-6ad441d9, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Registering resource: t=aws:eks/fargateProfile:FargateProfile, name=eks_main-eksfargateProfile, custom=true, remote=false
    pulumi:pulumi:Stack eks-main-dev running debug: Invoking function: tok=aws:ec2/getRouteTable:getRouteTable asynchronously
    pulumi:pulumi:Stack eks-main-dev running debug: , obj={"subnetId":"subnet-044974ee15921bd4d"}
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks[eks:index:Cluster]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks,,,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=eks:index:ServiceRole, name=eks-main-eks-eksRole
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=eks:index:ServiceRole, name=eks-main-eks-instanceRole
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=eks:index:ServiceRole, name=eks-main-eks-podExecutionRole
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-eksClusterSecurityGroup
    pulumi:providers:aws default_3_26_1  
    eks:index:ServiceRole eks-main-eks-instanceRole  
    eks:index:ServiceRole eks-main-eks-eksRole  
    eks:index:ServiceRole eks-main-eks-podExecutionRole  
    pulumi:pulumi:Stack eks-main-dev running debug: Invoke RPC finished: tok=aws:index/getRegion:getRegion; err: null, resp: description,,,US East (Ohio),endpoint,,,ec2.us-east-2.amazonaws.com,id,,,us-east-2,name,,,us-east-2,
    aws:ec2:SecurityGroup eks-main-eks-eksClusterSecurityGroup  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole[eks:index:ServiceRole]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole,,,,
    aws:iam:Role eks-main-eks-instanceRole-role  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/role:Role, name=eks-main-eks-instanceRole-role
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole[eks:index:ServiceRole]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole,,,,
    aws:iam:Role eks-main-eks-eksRole-role  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/role:Role, name=eks-main-eks-eksRole-role
    aws:iam:Role eks-main-eks-podExecutionRole-role  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-podExecutionRole[eks:index:ServiceRole]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole,,,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/role:Role, name=eks-main-eks-podExecutionRole-role
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksClusterSecurityGroup[aws:ec2/securityGroup:SecurityGroup]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup,sg-084343bc5734f4845,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":600000000000,"delete":600000000000},"schema_version":"1"},arn,,,arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845,description,,,Managed by Pulumi,egress,,,,,,,id,,,sg-084343bc5734f4845,ingress,,,,,,,name,,,eks-main-eks-eksClusterSecurityGroup-9283f28,namePrefix,,,,ownerId,,,052848974346,revokeRulesOnDelete,,,,true,tags,,,,,Name,,,eks-main-eks-eksClusterSecurityGroup,vpcId,,,vpc-0b7b646c66cd6f099,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterInternetEgressRule
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-role[aws:iam/role:Role]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role,eks-main-eks-instanceRole-role-02f1126,arn,,,arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126,assumeRolePolicy,,,{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]},createDate,,,2021-02-26T14:48:18Z,description,,,,forceDetachPolicies,,,,false,id,,,eks-main-eks-instanceRole-role-02f1126,maxSessionDuration,,3600,name,,,eks-main-eks-instanceRole-role-02f1126,path,,,/,tags,,,,,,uniqueId,,,AROAQYTQLLIFHBA4LNWT6,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-3eb088f2
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-e1b295bd
    aws:ec2:SecurityGroupRule eks-main-eks-eksClusterInternetEgressRule  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-03516f97
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole-role[aws:iam/role:Role]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-eksRole-role,eks-main-eks-eksRole-role-b7159f6,arn,,,arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6,assumeRolePolicy,,,{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"eks.amazonaws.com"},"Action":"sts:AssumeRole"}]},createDate,,,2021-02-26T14:48:18Z,description,,,Allows EKS to manage clusters on your behalf.,forceDetachPolicies,,,,false,id,,,eks-main-eks-eksRole-role-b7159f6,maxSessionDuration,,3600,name,,,eks-main-eks-eksRole-role-b7159f6,path,,,/,tags,,,,,,uniqueId,,,AROAQYTQLLIFIGFZU3FMI,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-4b490823
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-90eb1c99
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-podExecutionRole-role[aws:iam/role:Role]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-podExecutionRole-role,eks-main-eks-podExecutionRole-role-beaab3d,arn,,,arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d,assumeRolePolicy,,,{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"eks-fargate-pods.amazonaws.com"},"Action":"sts:AssumeRole"}]},createDate,,,2021-02-26T14:48:19Z,description,,,,forceDetachPolicies,,,,false,id,,,eks-main-eks-podExecutionRole-role-beaab3d,maxSessionDuration,,3600,name,,,eks-main-eks-podExecutionRole-role-beaab3d,path,,,/,tags,,,,,,uniqueId,,,AROAQYTQLLIFAAV72F4A3,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-podExecutionRole-6ad441d9
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksClusterInternetEgressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterInternetEgressRule,sgrule-118633929,__meta,,,{"schema_version":"2"},cidrBlocks,,,,,,,,0.0.0.0/0,description,,,Allow internet access.,fromPort,,0,id,,,sgrule-118633929,protocol,,,-1,securityGroupId,,,sg-084343bc5734f4845,self,,,,false,toPort,,0,type,,,egress,,
    aws:iam:RolePolicyAttachment eks-main-eks-instanceRole-3eb088f2  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-3eb088f2[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-instanceRole-3eb088f2,eks-main-eks-instanceRole-role-02f1126-20210226144820886800000005,id,,,eks-main-eks-instanceRole-role-02f1126-20210226144820886800000005,policyArn,,,arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly,role,,,eks-main-eks-instanceRole-role-02f1126,,
    aws:iam:RolePolicyAttachment eks-main-eks-instanceRole-e1b295bd  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-e1b295bd[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-instanceRole-e1b295bd,eks-main-eks-instanceRole-role-02f1126-20210226144819704600000002,id,,,eks-main-eks-instanceRole-role-02f1126-20210226144819704600000002,policyArn,,,arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy,role,,,eks-main-eks-instanceRole-role-02f1126,,
    aws:iam:RolePolicyAttachment eks-main-eks-instanceRole-03516f97  
    aws:iam:RolePolicyAttachment eks-main-eks-eksRole-4b490823  
    aws:iam:RolePolicyAttachment eks-main-eks-eksRole-90eb1c99  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-03516f97[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-instanceRole-03516f97,eks-main-eks-instanceRole-role-02f1126-20210226144819582900000001,id,,,eks-main-eks-instanceRole-role-02f1126-20210226144819582900000001,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy,role,,,eks-main-eks-instanceRole-role-02f1126,,
    aws:iam:RolePolicyAttachment eks-main-eks-podExecutionRole-6ad441d9  
    pulumi:pulumi:Stack eks-main-dev running debug: Truncating attribute path of 0 diagnostics for TypeSet
    pulumi:pulumi:Stack eks-main-dev running debug: Truncating attribute path of 0 diagnostics for TypeSet
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole-4b490823[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-eksRole-4b490823,eks-main-eks-eksRole-role-b7159f6-20210226144820559500000004,id,,,eks-main-eks-eksRole-role-b7159f6-20210226144820559500000004,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSClusterPolicy,role,,,eks-main-eks-eksRole-role-b7159f6,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole-90eb1c99[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-eksRole-90eb1c99,eks-main-eks-eksRole-role-b7159f6-20210226144820473100000003,id,,,eks-main-eks-eksRole-role-b7159f6-20210226144820473100000003,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSServicePolicy,role,,,eks-main-eks-eksRole-role-b7159f6,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:eks/cluster:Cluster, name=eks-main-eks-eksCluster
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole; err: null, resp: 
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole; err: null, resp: 
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-podExecutionRole-6ad441d9[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-podExecutionRole-6ad441d9,eks-main-eks-podExecutionRole-role-beaab3d-20210226144821078900000006,id,,,eks-main-eks-podExecutionRole-role-beaab3d-20210226144821078900000006,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy,role,,,eks-main-eks-podExecutionRole-role-beaab3d,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole; err: null, resp: 
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole; err: null, resp: 
    aws:eks:Cluster eks-main-eks-eksCluster  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole; err: null, resp: 
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole; err: null, resp: 
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksCluster[aws:eks/cluster:Cluster]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster,eks-main-eks-eksCluster-5d4dcbc,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":1800000000000,"delete":900000000000,"update":3600000000000}},arn,,,arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc,certificateAuthority,,,,,data,,,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=,createdAt,,,2021-02-26 14:48:23.041 +0000 UTC,enabledClusterLogTypes,,,,,,,encryptionConfig,0,endpoint,,,https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com,id,,,eks-main-eks-eksCluster-5d4dcbc,identities,,,,,,,,,,oidcs,,,,,,,,,,issuer,,,https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,kubernetesNetworkConfig,,,,,serviceIpv4Cidr,,,172.20.0.0/16,name,,,eks-main-eks-eksCluster-5d4dcbc,platformVersion,,,eks.3,roleArn,,,arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6,status,,,ACTIVE,tags,,,,,Name,,,eks-main-eks-eksCluster,version,,,1.18,vpcConfig,,,,,clusterSecurityGroupId,,,sg-0280096cc04a81715,endpointPrivateAccess,,,,false,endpointPublicAccess,,,,true,publicAccessCidrs,,,,,,,,0.0.0.0/0,securityGroupIds,,,,,,,,sg-084343bc5734f4845,subnetIds,,,,,,,,subnet-044974ee15921bd4d,,,subnet-0a8eed68bc61c6768,vpcId,,,vpc-0b7b646c66cd6f099,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-nodeSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=pulumi:providers:kubernetes, name=eks-main-eks-eks-k8s
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=eks:index:VpcCni, name=eks-main-eks-vpc-cni
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=pulumi:providers:kubernetes, name=eks-main-eks-provider
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:iam/openIdConnectProvider:OpenIdConnectProvider, name=eks-main-eks-oidcProvider
    pulumi:pulumi:Stack eks-main-dev running debug: Invoke RPC finished: tok=aws:ec2/getRouteTable:getRouteTable; err: null, resp: associations,,,,,,,,,,gatewayId,,,,main,,,,false,routeTableAssociationId,,,rtbassoc-05decc1c16a4f5c10,routeTableId,,,rtb-0682680fd365b9895,subnetId,,,subnet-044974ee15921bd4d,id,,,rtb-0682680fd365b9895,ownerId,,,052848974346,routeTableId,,,rtb-0682680fd365b9895,routes,,,,,,,,,,cidrBlock,,,0.0.0.0/0,egressOnlyGatewayId,,,,gatewayId,,,,instanceId,,,,ipv6CidrBlock,,,,localGatewayId,,,,natGatewayId,,,nat-0e021cd4cf4d96668,networkInterfaceId,,,,transitGatewayId,,,,vpcEndpointId,,,,vpcPeeringConnectionId,,,,subnetId,,,subnet-044974ee15921bd4d,tags,,,,,,vpcId,,,vpc-0b7b646c66cd6f099,
    pulumi:pulumi:Stack eks-main-dev running debug: Invoking function: tok=aws:ec2/getRouteTable:getRouteTable asynchronously
    pulumi:pulumi:Stack eks-main-dev running debug: , obj={"subnetId":"subnet-0a8eed68bc61c6768"}
    pulumi:pulumi:Stack eks-main-dev running debug: Reading Route Table: {
    pulumi:pulumi:Stack eks-main-dev running debug:   Filters: [{
    pulumi:pulumi:Stack eks-main-dev running debug:       Name: "association.subnet-id",
    pulumi:pulumi:Stack eks-main-dev running debug:       Values: ["subnet-0a8eed68bc61c6768"]
    pulumi:pulumi:Stack eks-main-dev running debug:     }]
    pulumi:pulumi:Stack eks-main-dev running debug: }
    pulumi:pulumi:Stack eks-main-dev running debug: Invoke RPC finished: tok=aws:ec2/getRouteTable:getRouteTable; err: null, resp: associations,,,,,,,,,,gatewayId,,,,main,,,,false,routeTableAssociationId,,,rtbassoc-0c805468271f1fa02,routeTableId,,,rtb-011cd0081345b5fa7,subnetId,,,subnet-0a8eed68bc61c6768,id,,,rtb-011cd0081345b5fa7,ownerId,,,052848974346,routeTableId,,,rtb-011cd0081345b5fa7,routes,,,,,,,,,,cidrBlock,,,0.0.0.0/0,egressOnlyGatewayId,,,,gatewayId,,,,instanceId,,,,ipv6CidrBlock,,,,localGatewayId,,,,natGatewayId,,,nat-0feac976d920c1f4b,networkInterfaceId,,,,transitGatewayId,,,,vpcEndpointId,,,,vpcPeeringConnectionId,,,,subnetId,,,subnet-0a8eed68bc61c6768,tags,,,,,,vpcId,,,vpc-0b7b646c66cd6f099,
    pulumi:providers:kubernetes eks-main-eks-eks-k8s  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks; err: null, resp: 
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks; err: null, resp: 
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eks-k8s[pulumi:providers:kubernetes]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-eks-k8s,09e0d2d6-63f5-4dd6-9caa-b682dedd4cc9,kubeconfig,,,{"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]},version,,,2.8.0,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=kubernetes:core/v1:ConfigMap, name=eks-main-eks-nodeAccess
    aws:ec2:SecurityGroup eks-main-eks-nodeSecurityGroup  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-nodeSecurityGroup[aws:ec2/securityGroup:SecurityGroup]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup,sg-0a5ff208056363723,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":600000000000,"delete":600000000000},"schema_version":"1"},arn,,,arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723,description,,,Managed by Pulumi,egress,,,,,,,id,,,sg-0a5ff208056363723,ingress,,,,,,,name,,,eks-main-eks-nodeSecurityGroup-e015189,namePrefix,,,,ownerId,,,052848974346,revokeRulesOnDelete,,,,true,tags,,,,,Name,,,eks-main-eks-nodeSecurityGroup,kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc,,,owned,vpcId,,,vpc-0b7b646c66cd6f099,,
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeIngressRule
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeInternetEgressRule
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterIngressRule
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeClusterIngressRule
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksExtApiServerClusterIngressRule
    pulumi:providers:kubernetes eks-main-eks-provider  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-provider[pulumi:providers:kubernetes]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-provider,6b44b415-c44a-43bf-9bb0-425f113778a9,kubeconfig,,,{"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]},version,,,2.8.0,,
    eks:index:VpcCni eks-main-eks-vpc-cni  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-vpc-cni[eks:index:VpcCni]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:VpcCni::eks-main-eks-vpc-cni,636d4620e8d6f460,,,
    aws:iam:OpenIdConnectProvider eks-main-eks-oidcProvider  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-oidcProvider[aws:iam/openIdConnectProvider:OpenIdConnectProvider]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::eks-main-eks-oidcProvider,arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,arn,,,arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,clientIdLists,,,,,,,,sts.amazonaws.com,id,,,arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,thumbprintLists,,,,,,,,9e99a48a9960b14926bb7f3b02e22da2b0ab7280,url,,,oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,,
    kubernetes:core/v1:ConfigMap eks-main-eks-nodeAccess  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-nodeAccess[kubernetes:core/v1:ConfigMap]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$kubernetes:core/v1:ConfigMap::eks-main-eks-nodeAccess,kube-system/aws-auth,__initialApiVersion,,,v1,__inputs,,,,,apiVersion,,,v1,data,,,,,mapRoles,,,- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC prepared: t=aws:eks/fargateProfile:FargateProfile, name=eks_main-eksfargateProfile
    aws:ec2:SecurityGroupRule eks-main-eks-eksExtApiServerClusterIngressRule  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksExtApiServerClusterIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksExtApiServerClusterIngressRule,sgrule-878838703,__meta,,,{"schema_version":"2"},description,,,Allow pods running extension API servers on port 443 to receive communication from cluster control plane,fromPort,,443,id,,,sgrule-878838703,protocol,,,tcp,securityGroupId,,,sg-0a5ff208056363723,self,,,,false,sourceSecurityGroupId,,,sg-084343bc5734f4845,toPort,,443,type,,,ingress,,
    aws:ec2:SecurityGroupRule eks-main-eks-eksNodeInternetEgressRule  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksNodeInternetEgressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksNodeInternetEgressRule,sgrule-139676407,__meta,,,{"schema_version":"2"},cidrBlocks,,,,,,,,0.0.0.0/0,description,,,Allow internet access.,fromPort,,0,id,,,sgrule-139676407,protocol,,,-1,securityGroupId,,,sg-0a5ff208056363723,self,,,,false,toPort,,0,type,,,egress,,
    aws:ec2:SecurityGroupRule eks-main-eks-eksClusterIngressRule  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksClusterIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule,sgrule-3344048136,__meta,,,{"schema_version":"2"},description,,,Allow pods to communicate with the cluster API Server,fromPort,,443,id,,,sgrule-3344048136,protocol,,,tcp,securityGroupId,,,sg-084343bc5734f4845,self,,,,false,sourceSecurityGroupId,,,sg-0a5ff208056363723,toPort,,443,type,,,ingress,,
    aws:ec2:SecurityGroupRule eks-main-eks-eksNodeIngressRule  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksNodeIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksNodeIngressRule,sgrule-2031886210,__meta,,,{"schema_version":"2"},description,,,Allow nodes to communicate with each other,fromPort,,0,id,,,sgrule-2031886210,protocol,,,-1,securityGroupId,,,sg-0a5ff208056363723,self,,,,true,toPort,,0,type,,,ingress,,
    aws:ec2:SecurityGroupRule eks-main-eks-eksNodeClusterIngressRule  
    pulumi:pulumi:Stack eks-main-dev running debug: Truncating attribute path of 0 diagnostics for TypeSet
    pulumi:pulumi:Stack eks-main-dev running debug: Truncating attribute path of 0 diagnostics for TypeSet
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks-main-eks-eksNodeClusterIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksNodeClusterIngressRule,sgrule-1538449771,__meta,,,{"schema_version":"2"},description,,,Allow worker Kubelets and pods to receive communication from the cluster control plane,fromPort,,1025,id,,,sgrule-1538449771,protocol,,,tcp,securityGroupId,,,sg-0a5ff208056363723,self,,,,false,sourceSecurityGroupId,,,sg-084343bc5734f4845,toPort,,65535,type,,,ingress,,
    aws:eks:FargateProfile eks_main-eksfargateProfile  
    pulumi:pulumi:Stack eks-main-dev running debug: RegisterResource RPC finished: resource:eks_main-eksfargateProfile[aws:eks/fargateProfile:FargateProfile]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/fargateProfile:FargateProfile::eks_main-eksfargateProfile,eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":600000000000,"delete":600000000000}},arn,,,arn:aws:eks:us-east-2:052848974346:fargateprofile/eks-main-eks-eksCluster-5d4dcbc/eks_main-eksfargateProfile-00d6206/e4bbef6d-7f40-e761-d583-c101416e841d,clusterName,,,eks-main-eks-eksCluster-5d4dcbc,fargateProfileName,,,eks_main-eksfargateProfile-00d6206,id,,,eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206,podExecutionRoleArn,,,arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d,selectors,,,,,,,,,,labels,,,,,,namespace,,,eks-main-app,,,,,labels,,,,,,namespace,,,kube-system,status,,,ACTIVE,subnetIds,,,,,,,,subnet-044974ee15921bd4d,,,subnet-0a8eed68bc61c6768,tags,,,,,,,
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=eks:index:Cluster, urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver assume_role_policy
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver inline_policies
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver managed_policy_arns
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver path
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver permissions_boundary
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver create_date
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver unique_id
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-provider
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver cluster
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver context
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver enable_dry_run
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver namespace
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver render_yaml_to_directory
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver suppress_deprecation_warnings
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver egress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver ingress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver egress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver ingress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver cidr_blocks
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver from_port
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver ipv6_cidr_blocks
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver prefix_list_ids
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver protocol
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver self
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver source_security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver to_port
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver type
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver encryption_config
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver kubernetes_network_config
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver version
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver vpc_config
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver certificate_authority
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver created_at
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver endpoint
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver identities
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver platform_version
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$kubernetes:core/v1:ConfigMap::eks-main-eks-nodeAccess
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver api_version
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver binary_data
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver data
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver immutable
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver kind
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver metadata
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-eks-k8s
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver cluster
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver context
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver enable_dry_run
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver namespace
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver render_yaml_to_directory
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver suppress_deprecation_warnings
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver encryption_config
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver kubernetes_network_config
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver version
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver vpc_config
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver certificate_authority
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver created_at
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver endpoint
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver identities
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver platform_version
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/fargateProfile:FargateProfile::eks_main-eksfargateProfile
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver cluster_name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver fargate_profile_name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver pod_execution_role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver selectors
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver subnet_ids
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver assume_role_policy
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver inline_policies
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver managed_policy_arns
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver path
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver permissions_boundary
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver create_date
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver unique_id
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::eks-main-eks-oidcProvider
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver client_id_lists
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver thumbprint_lists
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver url
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver egress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver ingress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:VpcCni::eks-main-eks-vpc-cni
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver custom_network_config
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver eni_config_label_def
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver eni_mtu
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver external_snat
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver image
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver log_file
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver log_level
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver node_port_support
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver veth_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver warm_eni_target
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver warm_ip_target
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver cidr_blocks
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver from_port
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver ipv6_cidr_blocks
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver prefix_list_ids
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver protocol
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver self
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver source_security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver to_port
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver type
    pulumi:pulumi:Stack eks-main-dev running debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver egress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver ingress
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev running debug: adding resolver owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: instanceRoles -> instance_roles
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [<pulumi_aws.iam.role.Role object at 0x110f484f0>] -> [<pulumi_aws.iam.role.Role object at 0x110f484f0>]
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: provider -> provider
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: <pulumi_kubernetes.provider.Provider object at 0x110c32280> -> <pulumi_kubernetes.provider.Provider object at 0x110c32280>
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: nodeSecurityGroup -> node_security_group
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111d63640> -> <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111d63640>
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: clusterSecurityGroup -> cluster_security_group
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: <pulumi_aws.ec2.security_group.SecurityGroup object at 0x110f48970> -> <pulumi_aws.ec2.security_group.SecurityGroup object at 0x110f48970>
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: eksClusterIngressRule -> eks_cluster_ingress_rule
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x110dcbaf0> -> <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x110dcbaf0>
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: eksCluster -> eks_cluster
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: <pulumi_aws.eks.cluster.Cluster object at 0x110c483a0> -> <pulumi_aws.eks.cluster.Cluster object at 0x110c483a0>
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: core -> core
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'eksNodeAccess': <pulumi_kubernetes.core.v1.ConfigMap.ConfigMap object at 0x1110a7610>, 'provider': <pulumi_kubernetes.provider.Provider object at 0x1110a7730>, 'cluster': <pulumi_aws.eks.cluster.Cluster object at 0x11136b820>, 'subnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'endpoint': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'fargateProfile': <pulumi_aws.eks.fargate_profile.FargateProfile object at 0x111aa3280>, 'storageClasses': {}, 'kubeconfig': {'contexts': [{'context': {'user': 'aws', 'cluster': 'kubernetes'}, 'name': 'aws'}], 'kind': 'Config', 'apiVersion': 'v1', 'clusters': [{'name': 'kubernetes', 'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}}], 'current-context': 'aws', 'users': [{'name': 'aws', 'user': {'exec': {'apiVersion': 'client.authentication.k8s.io/v1alpha1', 'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc']}}}]}, 'instanceRoles': [<pulumi_aws.iam.role.Role object at 0x111aa38b0>], 'oidcProvider': <pulumi_aws.iam.open_id_connect_provider.OpenIdConnectProvider object at 0x111b9f610>, 'clusterSecurityGroup': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111b9f910>, 'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpcId': 'vpc-0b7b646c66cd6f099', 'vpcCni': <pulumi_eks.vpc_cni.VpcCni object at 0x111bdee50>, 'nodeGroupOptions': {'clusterIngressRule': <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x111c6af40>, 'nodeSecurityGroup': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111ceb280>}} -> {'cluster': <pulumi_aws.eks.cluster.Cluster object at 0x11136b820>, 'cluster_security_group': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111b9f910>, 'endpoint': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'instance_roles': [<pulumi_aws.iam.role.Role object at 0x111aa38b0>], 'node_group_options': {'cluster_ingress_rule': <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x111c6af40>, 'node_security_group': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111ceb280>}, 'provider': <pulumi_kubernetes.provider.Provider object at 0x1110a7730>, 'subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpc_id': 'vpc-0b7b646c66cd6f099', 'eks_node_access': <pulumi_kubernetes.core.v1.ConfigMap.ConfigMap object at 0x1110a7610>, 'fargate_profile': <pulumi_aws.eks.fargate_profile.FargateProfile object at 0x111aa3280>, 'kubeconfig': {'contexts': [{'context': {'user': 'aws', 'cluster': 'kubernetes'}, 'name': 'aws'}], 'kind': 'Config', 'apiVersion': 'v1', 'clusters': [{'name': 'kubernetes', 'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}}], 'current-context': 'aws', 'users': [{'name': 'aws', 'user': {'exec': {'apiVersion': 'client.authentication.k8s.io/v1alpha1', 'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc']}}}]}, 'oidc_provider': <pulumi_aws.iam.open_id_connect_provider.OpenIdConnectProvider object at 0x111b9f610>, 'private_subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'storage_classes': {}, 'vpc_cni': <pulumi_eks.vpc_cni.VpcCni object at 0x111bdee50>}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kubeconfig -> kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'kind': 'Config', 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'apiVersion': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec': {'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'apiVersion': 'client.authentication.k8s.io/v1alpha1'}}, 'name': 'aws'}], 'clusters': [{'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}, 'name': 'kubernetes'}]} -> {'kind': 'Config', 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'apiVersion': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec': {'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'apiVersion': 'client.authentication.k8s.io/v1alpha1'}}, 'name': 'aws'}], 'clusters': [{'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}, 'name': 'kubernetes'}]}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name instance_roles
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name provider
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name node_security_group
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name cluster_security_group
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name eks_cluster_ingress_rule
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name eks_cluster
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name core
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: beginning rpc get resource
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'api_version': 'v1', 'binary_data': None, 'data': None, 'immutable': None, 'kind': 'ConfigMap', 'metadata': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: api_version -> apiVersion
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster_name': None, 'fargate_profile_name': None, 'pod_execution_role_arn': None, 'selectors': None, 'subnet_ids': None, 'tags': None, 'arn': None, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'client_id_lists': None, 'thumbprint_lists': None, 'url': None, 'arn': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'custom_network_config': None, 'eni_config_label_def': None, 'eni_mtu': None, 'external_snat': None, 'image': None, 'kubeconfig': None, 'log_file': None, 'log_level': None, 'node_port_support': None, 'veth_prefix': None, 'warm_eni_target': None, 'warm_ip_target': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'api_version': 'v1', 'binary_data': None, 'data': None, 'immutable': None, 'kind': 'ConfigMap', 'metadata': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster_name': None, 'fargate_profile_name': None, 'pod_execution_role_arn': None, 'selectors': None, 'subnet_ids': None, 'tags': None, 'arn': None, 'status': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'client_id_lists': None, 'thumbprint_lists': None, 'url': None, 'arn': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'custom_network_config': None, 'eni_config_label_def': None, 'eni_mtu': None, 'external_snat': None, 'image': None, 'kubeconfig': None, 'log_file': None, 'log_level': None, 'node_port_support': None, 'veth_prefix': None, 'warm_eni_target': None, 'warm_ip_target': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:iam/role:Role, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {} -> {}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: assumeRolePolicy -> assume_role_policy
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]} -> {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: maxSessionDuration -> max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 3600.0 -> 3600
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: createDate -> create_date
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 2021-02-26T14:48:18Z -> 2021-02-26T14:48:18Z
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126 -> arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: uniqueId -> unique_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: AROAQYTQLLIFHBA4LNWT6 -> AROAQYTQLLIFHBA4LNWT6
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: forceDetachPolicies -> force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: False -> False
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: path -> path
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: / -> /
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name assume_role_policy
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name create_date
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name unique_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name path
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=pulumi:providers:kubernetes, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-provider
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: version -> version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 2.8.0 -> 2.8.0
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kubeconfig -> kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]} -> {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: namePrefix -> name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ingress -> ingress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-nodeSecurityGroup-e015189 -> eks-main-eks-nodeSecurityGroup-e015189
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned', 'Name': 'eks-main-eks-nodeSecurityGroup'} -> {'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned', 'Name': 'eks-main-eks-nodeSecurityGroup'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: egress -> egress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: True -> True
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ownerId -> owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 052848974346 -> 052848974346
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: vpcId -> vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name ingress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name egress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ingress -> ingress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: egress -> egress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksClusterSecurityGroup-9283f28 -> eks-main-eks-eksClusterSecurityGroup-9283f28
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: namePrefix -> name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: vpcId -> vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ownerId -> owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 052848974346 -> 052848974346
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: True -> True
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'Name': 'eks-main-eks-eksClusterSecurityGroup'} -> {'Name': 'eks-main-eks-eksClusterSecurityGroup'}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name ingress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name egress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:ec2/securityGroupRule:SecurityGroupRule, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: protocol -> protocol
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: tcp -> tcp
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: sourceSecurityGroupId -> source_security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Allow pods to communicate with the cluster API Server -> Allow pods to communicate with the cluster API Server
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: toPort -> to_port
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 443.0 -> 443
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: type -> type
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ingress -> ingress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: fromPort -> from_port
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 443.0 -> 443
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: securityGroupId -> security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sgrule-3344048136 -> sgrule-3344048136
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: self -> self
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: False -> False
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name protocol
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name source_security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name to_port
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name type
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name from_port
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name self
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:eks/cluster:Cluster, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: vpcConfig -> vpc_config
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'securityGroupIds': ['sg-084343bc5734f4845'], 'publicAccessCidrs': ['0.0.0.0/0'], 'vpcId': 'vpc-0b7b646c66cd6f099', 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'subnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'endpointPublicAccess': True, 'endpointPrivateAccess': False} -> {'subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'endpointPrivateAccess': False, 'endpointPublicAccess': True, 'publicAccessCidrs': ['0.0.0.0/0'], 'security_group_ids': ['sg-084343bc5734f4845'], 'vpc_id': 'vpc-0b7b646c66cd6f099'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: status -> status
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ACTIVE -> ACTIVE
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'Name': 'eks-main-eks-eksCluster'} -> {'Name': 'eks-main-eks-eksCluster'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: version -> version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 1.18 -> 1.18
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: createdAt -> created_at
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 2021-02-26 14:48:23.041 +0000 UTC -> 2021-02-26 14:48:23.041 +0000 UTC
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: certificateAuthority -> certificate_authority
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='} -> {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc -> arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: platformVersion -> platform_version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks.3 -> eks.3
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: endpoint -> endpoint
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com -> https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: identities -> identities
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}] -> [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}]
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kubernetesNetworkConfig -> kubernetes_network_config
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'serviceIpv4Cidr': '172.20.0.0/16'} -> {'serviceIpv4Cidr': '172.20.0.0/16'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: enabledClusterLogTypes -> enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: roleArn -> role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6 -> arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name vpc_config
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name status
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name created_at
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name certificate_authority
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name platform_version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name endpoint
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name identities
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kubernetes_network_config
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=kubernetes:core/v1:ConfigMap, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$kubernetes:core/v1:ConfigMap::eks-main-eks-nodeAccess
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: apiVersion -> api_version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: v1 -> v1
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'name': 'aws-auth', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","data":{"mapRoles":"- rolearn: \'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126\'\\n  username: \'system:node:{{EC2PrivateDNSName}}\'\\n  groups:\\n    - \'system:bootstrappers\'\\n    - \'system:nodes\'\\n"},"kind":"ConfigMap","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"aws-auth","namespace":"kube-system"}}\n'}, 'uid': '621e5b3c-1b49-4b25-9123-2cef6f20daa9', 'creationTimestamp': '2021-02-26T15:00:24Z', 'resourceVersion': '710', 'selfLink': '/api/v1/namespaces/kube-system/configmaps/aws-auth', 'managedFields': [{'operation': 'Update', 'apiVersion': 'v1', 'manager': 'pulumi-resource-kubernetes', 'fieldsV1': {'f:data': {'.': {}, 'f:mapRoles': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}, 'f:annotations': {'.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}}, 'fieldsType': 'FieldsV1', 'time': '2021-02-26T15:00:24Z'}], 'namespace': 'kube-system'} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","data":{"mapRoles":"- rolearn: \'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126\'\\n  username: \'system:node:{{EC2PrivateDNSName}}\'\\n  groups:\\n    - \'system:bootstrappers\'\\n    - \'system:nodes\'\\n"},"kind":"ConfigMap","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"aws-auth","namespace":"kube-system"}}\n'}, 'creation_timestamp': '2021-02-26T15:00:24Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'managed_fields': [{'api_version': 'v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:data': {'.': {}, 'f:mapRoles': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}, 'f:annotations': {'.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:00:24Z'}], 'name': 'aws-auth', 'namespace': 'kube-system', 'resource_version': '710', 'self_link': '/api/v1/namespaces/kube-system/configmaps/aws-auth', 'uid': '621e5b3c-1b49-4b25-9123-2cef6f20daa9'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ConfigMap -> ConfigMap
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: data -> data
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'mapRoles': "- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"} -> {'mapRoles': "- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name api_version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name metadata
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kind
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name data
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=pulumi:providers:kubernetes, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-eks-k8s
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: version -> version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 2.8.0 -> 2.8.0
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kubeconfig -> kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]} -> {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:eks/cluster:Cluster, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: status -> status
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ACTIVE -> ACTIVE
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: enabledClusterLogTypes -> enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: vpcConfig -> vpc_config
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'endpointPublicAccess': True, 'securityGroupIds': ['sg-084343bc5734f4845'], 'subnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'publicAccessCidrs': ['0.0.0.0/0'], 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'vpcId': 'vpc-0b7b646c66cd6f099', 'endpointPrivateAccess': False} -> {'subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'endpointPrivateAccess': False, 'endpointPublicAccess': True, 'publicAccessCidrs': ['0.0.0.0/0'], 'security_group_ids': ['sg-084343bc5734f4845'], 'vpc_id': 'vpc-0b7b646c66cd6f099'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: platformVersion -> platform_version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks.3 -> eks.3
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kubernetesNetworkConfig -> kubernetes_network_config
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'serviceIpv4Cidr': '172.20.0.0/16'} -> {'serviceIpv4Cidr': '172.20.0.0/16'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: version -> version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 1.18 -> 1.18
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: createdAt -> created_at
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 2021-02-26 14:48:23.041 +0000 UTC -> 2021-02-26 14:48:23.041 +0000 UTC
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: certificateAuthority -> certificate_authority
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='} -> {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: identities -> identities
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}] -> [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}]
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: roleArn -> role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6 -> arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: endpoint -> endpoint
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com -> https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'Name': 'eks-main-eks-eksCluster'} -> {'Name': 'eks-main-eks-eksCluster'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc -> arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name status
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name vpc_config
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name platform_version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kubernetes_network_config
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name created_at
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name certificate_authority
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name identities
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name endpoint
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:eks/fargateProfile:FargateProfile, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/fargateProfile:FargateProfile::eks_main-eksfargateProfile
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:eks:us-east-2:052848974346:fargateprofile/eks-main-eks-eksCluster-5d4dcbc/eks_main-eksfargateProfile-00d6206/e4bbef6d-7f40-e761-d583-c101416e841d -> arn:aws:eks:us-east-2:052848974346:fargateprofile/eks-main-eks-eksCluster-5d4dcbc/eks_main-eksfargateProfile-00d6206/e4bbef6d-7f40-e761-d583-c101416e841d
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: clusterName -> cluster_name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: subnetIds -> subnet_ids
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'] -> ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768']
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: status -> status
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ACTIVE -> ACTIVE
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: fargateProfileName -> fargate_profile_name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks_main-eksfargateProfile-00d6206 -> eks_main-eksfargateProfile-00d6206
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: selectors -> selectors
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [{'labels': {}, 'namespace': 'eks-main-app'}, {'namespace': 'kube-system', 'labels': {}}] -> [{'namespace': 'eks-main-app', 'labels': {}}, {'namespace': 'kube-system', 'labels': {}}]
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: podExecutionRoleArn -> pod_execution_role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d -> arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206 -> eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {} -> {}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name cluster_name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name subnet_ids
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name status
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name fargate_profile_name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name selectors
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name pod_execution_role_arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:iam/role:Role, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126 -> arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {} -> {}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: forceDetachPolicies -> force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: False -> False
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: createDate -> create_date
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 2021-02-26T14:48:18Z -> 2021-02-26T14:48:18Z
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: path -> path
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: / -> /
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: uniqueId -> unique_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: AROAQYTQLLIFHBA4LNWT6 -> AROAQYTQLLIFHBA4LNWT6
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: maxSessionDuration -> max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 3600.0 -> 3600
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: assumeRolePolicy -> assume_role_policy
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]} -> {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name force_detach_policies
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name create_date
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name path
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name unique_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name max_session_duration
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name assume_role_policy
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:iam/openIdConnectProvider:OpenIdConnectProvider, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::eks-main-eks-oidcProvider
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F -> arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: thumbprintLists -> thumbprint_lists
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ['9e99a48a9960b14926bb7f3b02e22da2b0ab7280'] -> ['9e99a48a9960b14926bb7f3b02e22da2b0ab7280']
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: clientIdLists -> client_id_lists
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ['sts.amazonaws.com'] -> ['sts.amazonaws.com']
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: url -> url
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F -> oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F -> arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name thumbprint_lists
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name client_id_lists
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name url
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: namePrefix -> name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: egress -> egress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: vpcId -> vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'Name': 'eks-main-eks-eksClusterSecurityGroup'} -> {'Name': 'eks-main-eks-eksClusterSecurityGroup'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: True -> True
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ingress -> ingress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ownerId -> owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 052848974346 -> 052848974346
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-eksClusterSecurityGroup-9283f28 -> eks-main-eks-eksClusterSecurityGroup-9283f28
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name egress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name ingress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=eks:index:VpcCni, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:VpcCni::eks-main-eks-vpc-cni
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:ec2/securityGroupRule:SecurityGroupRule, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: self -> self
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: False -> False
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: toPort -> to_port
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 443.0 -> 443
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: type -> type
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: ingress -> ingress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: sourceSecurityGroupId -> source_security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: protocol -> protocol
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: tcp -> tcp
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Allow pods to communicate with the cluster API Server -> Allow pods to communicate with the cluster API Server
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sgrule-3344048136 -> sgrule-3344048136
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: fromPort -> from_port
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 443.0 -> 443
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: securityGroupId -> security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name self
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name to_port
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name type
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name source_security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name protocol
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name from_port
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name security_group_id
    pulumi:pulumi:Stack eks-main-dev running debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: True -> True
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: tags -> tags
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'Name': 'eks-main-eks-nodeSecurityGroup', 'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned'} -> {'Name': 'eks-main-eks-nodeSecurityGroup', 'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ownerId -> owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 052848974346 -> 052848974346
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: ingress -> ingress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-eks-nodeSecurityGroup-e015189 -> eks-main-eks-nodeSecurityGroup-e015189
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: egress -> egress
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: namePrefix -> name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: vpcId -> vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name revoke_rules_on_delete
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name tags
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name owner_id
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name ingress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name egress
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name_prefix
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name vpc_id
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: kind -> kind
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: contexts -> contexts
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: context -> context
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: user -> user
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: cluster -> cluster
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: apiVersion -> apiVersion
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: current-context -> current-context
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: users -> users
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: user -> user
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: exec -> exec
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: command -> command
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: args -> args
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: apiVersion -> apiVersion
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: clusters -> clusters
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: cluster -> cluster
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: certificate-authority-data -> certificate-authority-data
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: server -> server
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: kubeconfig -> kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: register resource outputs prepared: urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev, props=fields {
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': <pulumi.output.Output object at 0x110d49d00>, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=pulumi:providers:kubernetes, name=k8s
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev, props=fields {
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 28 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 27 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 26 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 25 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 24 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 23 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 22 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 21 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 20 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 19 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 18 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 17 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 16 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 15 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 14 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 13 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 12 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 11 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 10 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 9 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 8 RPCs outstanding
    pulumi:providers:kubernetes k8s  
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=pulumi:providers:kubernetes, urn=urn:pulumi:dev::eks-main::pulumi:providers:kubernetes::k8s
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kubeconfig -> kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'4dabf18193072939515e22adb298388d': '1b47061264138c4ac30d75fd1eb44270', 'value': {'kind': 'Config', 'apiVersion': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec': {'apiVersion': 'client.authentication.k8s.io/v1alpha1', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'command': 'aws'}}, 'name': 'aws'}], 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'clusters': [{'cluster': {'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}, 'name': 'kubernetes'}]}} -> {'4dabf18193072939515e22adb298388d': '1b47061264138c4ac30d75fd1eb44270', 'value': {'kind': 'Config', 'api_version': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec_': {'api_version': 'client.authentication.k8s.io/v1alpha1', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'command': 'aws'}}, 'name': 'aws'}], 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'clusters': [{'cluster': {'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}, 'name': 'kubernetes'}]}}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: version -> version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: 2.8.2 -> 2.8.2
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kubeconfig
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name version
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'api_version': 'v1', 'kind': 'Namespace', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x111db1fa0>, 'spec': None, 'status': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=kubernetes:core/v1:Namespace, name=eks-main-app
    kubernetes:core/v1:Namespace eks-main-app  
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=kubernetes:core/v1:Namespace, urn=urn:pulumi:dev::eks-main::kubernetes:core/v1:Namespace::eks-main-app
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Namespace -> Namespace
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: spec -> spec
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'finalizers': ['kubernetes']} -> {'finalizers': ['kubernetes']}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: apiVersion -> api_version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: v1 -> v1
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: status -> status
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'phase': 'Active'} -> {'phase': 'Active'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'resourceVersion': '977', 'selfLink': '/api/v1/namespaces/eks-main-app', 'managedFields': [{'fieldsV1': {'f:status': {'f:phase': {}}, 'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, '.': {}}, 'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}}}}, 'apiVersion': 'v1', 'operation': 'Update', 'manager': 'pulumi-resource-kubernetes', 'time': '2021-02-26T15:01:42Z', 'fieldsType': 'FieldsV1'}], 'creationTimestamp': '2021-02-26T15:01:42Z', 'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Namespace","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app"}}\n'}, 'name': 'eks-main-app', 'uid': '65530e16-1ba8-4146-b499-6764ac0bf705'} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Namespace","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app"}}\n'}, 'creation_timestamp': '2021-02-26T15:01:42Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'managed_fields': [{'api_version': 'v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:status': {'f:phase': {}}, 'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, '.': {}}, 'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:01:42Z'}], 'name': 'eks-main-app', 'resource_version': '977', 'self_link': '/api/v1/namespaces/eks-main-app', 'uid': '65530e16-1ba8-4146-b499-6764ac0bf705'}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kind
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name spec
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name api_version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name status
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name metadata
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: app -> app
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: app -> app
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: spec -> spec
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev running debug: transforming input property: app -> app
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: spec -> spec
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'api_version': 'v1', 'kind': 'Service', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb700>, 'spec': <pulumi_kubernetes.core.v1._inputs.ServiceSpecArgs object at 0x110ee2730>, 'status': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'api_version': 'apps/v1', 'kind': 'Deployment', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb460>, 'spec': <pulumi_kubernetes.apps.v1._inputs.DeploymentSpecArgs object at 0x110dcb640>, 'status': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment
    kubernetes:core/v1:Service eks-main-app-app-service  
    kubernetes:core/v1:Service eks-main-app-app-service  
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=kubernetes:core/v1:Service, urn=urn:pulumi:dev::eks-main::custom:resource:App$kubernetes:core/v1:Service::eks-main-app-app-service
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: apiVersion -> api_version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: v1 -> v1
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: status -> status
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'loadBalancer': {}} -> {'load_balancer': {}}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Service -> Service
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: spec -> spec
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'type': 'NodePort', 'sessionAffinity': 'None', 'externalTrafficPolicy': 'Cluster', 'ports': [{'port': 80.0, 'nodePort': 31922.0, 'targetPort': 80.0, 'protocol': 'TCP'}], 'selector': {'app': 'nginx'}, 'clusterIP': '172.20.105.167'} -> {'cluster_ip': '172.20.105.167', 'external_traffic_policy': 'Cluster', 'ports': [{'port': 80, 'node_port': 31922, 'protocol': 'TCP', 'target_port': 80.0}], 'selector': {'app': 'nginx'}, 'session_affinity': 'None', 'type': 'NodePort'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-service-xn0x9uqw","namespace":"eks-main-app"},"spec":{"ports":[{"port":80}],"selector":{"app":"nginx"},"type":"NodePort"}}\n', 'pulumi.com/autonamed': 'true'}, 'uid': '9907f937-744a-44d4-8f4d-298464fc4f79', 'name': 'eks-main-app-app-service-xn0x9uqw', 'creationTimestamp': '2021-02-26T15:01:42Z', 'selfLink': '/api/v1/namespaces/eks-main-app/services/eks-main-app-app-service-xn0x9uqw', 'namespace': 'eks-main-app', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'resourceVersion': '983', 'managedFields': [{'operation': 'Update', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}, 'f:pulumi.com/autonamed': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}}, 'f:spec': {'f:sessionAffinity': {}, 'f:selector': {'f:app': {}, '.': {}}, 'f:ports': {'.': {}, 'k:{"port":80,"protocol":"TCP"}': {'.': {}, 'f:targetPort': {}, 'f:protocol': {}, 'f:port': {}}}, 'f:externalTrafficPolicy': {}, 'f:type': {}}}, 'time': '2021-02-26T15:01:42Z', 'fieldsType': 'FieldsV1', 'apiVersion': 'v1', 'manager': 'pulumi-resource-kubernetes'}]} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-service-xn0x9uqw","namespace":"eks-main-app"},"spec":{"ports":[{"port":80}],"selector":{"app":"nginx"},"type":"NodePort"}}\n', 'pulumi.com/autonamed': 'true'}, 'creation_timestamp': '2021-02-26T15:01:42Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'managed_fields': [{'api_version': 'v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:metadata': {'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}, 'f:pulumi.com/autonamed': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}}, 'f:spec': {'f:sessionAffinity': {}, 'f:selector': {'f:app': {}, '.': {}}, 'f:ports': {'.': {}, 'k:{"port":80,"protocol":"TCP"}': {'.': {}, 'f:targetPort': {}, 'f:protocol': {}, 'f:port': {}}}, 'f:externalTrafficPolicy': {}, 'f:type': {}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:01:42Z'}], 'name': 'eks-main-app-app-service-xn0x9uqw', 'namespace': 'eks-main-app', 'resource_version': '983', 'self_link': '/api/v1/namespaces/eks-main-app/services/eks-main-app-app-service-xn0x9uqw', 'uid': '9907f937-744a-44d4-8f4d-298464fc4f79'}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name api_version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name status
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kind
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name spec
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name metadata
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 7 RPCs outstanding
    kubernetes:apps/v1:Deployment eks-main-app-app-deployment  
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=kubernetes:apps/v1:Deployment, urn=urn:pulumi:dev::eks-main::custom:resource:App$kubernetes:apps/v1:Deployment::eks-main-app-app-deployment
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'generation': 1.0, 'resourceVersion': '1439', 'creationTimestamp': '2021-02-26T15:01:42Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi', 'app': 'nginx'}, 'uid': '460878ee-b102-46bc-943c-bc0bca464845', 'managedFields': [{'time': '2021-02-26T15:01:42Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, 'f:app': {}, '.': {}}, 'f:annotations': {'f:pulumi.com/autonamed': {}, '.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:replicas': {}, 'f:progressDeadlineSeconds': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {'f:matchLabels': {'f:app': {}, '.': {}}}, 'f:template': {'f:spec': {'f:containers': {'k:{"name":"eks-main-app"}': {'f:terminationMessagePolicy': {}, 'f:resources': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:image': {}, '.': {}, 'f:terminationMessagePath': {}}}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:schedulerName': {}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app': {}}}}, 'f:strategy': {'f:rollingUpdate': {'f:maxSurge': {}, '.': {}, 'f:maxUnavailable': {}}, 'f:type': {}}}}, 'apiVersion': 'apps/v1', 'operation': 'Update', 'manager': 'pulumi-resource-kubernetes'}, {'apiVersion': 'apps/v1', 'fieldsType': 'FieldsV1', 'time': '2021-02-26T15:03:35Z', 'manager': 'kube-controller-manager', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"Progressing"}': {'f:lastUpdateTime': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, '.': {}, 'k:{"type":"Available"}': {'f:reason': {}, 'f:lastUpdateTime': {}, 'f:type': {}, 'f:status': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}}}, 'f:readyReplicas': {}, 'f:observedGeneration': {}, 'f:replicas': {}, 'f:availableReplicas': {}, 'f:updatedReplicas': {}}, 'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}}, 'operation': 'Update'}], 'selfLink': '/apis/apps/v1/namespaces/eks-main-app/deployments/eks-main-app-app-deployment-349l8jl5', 'name': 'eks-main-app-app-deployment-349l8jl5', 'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app":"nginx","app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-deployment-349l8jl5","namespace":"eks-main-app"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx","name":"eks-main-app"}]}}}}\n', 'deployment.kubernetes.io/revision': '1', 'pulumi.com/autonamed': 'true'}, 'namespace': 'eks-main-app'} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app":"nginx","app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-deployment-349l8jl5","namespace":"eks-main-app"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx","name":"eks-main-app"}]}}}}\n', 'deployment.kubernetes.io/revision': '1', 'pulumi.com/autonamed': 'true'}, 'creation_timestamp': '2021-02-26T15:01:42Z', 'generation': 1, 'labels': {'app.kubernetes.io/managed-by': 'pulumi', 'app': 'nginx'}, 'managed_fields': [{'api_version': 'apps/v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, 'f:app': {}, '.': {}}, 'f:annotations': {'f:pulumi.com/autonamed': {}, '.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:replicas': {}, 'f:progressDeadlineSeconds': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {'f:matchLabels': {'f:app': {}, '.': {}}}, 'f:template': {'f:spec': {'f:containers': {'k:{"name":"eks-main-app"}': {'f:terminationMessagePolicy': {}, 'f:resources': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:image': {}, '.': {}, 'f:terminationMessagePath': {}}}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:schedulerName': {}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app': {}}}}, 'f:strategy': {'f:rollingUpdate': {'f:maxSurge': {}, '.': {}, 'f:maxUnavailable': {}}, 'f:type': {}}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:01:42Z'}, {'api_version': 'apps/v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"Progressing"}': {'f:lastUpdateTime': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, '.': {}, 'k:{"type":"Available"}': {'f:reason': {}, 'f:lastUpdateTime': {}, 'f:type': {}, 'f:status': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}}}, 'f:readyReplicas': {}, 'f:observedGeneration': {}, 'f:replicas': {}, 'f:availableReplicas': {}, 'f:updatedReplicas': {}}, 'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}}, 'manager': 'kube-controller-manager', 'operation': 'Update', 'time': '2021-02-26T15:03:35Z'}], 'name': 'eks-main-app-app-deployment-349l8jl5', 'namespace': 'eks-main-app', 'resource_version': '1439', 'self_link': '/apis/apps/v1/namespaces/eks-main-app/deployments/eks-main-app-app-deployment-349l8jl5', 'uid': '460878ee-b102-46bc-943c-bc0bca464845'}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: status -> status
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'conditions': [{'reason': 'MinimumReplicasAvailable', 'lastTransitionTime': '2021-02-26T15:03:35Z', 'status': 'True', 'type': 'Available', 'lastUpdateTime': '2021-02-26T15:03:35Z', 'message': 'Deployment has minimum availability.'}, {'lastTransitionTime': '2021-02-26T15:01:42Z', 'message': 'ReplicaSet "eks-main-app-app-deployment-349l8jl5-7c7787d64d" has successfully progressed.', 'reason': 'NewReplicaSetAvailable', 'status': 'True', 'lastUpdateTime': '2021-02-26T15:03:35Z', 'type': 'Progressing'}], 'observedGeneration': 1.0, 'availableReplicas': 2.0, 'updatedReplicas': 2.0, 'replicas': 2.0, 'readyReplicas': 2.0} -> {'available_replicas': 2, 'conditions': [{'status': 'True', 'type': 'Available', 'last_transition_time': '2021-02-26T15:03:35Z', 'last_update_time': '2021-02-26T15:03:35Z', 'message': 'Deployment has minimum availability.', 'reason': 'MinimumReplicasAvailable'}, {'status': 'True', 'type': 'Progressing', 'last_transition_time': '2021-02-26T15:01:42Z', 'last_update_time': '2021-02-26T15:03:35Z', 'message': 'ReplicaSet "eks-main-app-app-deployment-349l8jl5-7c7787d64d" has successfully progressed.', 'reason': 'NewReplicaSetAvailable'}], 'observed_generation': 1, 'ready_replicas': 2, 'replicas': 2, 'updated_replicas': 2}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: apiVersion -> api_version
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: apps/v1 -> apps/v1
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: spec -> spec
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'template': {'spec': {'containers': [{'imagePullPolicy': 'Always', 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'resources': {}, 'name': 'eks-main-app', 'image': 'nginx'}], 'dnsPolicy': 'ClusterFirst', 'terminationGracePeriodSeconds': 30.0, 'restartPolicy': 'Always', 'schedulerName': 'default-scheduler', 'securityContext': {}}, 'metadata': {'labels': {'app': 'nginx'}}}, 'revisionHistoryLimit': 10.0, 'selector': {'matchLabels': {'app': 'nginx'}}, 'replicas': 2.0, 'progressDeadlineSeconds': 600.0, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}} -> {'selector': {'match_labels': {'app': 'nginx'}}, 'template': {'metadata': {'labels': {'app': 'nginx'}}, 'spec': {'containers': [{'name': 'eks-main-app', 'image': 'nginx', 'image_pull_policy': 'Always', 'resources': {}, 'termination_message_path': '/dev/termination-log', 'termination_message_policy': 'File'}], 'dns_policy': 'ClusterFirst', 'restart_policy': 'Always', 'scheduler_name': 'default-scheduler', 'security_context': {}, 'termination_grace_period_seconds': 30}}, 'progress_deadline_seconds': 600, 'replicas': 2, 'revision_history_limit': 10, 'strategy': {'rolling_update': {'max_surge': '25%', 'max_unavailable': '25%'}, 'type': 'RollingUpdate'}}
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: Deployment -> Deployment
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name metadata
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name status
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name api_version
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name spec
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name kind
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 6 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 5 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 4 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 3 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 2 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: waiting for quiescence; 1 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev running debug: Canceling all outstanding tasks
    pulumi:pulumi:Stack eks-main-dev running debug: run_pulumi_func completed
    pulumi:providers:aws default_3_26_1  
    pulumi:pulumi:Stack eks-main-dev  1928 debugs
    pulumi:providers:aws default_3_30_1  
 
Diagnostics:
  pulumi:pulumi:Stack (eks-main-dev):
    debug: AWS Auth provider used: "SharedCredentialsProvider"
    debug: AWS Auth provider used: "SharedCredentialsProvider"
    debug: Trying to get account information via iam:GetUser
    debug: AWS Auth provider used: "SharedCredentialsProvider"
    debug: Trying to get account information via sts:GetCallerIdentity
    debug: Trying to get account information via sts:GetCallerIdentity
    debug: registering resource: ty=pulumi:pulumi:Stack, name=eks-main-dev, custom=False, remote=False
    debug: preparing resource for RPC
    debug: registering module kubernetes:meta/v1@2.8.2
    debug: registering module kubernetes:apiextensions.k8s.io/v1@2.8.2
    debug: registering module kubernetes:apiextensions.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:admissionregistration.k8s.io/v1@2.8.2
    debug: registering module kubernetes:admissionregistration.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:apiregistration.k8s.io/v1@2.8.2
    debug: registering module kubernetes:apiregistration.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:core/v1@2.8.2
    debug: registering module kubernetes:apps/v1@2.8.2
    debug: registering module kubernetes:apps/v1beta1@2.8.2
    debug: registering module kubernetes:apps/v1beta2@2.8.2
    debug: registering module kubernetes:auditregistration.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:authentication.k8s.io/v1@2.8.2
    debug: registering module kubernetes:authentication.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:authorization.k8s.io/v1@2.8.2
    debug: registering module kubernetes:authorization.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:autoscaling/v1@2.8.2
    debug: registering module kubernetes:autoscaling/v2beta1@2.8.2
    debug: registering module kubernetes:autoscaling/v2beta2@2.8.2
    debug: registering module kubernetes:batch/v1@2.8.2
    debug: registering module kubernetes:batch/v1beta1@2.8.2
    debug: registering module kubernetes:batch/v2alpha1@2.8.2
    debug: registering module kubernetes:certificates.k8s.io/v1@2.8.2
    debug: registering module kubernetes:certificates.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:coordination.k8s.io/v1@2.8.2
    debug: registering module kubernetes:coordination.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:discovery.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:events.k8s.io/v1@2.8.2
    debug: registering module kubernetes:events.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:extensions/v1beta1@2.8.2
    debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:networking.k8s.io/v1@2.8.2
    debug: registering module kubernetes:networking.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:node.k8s.io/v1@2.8.2
    debug: registering module kubernetes:node.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:node.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:policy/v1beta1@2.8.2
    debug: registering module kubernetes:rbac.authorization.k8s.io/v1@2.8.2
    debug: registering module kubernetes:rbac.authorization.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:rbac.authorization.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:scheduling.k8s.io/v1@2.8.2
    debug: registering module kubernetes:scheduling.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:scheduling.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:settings.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:storage.k8s.io/v1@2.8.2
    debug: registering module kubernetes:storage.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:storage.k8s.io/v1beta1@2.8.2
    debug: registering package kubernetes@2.8.2
    debug: registering module aws:accessanalyzer/analyzer@3.30.1
    debug: registering module aws:acm/certificate@3.30.1
    debug: registering module aws:acm/certificateValidation@3.30.1
    debug: registering module aws:acmpca/certificateAuthority@3.30.1
    debug: registering module aws:alb/listener@3.30.1
    debug: registering module aws:alb/listenerCertificate@3.30.1
    debug: registering module aws:alb/listenerRule@3.30.1
    debug: registering module aws:alb/loadBalancer@3.30.1
    debug: registering module aws:alb/targetGroup@3.30.1
    debug: registering module aws:alb/targetGroupAttachment@3.30.1
    debug: registering module aws:amp/workspace@3.30.1
    debug: registering module aws:apigateway/account@3.30.1
    debug: registering module aws:apigateway/apiKey@3.30.1
    debug: registering module aws:apigateway/authorizer@3.30.1
    debug: registering module aws:apigateway/basePathMapping@3.30.1
    debug: registering module aws:apigateway/clientCertificate@3.30.1
    debug: registering module aws:apigateway/deployment@3.30.1
    debug: registering module aws:apigateway/documentationPart@3.30.1
    debug: registering module aws:apigateway/documentationVersion@3.30.1
    debug: registering module aws:apigateway/domainName@3.30.1
    debug: registering module aws:apigateway/integration@3.30.1
    debug: registering module aws:apigateway/integrationResponse@3.30.1
    debug: registering module aws:apigateway/method@3.30.1
    debug: registering module aws:apigateway/methodResponse@3.30.1
    debug: registering module aws:apigateway/methodSettings@3.30.1
    debug: registering module aws:apigateway/model@3.30.1
    debug: registering module aws:apigateway/requestValidator@3.30.1
    debug: registering module aws:apigateway/resource@3.30.1
    debug: registering module aws:apigateway/response@3.30.1
    debug: registering module aws:apigateway/restApi@3.30.1
    debug: registering module aws:apigateway/restApiPolicy@3.30.1
    debug: registering module aws:apigateway/stage@3.30.1
    debug: registering module aws:apigateway/usagePlan@3.30.1
    debug: registering module aws:apigateway/usagePlanKey@3.30.1
    debug: registering module aws:apigateway/vpcLink@3.30.1
    debug: registering module aws:apigatewayv2/api@3.30.1
    debug: registering module aws:apigatewayv2/apiMapping@3.30.1
    debug: registering module aws:apigatewayv2/authorizer@3.30.1
    debug: registering module aws:apigatewayv2/deployment@3.30.1
    debug: registering module aws:apigatewayv2/domainName@3.30.1
    debug: registering module aws:apigatewayv2/integration@3.30.1
    debug: registering module aws:apigatewayv2/integrationResponse@3.30.1
    debug: registering module aws:apigatewayv2/model@3.30.1
    debug: registering module aws:apigatewayv2/route@3.30.1
    debug: registering module aws:apigatewayv2/routeResponse@3.30.1
    debug: registering module aws:apigatewayv2/stage@3.30.1
    debug: registering module aws:apigatewayv2/vpcLink@3.30.1
    debug: registering module aws:appautoscaling/policy@3.30.1
    debug: registering module aws:appautoscaling/scheduledAction@3.30.1
    debug: registering module aws:appautoscaling/target@3.30.1
    debug: registering module aws:applicationloadbalancing/listener@3.30.1
    debug: registering module aws:applicationloadbalancing/listenerCertificate@3.30.1
    debug: registering module aws:applicationloadbalancing/listenerRule@3.30.1
    debug: registering module aws:applicationloadbalancing/loadBalancer@3.30.1
    debug: registering module aws:applicationloadbalancing/targetGroup@3.30.1
    debug: registering module aws:applicationloadbalancing/targetGroupAttachment@3.30.1
    debug: registering module aws:appmesh/gatewayRoute@3.30.1
    debug: registering module aws:appmesh/mesh@3.30.1
    debug: registering module aws:appmesh/route@3.30.1
    debug: registering module aws:appmesh/virtualGateway@3.30.1
    debug: registering module aws:appmesh/virtualNode@3.30.1
    debug: registering module aws:appmesh/virtualRouter@3.30.1
    debug: registering module aws:appmesh/virtualService@3.30.1
    debug: registering module aws:appsync/apiKey@3.30.1
    debug: registering module aws:appsync/dataSource@3.30.1
    debug: registering module aws:appsync/function@3.30.1
    debug: registering module aws:appsync/graphQLApi@3.30.1
    debug: registering module aws:appsync/resolver@3.30.1
    debug: registering module aws:athena/database@3.30.1
    debug: registering module aws:athena/namedQuery@3.30.1
    debug: registering module aws:athena/workgroup@3.30.1
    debug: registering module aws:autoscaling/attachment@3.30.1
    debug: registering module aws:autoscaling/group@3.30.1
    debug: registering module aws:autoscaling/lifecycleHook@3.30.1
    debug: registering module aws:autoscaling/notification@3.30.1
    debug: registering module aws:autoscaling/policy@3.30.1
    debug: registering module aws:autoscaling/schedule@3.30.1
    debug: registering module aws:autoscalingplans/scalingPlan@3.30.1
    debug: registering module aws:backup/globalSettings@3.30.1
    debug: registering module aws:backup/plan@3.30.1
    debug: registering module aws:backup/regionSettings@3.30.1
    debug: registering module aws:backup/selection@3.30.1
    debug: registering module aws:backup/vault@3.30.1
    debug: registering module aws:backup/vaultNotifications@3.30.1
    debug: registering module aws:backup/vaultPolicy@3.30.1
    debug: registering module aws:batch/computeEnvironment@3.30.1
    debug: registering module aws:batch/jobDefinition@3.30.1
    debug: registering module aws:batch/jobQueue@3.30.1
    debug: registering module aws:budgets/budget@3.30.1
    debug: registering module aws:cfg/aggregateAuthorization@3.30.1
    debug: registering module aws:cfg/configurationAggregator@3.30.1
    debug: registering module aws:cfg/conformancePack@3.30.1
    debug: registering module aws:cfg/deliveryChannel@3.30.1
    debug: registering module aws:cfg/organizationCustomRule@3.30.1
    debug: registering module aws:cfg/organizationManagedRule@3.30.1
    debug: registering module aws:cfg/recorder@3.30.1
    debug: registering module aws:cfg/recorderStatus@3.30.1
    debug: registering module aws:cfg/remediationConfiguration@3.30.1
    debug: registering module aws:cfg/rule@3.30.1
    debug: registering module aws:cloud9/environmentEC2@3.30.1
    debug: registering module aws:cloudformation/stack@3.30.1
    debug: registering module aws:cloudformation/stackSet@3.30.1
    debug: registering module aws:cloudformation/stackSetInstance@3.30.1
    debug: registering module aws:cloudfront/cachePolicy@3.30.1
    debug: registering module aws:cloudfront/distribution@3.30.1
    debug: registering module aws:cloudfront/originAccessIdentity@3.30.1
    debug: registering module aws:cloudfront/originRequestPolicy@3.30.1
    debug: registering module aws:cloudfront/publicKey@3.30.1
    debug: registering module aws:cloudfront/realtimeLogConfig@3.30.1
    debug: registering module aws:cloudhsmv2/cluster@3.30.1
    debug: registering module aws:cloudhsmv2/hsm@3.30.1
    debug: registering module aws:cloudtrail/trail@3.30.1
    debug: registering module aws:cloudwatch/compositeAlarm@3.30.1
    debug: registering module aws:cloudwatch/dashboard@3.30.1
    debug: registering module aws:cloudwatch/eventArchive@3.30.1
    debug: registering module aws:cloudwatch/eventBus@3.30.1
    debug: registering module aws:cloudwatch/eventPermission@3.30.1
    debug: registering module aws:cloudwatch/eventRule@3.30.1
    debug: registering module aws:cloudwatch/eventTarget@3.30.1
    debug: registering module aws:cloudwatch/logDestination@3.30.1
    debug: registering module aws:cloudwatch/logDestinationPolicy@3.30.1
    debug: registering module aws:cloudwatch/logGroup@3.30.1
    debug: registering module aws:cloudwatch/logMetricFilter@3.30.1
    debug: registering module aws:cloudwatch/logResourcePolicy@3.30.1
    debug: registering module aws:cloudwatch/logStream@3.30.1
    debug: registering module aws:cloudwatch/logSubscriptionFilter@3.30.1
    debug: registering module aws:cloudwatch/metricAlarm@3.30.1
    debug: registering module aws:codeartifact/domain@3.30.1
    debug: registering module aws:codeartifact/domainPermissions@3.30.1
    debug: registering module aws:codeartifact/repository@3.30.1
    debug: registering module aws:codeartifact/repositoryPermissionsPolicy@3.30.1
    debug: registering module aws:codebuild/project@3.30.1
    debug: registering module aws:codebuild/reportGroup@3.30.1
    debug: registering module aws:codebuild/sourceCredential@3.30.1
    debug: registering module aws:codebuild/webhook@3.30.1
    debug: registering module aws:codecommit/repository@3.30.1
    debug: registering module aws:codecommit/trigger@3.30.1
    debug: registering module aws:codedeploy/application@3.30.1
    debug: registering module aws:codedeploy/deploymentConfig@3.30.1
    debug: registering module aws:codedeploy/deploymentGroup@3.30.1
    debug: registering module aws:codepipeline/pipeline@3.30.1
    debug: registering module aws:codepipeline/webhook@3.30.1
    debug: registering module aws:codestarconnections/connection@3.30.1
    debug: registering module aws:codestarnotifications/notificationRule@3.30.1
    debug: registering module aws:cognito/identityPool@3.30.1
    debug: registering module aws:cognito/identityPoolRoleAttachment@3.30.1
    debug: registering module aws:cognito/identityProvider@3.30.1
    debug: registering module aws:cognito/resourceServer@3.30.1
    debug: registering module aws:cognito/userGroup@3.30.1
    debug: registering module aws:cognito/userPool@3.30.1
    debug: registering module aws:cognito/userPoolClient@3.30.1
    debug: registering module aws:cognito/userPoolDomain@3.30.1
    debug: registering module aws:cur/reportDefinition@3.30.1
    debug: registering module aws:datapipeline/pipeline@3.30.1
    debug: registering module aws:datasync/agent@3.30.1
    debug: registering module aws:datasync/efsLocation@3.30.1
    debug: registering module aws:datasync/locationFsxWindows@3.30.1
    debug: registering module aws:datasync/locationSmb@3.30.1
    debug: registering module aws:datasync/nfsLocation@3.30.1
    debug: registering module aws:datasync/s3Location@3.30.1
    debug: registering module aws:datasync/task@3.30.1
    debug: registering module aws:dax/cluster@3.30.1
    debug: registering module aws:dax/parameterGroup@3.30.1
    debug: registering module aws:dax/subnetGroup@3.30.1
    debug: registering module aws:devicefarm/project@3.30.1
    debug: registering module aws:directconnect/bgpPeer@3.30.1
    debug: registering module aws:directconnect/connection@3.30.1
    debug: registering module aws:directconnect/connectionAssociation@3.30.1
    debug: registering module aws:directconnect/gateway@3.30.1
    debug: registering module aws:directconnect/gatewayAssociation@3.30.1
    debug: registering module aws:directconnect/gatewayAssociationProposal@3.30.1
    debug: registering module aws:directconnect/hostedPrivateVirtualInterface@3.30.1
    debug: registering module aws:directconnect/hostedPrivateVirtualInterfaceAccepter@3.30.1
    debug: registering module aws:directconnect/hostedPublicVirtualInterface@3.30.1
    debug: registering module aws:directconnect/hostedPublicVirtualInterfaceAccepter@3.30.1
    debug: registering module aws:directconnect/hostedTransitVirtualInterface@3.30.1
    debug: registering module aws:directconnect/hostedTransitVirtualInterfaceAcceptor@3.30.1
    debug: registering module aws:directconnect/linkAggregationGroup@3.30.1
    debug: registering module aws:directconnect/privateVirtualInterface@3.30.1
    debug: registering module aws:directconnect/publicVirtualInterface@3.30.1
    debug: registering module aws:directconnect/transitVirtualInterface@3.30.1
    debug: registering module aws:directoryservice/conditionalForwader@3.30.1
    debug: registering module aws:directoryservice/directory@3.30.1
    debug: registering module aws:directoryservice/logService@3.30.1
    debug: registering module aws:dlm/lifecyclePolicy@3.30.1
    debug: registering module aws:dms/certificate@3.30.1
    debug: registering module aws:dms/endpoint@3.30.1
    debug: registering module aws:dms/eventSubscription@3.30.1
    debug: registering module aws:dms/replicationInstance@3.30.1
    debug: registering module aws:dms/replicationSubnetGroup@3.30.1
    debug: registering module aws:dms/replicationTask@3.30.1
    debug: registering module aws:docdb/cluster@3.30.1
    debug: registering module aws:docdb/clusterInstance@3.30.1
    debug: registering module aws:docdb/clusterParameterGroup@3.30.1
    debug: registering module aws:docdb/clusterSnapshot@3.30.1
    debug: registering module aws:docdb/subnetGroup@3.30.1
    debug: registering module aws:dynamodb/globalTable@3.30.1
    debug: registering module aws:dynamodb/table@3.30.1
    debug: registering module aws:dynamodb/tableItem@3.30.1
    debug: registering module aws:ebs/defaultKmsKey@3.30.1
    debug: registering module aws:ebs/encryptionByDefault@3.30.1
    debug: registering module aws:ebs/snapshot@3.30.1
    debug: registering module aws:ebs/snapshotCopy@3.30.1
    debug: registering module aws:ebs/volume@3.30.1
    debug: registering module aws:ec2/ami@3.30.1
    debug: registering module aws:ec2/amiCopy@3.30.1
    debug: registering module aws:ec2/amiFromInstance@3.30.1
    debug: registering module aws:ec2/amiLaunchPermission@3.30.1
    debug: registering module aws:ec2/availabilityZoneGroup@3.30.1
    debug: registering module aws:ec2/capacityReservation@3.30.1
    debug: registering module aws:ec2/carrierGateway@3.30.1
    debug: registering module aws:ec2/customerGateway@3.30.1
    debug: registering module aws:ec2/dedicatedHost@3.30.1
    debug: registering module aws:ec2/defaultNetworkAcl@3.30.1
    debug: registering module aws:ec2/defaultRouteTable@3.30.1
    debug: registering module aws:ec2/defaultSecurityGroup@3.30.1
    debug: registering module aws:ec2/defaultSubnet@3.30.1
    debug: registering module aws:ec2/defaultVpc@3.30.1
    debug: registering module aws:ec2/defaultVpcDhcpOptions@3.30.1
    debug: registering module aws:ec2/egressOnlyInternetGateway@3.30.1
    debug: registering module aws:ec2/eip@3.30.1
    debug: registering module aws:ec2/eipAssociation@3.30.1
    debug: registering module aws:ec2/fleet@3.30.1
    debug: registering module aws:ec2/flowLog@3.30.1
    debug: registering module aws:ec2/instance@3.30.1
    debug: registering module aws:ec2/internetGateway@3.30.1
    debug: registering module aws:ec2/keyPair@3.30.1
    debug: registering module aws:ec2/launchConfiguration@3.30.1
    debug: registering module aws:ec2/launchTemplate@3.30.1
    debug: registering module aws:ec2/localGatewayRoute@3.30.1
    debug: registering module aws:ec2/localGatewayRouteTableVpcAssociation@3.30.1
    debug: registering module aws:ec2/mainRouteTableAssociation@3.30.1
    debug: registering module aws:ec2/managedPrefixList@3.30.1
    debug: registering module aws:ec2/natGateway@3.30.1
    debug: registering module aws:ec2/networkAcl@3.30.1
    debug: registering module aws:ec2/networkAclRule@3.30.1
    debug: registering module aws:ec2/networkInterface@3.30.1
    debug: registering module aws:ec2/networkInterfaceAttachment@3.30.1
    debug: registering module aws:ec2/networkInterfaceSecurityGroupAttachment@3.30.1
    debug: registering module aws:ec2/peeringConnectionOptions@3.30.1
    debug: registering module aws:ec2/placementGroup@3.30.1
    debug: registering module aws:ec2/proxyProtocolPolicy@3.30.1
    debug: registering module aws:ec2/route@3.30.1
    debug: registering module aws:ec2/routeTable@3.30.1
    debug: registering module aws:ec2/routeTableAssociation@3.30.1
    debug: registering module aws:ec2/securityGroup@3.30.1
    debug: registering module aws:ec2/securityGroupRule@3.30.1
    debug: registering module aws:ec2/snapshotCreateVolumePermission@3.30.1
    debug: registering module aws:ec2/spotDatafeedSubscription@3.30.1
    debug: registering module aws:ec2/spotFleetRequest@3.30.1
    debug: registering module aws:ec2/spotInstanceRequest@3.30.1
    debug: registering module aws:ec2/subnet@3.30.1
    debug: registering module aws:ec2/tag@3.30.1
    debug: registering module aws:ec2/trafficMirrorFilter@3.30.1
    debug: registering module aws:ec2/trafficMirrorFilterRule@3.30.1
    debug: registering module aws:ec2/trafficMirrorSession@3.30.1
    debug: registering module aws:ec2/trafficMirrorTarget@3.30.1
    debug: registering module aws:ec2/transitGatewayPeeringAttachmentAccepter@3.30.1
    debug: registering module aws:ec2/volumeAttachment@3.30.1
    debug: registering module aws:ec2/vpc@3.30.1
    debug: registering module aws:ec2/vpcDhcpOptions@3.30.1
    debug: registering module aws:ec2/vpcDhcpOptionsAssociation@3.30.1
    debug: registering module aws:ec2/vpcEndpoint@3.30.1
    debug: registering module aws:ec2/vpcEndpointConnectionNotification@3.30.1
    debug: registering module aws:ec2/vpcEndpointRouteTableAssociation@3.30.1
    debug: registering module aws:ec2/vpcEndpointService@3.30.1
    debug: registering module aws:ec2/vpcEndpointServiceAllowedPrinciple@3.30.1
    debug: registering module aws:ec2/vpcEndpointSubnetAssociation@3.30.1
    debug: registering module aws:ec2/vpcIpv4CidrBlockAssociation@3.30.1
    debug: registering module aws:ec2/vpcPeeringConnection@3.30.1
    debug: registering module aws:ec2/vpcPeeringConnectionAccepter@3.30.1
    debug: registering module aws:ec2/vpnConnection@3.30.1
    debug: registering module aws:ec2/vpnConnectionRoute@3.30.1
    debug: registering module aws:ec2/vpnGateway@3.30.1
    debug: registering module aws:ec2/vpnGatewayAttachment@3.30.1
    debug: registering module aws:ec2/vpnGatewayRoutePropagation@3.30.1
    debug: registering module aws:ec2clientvpn/authorizationRule@3.30.1
    debug: registering module aws:ec2clientvpn/endpoint@3.30.1
    debug: registering module aws:ec2clientvpn/networkAssociation@3.30.1
    debug: registering module aws:ec2clientvpn/route@3.30.1
    debug: registering module aws:ec2transitgateway/peeringAttachment@3.30.1
    debug: registering module aws:ec2transitgateway/prefixListReference@3.30.1
    debug: registering module aws:ec2transitgateway/route@3.30.1
    debug: registering module aws:ec2transitgateway/routeTable@3.30.1
    debug: registering module aws:ec2transitgateway/routeTableAssociation@3.30.1
    debug: registering module aws:ec2transitgateway/routeTablePropagation@3.30.1
    debug: registering module aws:ec2transitgateway/transitGateway@3.30.1
    debug: registering module aws:ec2transitgateway/vpcAttachment@3.30.1
    debug: registering module aws:ec2transitgateway/vpcAttachmentAccepter@3.30.1
    debug: registering module aws:ecr/lifecyclePolicy@3.30.1
    debug: registering module aws:ecr/repository@3.30.1
    debug: registering module aws:ecr/repositoryPolicy@3.30.1
    debug: registering module aws:ecs/capacityProvider@3.30.1
    debug: registering module aws:ecs/cluster@3.30.1
    debug: registering module aws:ecs/service@3.30.1
    debug: registering module aws:ecs/taskDefinition@3.30.1
    debug: registering module aws:efs/accessPoint@3.30.1
    debug: registering module aws:efs/fileSystem@3.30.1
    debug: registering module aws:efs/fileSystemPolicy@3.30.1
    debug: registering module aws:efs/mountTarget@3.30.1
    debug: registering module aws:eks/cluster@3.30.1
    debug: registering module aws:eks/fargateProfile@3.30.1
    debug: registering module aws:eks/nodeGroup@3.30.1
    debug: registering module aws:elasticache/cluster@3.30.1
    debug: registering module aws:elasticache/globalReplicationGroup@3.30.1
    debug: registering module aws:elasticache/parameterGroup@3.30.1
    debug: registering module aws:elasticache/replicationGroup@3.30.1
    debug: registering module aws:elasticache/securityGroup@3.30.1
    debug: registering module aws:elasticache/subnetGroup@3.30.1
    debug: registering module aws:elasticbeanstalk/application@3.30.1
    debug: registering module aws:elasticbeanstalk/applicationVersion@3.30.1
    debug: registering module aws:elasticbeanstalk/configurationTemplate@3.30.1
    debug: registering module aws:elasticbeanstalk/environment@3.30.1
    debug: registering module aws:elasticloadbalancing/appCookieStickinessPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/attachment@3.30.1
    debug: registering module aws:elasticloadbalancing/listenerPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancer@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancerBackendServerPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancerCookieStickinessPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancerPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/sslNegotiationPolicy@3.30.1
    debug: registering module aws:elasticloadbalancingv2/listener@3.30.1
    debug: registering module aws:elasticloadbalancingv2/listenerCertificate@3.30.1
    debug: registering module aws:elasticloadbalancingv2/listenerRule@3.30.1
    debug: registering module aws:elasticloadbalancingv2/loadBalancer@3.30.1
    debug: registering module aws:elasticloadbalancingv2/targetGroup@3.30.1
    debug: registering module aws:elasticloadbalancingv2/targetGroupAttachment@3.30.1
    debug: registering module aws:elasticsearch/domain@3.30.1
    debug: registering module aws:elasticsearch/domainPolicy@3.30.1
    debug: registering module aws:elastictranscoder/pipeline@3.30.1
    debug: registering module aws:elastictranscoder/preset@3.30.1
    debug: registering module aws:elb/appCookieStickinessPolicy@3.30.1
    debug: registering module aws:elb/attachment@3.30.1
    debug: registering module aws:elb/listenerPolicy@3.30.1
    debug: registering module aws:elb/loadBalancer@3.30.1
    debug: registering module aws:elb/loadBalancerBackendServerPolicy@3.30.1
    debug: registering module aws:elb/loadBalancerCookieStickinessPolicy@3.30.1
    debug: registering module aws:elb/loadBalancerPolicy@3.30.1
    debug: registering module aws:elb/sslNegotiationPolicy@3.30.1
    debug: registering module aws:emr/cluster@3.30.1
    debug: registering module aws:emr/instanceFleet@3.30.1
    debug: registering module aws:emr/instanceGroup@3.30.1
    debug: registering module aws:emr/managedScalingPolicy@3.30.1
    debug: registering module aws:emr/securityConfiguration@3.30.1
    debug: registering module aws:fms/adminAccount@3.30.1
    debug: registering module aws:fms/policy@3.30.1
    debug: registering module aws:fsx/lustreFileSystem@3.30.1
    debug: registering module aws:fsx/windowsFileSystem@3.30.1
    debug: registering module aws:gamelift/alias@3.30.1
    debug: registering module aws:gamelift/build@3.30.1
    debug: registering module aws:gamelift/fleet@3.30.1
    debug: registering module aws:gamelift/gameSessionQueue@3.30.1
    debug: registering module aws:glacier/vault@3.30.1
    debug: registering module aws:glacier/vaultLock@3.30.1
    debug: registering module aws:globalaccelerator/accelerator@3.30.1
    debug: registering module aws:globalaccelerator/endpointGroup@3.30.1
    debug: registering module aws:globalaccelerator/listener@3.30.1
    debug: registering module aws:glue/catalogDatabase@3.30.1
    debug: registering module aws:glue/catalogTable@3.30.1
    debug: registering module aws:glue/classifier@3.30.1
    debug: registering module aws:glue/connection@3.30.1
    debug: registering module aws:glue/crawler@3.30.1
    debug: registering module aws:glue/dataCatalogEncryptionSettings@3.30.1
    debug: registering module aws:glue/devEndpoint@3.30.1
    debug: registering module aws:glue/job@3.30.1
    debug: registering module aws:glue/mLTransform@3.30.1
    debug: registering module aws:glue/partition@3.30.1
    debug: registering module aws:glue/registry@3.30.1
    debug: registering module aws:glue/resourcePolicy@3.30.1
    debug: registering module aws:glue/schema@3.30.1
    debug: registering module aws:glue/securityConfiguration@3.30.1
    debug: registering module aws:glue/trigger@3.30.1
    debug: registering module aws:glue/userDefinedFunction@3.30.1
    debug: registering module aws:glue/workflow@3.30.1
    debug: registering module aws:guardduty/detector@3.30.1
    debug: registering module aws:guardduty/filter@3.30.1
    debug: registering module aws:guardduty/iPSet@3.30.1
    debug: registering module aws:guardduty/inviteAccepter@3.30.1
    debug: registering module aws:guardduty/member@3.30.1
    debug: registering module aws:guardduty/organizationAdminAccount@3.30.1
    debug: registering module aws:guardduty/organizationConfiguration@3.30.1
    debug: registering module aws:guardduty/publishingDestination@3.30.1
    debug: registering module aws:guardduty/threatIntelSet@3.30.1
    debug: registering module aws:iam/accessKey@3.30.1
    debug: registering module aws:iam/accountAlias@3.30.1
    debug: registering module aws:iam/accountPasswordPolicy@3.30.1
    debug: registering module aws:iam/group@3.30.1
    debug: registering module aws:iam/groupMembership@3.30.1
    debug: registering module aws:iam/groupPolicy@3.30.1
    debug: registering module aws:iam/groupPolicyAttachment@3.30.1
    debug: registering module aws:iam/instanceProfile@3.30.1
    debug: registering module aws:iam/openIdConnectProvider@3.30.1
    debug: registering module aws:iam/policy@3.30.1
    debug: registering module aws:iam/policyAttachment@3.30.1
    debug: registering module aws:iam/role@3.30.1
    debug: registering module aws:iam/rolePolicy@3.30.1
    debug: registering module aws:iam/rolePolicyAttachment@3.30.1
    debug: registering module aws:iam/samlProvider@3.30.1
    debug: registering module aws:iam/serverCertificate@3.30.1
    debug: registering module aws:iam/serviceLinkedRole@3.30.1
    debug: registering module aws:iam/sshKey@3.30.1
    debug: registering module aws:iam/user@3.30.1
    debug: registering module aws:iam/userGroupMembership@3.30.1
    debug: registering module aws:iam/userLoginProfile@3.30.1
    debug: registering module aws:iam/userPolicy@3.30.1
    debug: registering module aws:iam/userPolicyAttachment@3.30.1
    debug: registering module aws:imagebuilder/component@3.30.1
    debug: registering module aws:imagebuilder/distributionConfiguration@3.30.1
    debug: registering module aws:imagebuilder/image@3.30.1
    debug: registering module aws:imagebuilder/imagePipeline@3.30.1
    debug: registering module aws:imagebuilder/imageRecipe@3.30.1
    debug: registering module aws:imagebuilder/infrastructureConfiguration@3.30.1
    debug: registering module aws:inspector/assessmentTarget@3.30.1
    debug: registering module aws:inspector/assessmentTemplate@3.30.1
    debug: registering module aws:inspector/resourceGroup@3.30.1
    debug: registering module aws:iot/certificate@3.30.1
    debug: registering module aws:iot/policy@3.30.1
    debug: registering module aws:iot/policyAttachment@3.30.1
    debug: registering module aws:iot/roleAlias@3.30.1
    debug: registering module aws:iot/thing@3.30.1
    debug: registering module aws:iot/thingPrincipalAttachment@3.30.1
    debug: registering module aws:iot/thingType@3.30.1
    debug: registering module aws:iot/topicRule@3.30.1
    debug: registering module aws:kinesis/analyticsApplication@3.30.1
    debug: registering module aws:kinesis/firehoseDeliveryStream@3.30.1
    debug: registering module aws:kinesis/stream@3.30.1
    debug: registering module aws:kinesis/videoStream@3.30.1
    debug: registering module aws:kinesisanalyticsv2/application@3.30.1
    debug: registering module aws:kms/alias@3.30.1
    debug: registering module aws:kms/ciphertext@3.30.1
    debug: registering module aws:kms/externalKey@3.30.1
    debug: registering module aws:kms/grant@3.30.1
    debug: registering module aws:kms/key@3.30.1
    debug: registering module aws:lakeformation/dataLakeSettings@3.30.1
    debug: registering module aws:lakeformation/permissions@3.30.1
    debug: registering module aws:lakeformation/resource@3.30.1
    debug: registering module aws:lambda/alias@3.30.1
    debug: registering module aws:lambda/codeSigningConfig@3.30.1
    debug: registering module aws:lambda/eventSourceMapping@3.30.1
    debug: registering module aws:lambda/function@3.30.1
    debug: registering module aws:lambda/functionEventInvokeConfig@3.30.1
    debug: registering module aws:lambda/layerVersion@3.30.1
    debug: registering module aws:lambda/permission@3.30.1
    debug: registering module aws:lambda/provisionedConcurrencyConfig@3.30.1
    debug: registering module aws:lb/listener@3.30.1
    debug: registering module aws:lb/listenerCertificate@3.30.1
    debug: registering module aws:lb/listenerRule@3.30.1
    debug: registering module aws:lb/loadBalancer@3.30.1
    debug: registering module aws:lb/targetGroup@3.30.1
    debug: registering module aws:lb/targetGroupAttachment@3.30.1
    debug: registering module aws:lex/bot@3.30.1
    debug: registering module aws:lex/botAlias@3.30.1
    debug: registering module aws:lex/intent@3.30.1
    debug: registering module aws:lex/slotType@3.30.1
    debug: registering module aws:licensemanager/association@3.30.1
    debug: registering module aws:licensemanager/licenseConfiguration@3.30.1
    debug: registering module aws:lightsail/domain@3.30.1
    debug: registering module aws:lightsail/instance@3.30.1
    debug: registering module aws:lightsail/keyPair@3.30.1
    debug: registering module aws:lightsail/staticIp@3.30.1
    debug: registering module aws:lightsail/staticIpAttachment@3.30.1
    debug: registering module aws:macie/memberAccountAssociation@3.30.1
    debug: registering module aws:macie/s3BucketAssociation@3.30.1
    debug: registering module aws:mediaconvert/queue@3.30.1
    debug: registering module aws:mediapackage/channel@3.30.1
    debug: registering module aws:mediastore/container@3.30.1
    debug: registering module aws:mediastore/containerPolicy@3.30.1
    debug: registering module aws:mq/broker@3.30.1
    debug: registering module aws:mq/configuration@3.30.1
    debug: registering module aws:msk/cluster@3.30.1
    debug: registering module aws:msk/configuration@3.30.1
    debug: registering module aws:msk/scramSecretAssociation@3.30.1
    debug: registering module aws:neptune/cluster@3.30.1
    debug: registering module aws:neptune/clusterInstance@3.30.1
    debug: registering module aws:neptune/clusterParameterGroup@3.30.1
    debug: registering module aws:neptune/clusterSnapshot@3.30.1
    debug: registering module aws:neptune/eventSubscription@3.30.1
    debug: registering module aws:neptune/parameterGroup@3.30.1
    debug: registering module aws:neptune/subnetGroup@3.30.1
    debug: registering module aws:networkfirewall/firewall@3.30.1
    debug: registering module aws:networkfirewall/firewallPolicy@3.30.1
    debug: registering module aws:networkfirewall/loggingConfiguration@3.30.1
    debug: registering module aws:networkfirewall/resourcePolicy@3.30.1
    debug: registering module aws:networkfirewall/ruleGroup@3.30.1
    debug: registering module aws:opsworks/application@3.30.1
    debug: registering module aws:opsworks/customLayer@3.30.1
    debug: registering module aws:opsworks/gangliaLayer@3.30.1
    debug: registering module aws:opsworks/haproxyLayer@3.30.1
    debug: registering module aws:opsworks/instance@3.30.1
    debug: registering module aws:opsworks/javaAppLayer@3.30.1
    debug: registering module aws:opsworks/memcachedLayer@3.30.1
    debug: registering module aws:opsworks/mysqlLayer@3.30.1
    debug: registering module aws:opsworks/nodejsAppLayer@3.30.1
    debug: registering module aws:opsworks/permission@3.30.1
    debug: registering module aws:opsworks/phpAppLayer@3.30.1
    debug: registering module aws:opsworks/railsAppLayer@3.30.1
    debug: registering module aws:opsworks/rdsDbInstance@3.30.1
    debug: registering module aws:opsworks/stack@3.30.1
    debug: registering module aws:opsworks/staticWebLayer@3.30.1
    debug: registering module aws:opsworks/userProfile@3.30.1
    debug: registering module aws:organizations/account@3.30.1
    debug: registering module aws:organizations/organization@3.30.1
    debug: registering module aws:organizations/organizationalUnit@3.30.1
    debug: registering module aws:organizations/policy@3.30.1
    debug: registering module aws:organizations/policyAttachment@3.30.1
    debug: registering module aws:pinpoint/admChannel@3.30.1
    debug: registering module aws:pinpoint/apnsChannel@3.30.1
    debug: registering module aws:pinpoint/apnsSandboxChannel@3.30.1
    debug: registering module aws:pinpoint/apnsVoipChannel@3.30.1
    debug: registering module aws:pinpoint/apnsVoipSandboxChannel@3.30.1
    debug: registering module aws:pinpoint/app@3.30.1
    debug: registering module aws:pinpoint/baiduChannel@3.30.1
    debug: registering module aws:pinpoint/emailChannel@3.30.1
    debug: registering module aws:pinpoint/eventStream@3.30.1
    debug: registering module aws:pinpoint/gcmChannel@3.30.1
    debug: registering module aws:pinpoint/smsChannel@3.30.1
    debug: registering module aws:qldb/ledger@3.30.1
    debug: registering module aws:quicksight/group@3.30.1
    debug: registering module aws:quicksight/user@3.30.1
    debug: registering module aws:ram/principalAssociation@3.30.1
    debug: registering module aws:ram/resourceAssociation@3.30.1
    debug: registering module aws:ram/resourceShare@3.30.1
    debug: registering module aws:ram/resourceShareAccepter@3.30.1
    debug: registering module aws:rds/cluster@3.30.1
    debug: registering module aws:rds/clusterEndpoint@3.30.1
    debug: registering module aws:rds/clusterInstance@3.30.1
    debug: registering module aws:rds/clusterParameterGroup@3.30.1
    debug: registering module aws:rds/clusterSnapshot@3.30.1
    debug: registering module aws:rds/eventSubscription@3.30.1
    debug: registering module aws:rds/globalCluster@3.30.1
    debug: registering module aws:rds/instance@3.30.1
    debug: registering module aws:rds/optionGroup@3.30.1
    debug: registering module aws:rds/parameterGroup@3.30.1
    debug: registering module aws:rds/proxy@3.30.1
    debug: registering module aws:rds/proxyDefaultTargetGroup@3.30.1
    debug: registering module aws:rds/proxyTarget@3.30.1
    debug: registering module aws:rds/roleAssociation@3.30.1
    debug: registering module aws:rds/securityGroup@3.30.1
    debug: registering module aws:rds/snapshot@3.30.1
    debug: registering module aws:rds/subnetGroup@3.30.1
    debug: registering module aws:redshift/cluster@3.30.1
    debug: registering module aws:redshift/eventSubscription@3.30.1
    debug: registering module aws:redshift/parameterGroup@3.30.1
    debug: registering module aws:redshift/securityGroup@3.30.1
    debug: registering module aws:redshift/snapshotCopyGrant@3.30.1
    debug: registering module aws:redshift/snapshotSchedule@3.30.1
    debug: registering module aws:redshift/snapshotScheduleAssociation@3.30.1
    debug: registering module aws:redshift/subnetGroup@3.30.1
    debug: registering module aws:resourcegroups/group@3.30.1
    debug: registering module aws:route53/delegationSet@3.30.1
    debug: registering module aws:route53/healthCheck@3.30.1
    debug: registering module aws:route53/keySigningKey@3.30.1
    debug: registering module aws:route53/queryLog@3.30.1
    debug: registering module aws:route53/record@3.30.1
    debug: registering module aws:route53/resolverDnsSecConfig@3.30.1
    debug: registering module aws:route53/resolverEndpoint@3.30.1
    debug: registering module aws:route53/resolverQueryLogConfig@3.30.1
    debug: registering module aws:route53/resolverQueryLogConfigAssociation@3.30.1
    debug: registering module aws:route53/resolverRule@3.30.1
    debug: registering module aws:route53/resolverRuleAssociation@3.30.1
    debug: registering module aws:route53/vpcAssociationAuthorization@3.30.1
    debug: registering module aws:route53/zone@3.30.1
    debug: registering module aws:route53/zoneAssociation@3.30.1
    debug: registering module aws:s3/accessPoint@3.30.1
    debug: registering module aws:s3/accountPublicAccessBlock@3.30.1
    debug: registering module aws:s3/analyticsConfiguration@3.30.1
    debug: registering module aws:s3/bucket@3.30.1
    debug: registering module aws:s3/bucketMetric@3.30.1
    debug: registering module aws:s3/bucketNotification@3.30.1
    debug: registering module aws:s3/bucketObject@3.30.1
    debug: registering module aws:s3/bucketOwnershipControls@3.30.1
    debug: registering module aws:s3/bucketPolicy@3.30.1
    debug: registering module aws:s3/bucketPublicAccessBlock@3.30.1
    debug: registering module aws:s3/inventory@3.30.1
    debug: registering module aws:s3/objectCopy@3.30.1
    debug: registering module aws:s3control/bucket@3.30.1
    debug: registering module aws:s3control/bucketLifecycleConfiguration@3.30.1
    debug: registering module aws:s3control/bucketPolicy@3.30.1
    debug: registering module aws:s3outposts/endpoint@3.30.1
    debug: registering module aws:sagemaker/appImageConfig@3.30.1
    debug: registering module aws:sagemaker/codeRepository@3.30.1
    debug: registering module aws:sagemaker/domain@3.30.1
    debug: registering module aws:sagemaker/endpoint@3.30.1
    debug: registering module aws:sagemaker/endpointConfiguration@3.30.1
    debug: registering module aws:sagemaker/featureGroup@3.30.1
    debug: registering module aws:sagemaker/image@3.30.1
    debug: registering module aws:sagemaker/imageVersion@3.30.1
    debug: registering module aws:sagemaker/model@3.30.1
    debug: registering module aws:sagemaker/modelPackageGroup@3.30.1
    debug: registering module aws:sagemaker/notebookInstance@3.30.1
    debug: registering module aws:sagemaker/notebookInstanceLifecycleConfiguration@3.30.1
    debug: registering module aws:sagemaker/userProfile@3.30.1
    debug: registering module aws:secretsmanager/secret@3.30.1
    debug: registering module aws:secretsmanager/secretPolicy@3.30.1
    debug: registering module aws:secretsmanager/secretRotation@3.30.1
    debug: registering module aws:secretsmanager/secretVersion@3.30.1
    debug: registering module aws:securityhub/account@3.30.1
    debug: registering module aws:securityhub/actionTarget@3.30.1
    debug: registering module aws:securityhub/inviteAccepter@3.30.1
    debug: registering module aws:securityhub/member@3.30.1
    debug: registering module aws:securityhub/organizationAdminAccount@3.30.1
    debug: registering module aws:securityhub/productSubscription@3.30.1
    debug: registering module aws:securityhub/standardsSubscription@3.30.1
    debug: registering module aws:serverlessrepository/cloudFormationStack@3.30.1
    debug: registering module aws:servicecatalog/portfolio@3.30.1
    debug: registering module aws:servicediscovery/httpNamespace@3.30.1
    debug: registering module aws:servicediscovery/privateDnsNamespace@3.30.1
    debug: registering module aws:servicediscovery/publicDnsNamespace@3.30.1
    debug: registering module aws:servicediscovery/service@3.30.1
    debug: registering module aws:servicequotas/serviceQuota@3.30.1
    debug: registering module aws:ses/activeReceiptRuleSet@3.30.1
    debug: registering module aws:ses/confgurationSet@3.30.1
    debug: registering module aws:ses/configurationSet@3.30.1
    debug: registering module aws:ses/domainDkim@3.30.1
    debug: registering module aws:ses/domainIdentity@3.30.1
    debug: registering module aws:ses/domainIdentityVerification@3.30.1
    debug: registering module aws:ses/emailIdentity@3.30.1
    debug: registering module aws:ses/eventDestination@3.30.1
    debug: registering module aws:ses/identityNotificationTopic@3.30.1
    debug: registering module aws:ses/identityPolicy@3.30.1
    debug: registering module aws:ses/mailFrom@3.30.1
    debug: registering module aws:ses/receiptFilter@3.30.1
    debug: registering module aws:ses/receiptRule@3.30.1
    debug: registering module aws:ses/receiptRuleSet@3.30.1
    debug: registering module aws:ses/template@3.30.1
    debug: registering module aws:sfn/activity@3.30.1
    debug: registering module aws:sfn/stateMachine@3.30.1
    debug: registering module aws:shield/protection@3.30.1
    debug: registering module aws:signer/signingJob@3.30.1
    debug: registering module aws:signer/signingProfile@3.30.1
    debug: registering module aws:signer/signingProfilePermission@3.30.1
    debug: registering module aws:simpledb/domain@3.30.1
    debug: registering module aws:sns/platformApplication@3.30.1
    debug: registering module aws:sns/smsPreferences@3.30.1
    debug: registering module aws:sns/topic@3.30.1
    debug: registering module aws:sns/topicPolicy@3.30.1
    debug: registering module aws:sns/topicSubscription@3.30.1
    debug: registering module aws:sqs/queue@3.30.1
    debug: registering module aws:sqs/queuePolicy@3.30.1
    debug: registering module aws:ssm/activation@3.30.1
    debug: registering module aws:ssm/association@3.30.1
    debug: registering module aws:ssm/document@3.30.1
    debug: registering module aws:ssm/maintenanceWindow@3.30.1
    debug: registering module aws:ssm/maintenanceWindowTarget@3.30.1
    debug: registering module aws:ssm/maintenanceWindowTask@3.30.1
    debug: registering module aws:ssm/parameter@3.30.1
    debug: registering module aws:ssm/patchBaseline@3.30.1
    debug: registering module aws:ssm/patchGroup@3.30.1
    debug: registering module aws:ssm/resourceDataSync@3.30.1
    debug: registering module aws:ssoadmin/accountAssignment@3.30.1
    debug: registering module aws:ssoadmin/managedPolicyAttachment@3.30.1
    debug: registering module aws:ssoadmin/permissionSet@3.30.1
    debug: registering module aws:ssoadmin/permissionSetInlinePolicy@3.30.1
    debug: registering module aws:storagegateway/cache@3.30.1
    debug: registering module aws:storagegateway/cachesIscsiVolume@3.30.1
    debug: registering module aws:storagegateway/gateway@3.30.1
    debug: registering module aws:storagegateway/nfsFileShare@3.30.1
    debug: registering module aws:storagegateway/smbFileShare@3.30.1
    debug: registering module aws:storagegateway/storedIscsiVolume@3.30.1
    debug: registering module aws:storagegateway/tapePool@3.30.1
    debug: registering module aws:storagegateway/uploadBuffer@3.30.1
    debug: registering module aws:storagegateway/workingStorage@3.30.1
    debug: registering module aws:swf/domain@3.30.1
    debug: registering module aws:synthetics/canary@3.30.1
    debug: registering module aws:transfer/server@3.30.1
    debug: registering module aws:transfer/sshKey@3.30.1
    debug: registering module aws:transfer/user@3.30.1
    debug: registering module aws:waf/byteMatchSet@3.30.1
    debug: registering module aws:waf/geoMatchSet@3.30.1
    debug: registering module aws:waf/ipSet@3.30.1
    debug: registering module aws:waf/rateBasedRule@3.30.1
    debug: registering module aws:waf/regexMatchSet@3.30.1
    debug: registering module aws:waf/regexPatternSet@3.30.1
    debug: registering module aws:waf/rule@3.30.1
    debug: registering module aws:waf/ruleGroup@3.30.1
    debug: registering module aws:waf/sizeConstraintSet@3.30.1
    debug: registering module aws:waf/sqlInjectionMatchSet@3.30.1
    debug: registering module aws:waf/webAcl@3.30.1
    debug: registering module aws:waf/xssMatchSet@3.30.1
    debug: registering module aws:wafregional/byteMatchSet@3.30.1
    debug: registering module aws:wafregional/geoMatchSet@3.30.1
    debug: registering module aws:wafregional/ipSet@3.30.1
    debug: registering module aws:wafregional/rateBasedRule@3.30.1
    debug: registering module aws:wafregional/regexMatchSet@3.30.1
    debug: registering module aws:wafregional/regexPatternSet@3.30.1
    debug: registering module aws:wafregional/rule@3.30.1
    debug: registering module aws:wafregional/ruleGroup@3.30.1
    debug: registering module aws:wafregional/sizeConstraintSet@3.30.1
    debug: registering module aws:wafregional/sqlInjectionMatchSet@3.30.1
    debug: registering module aws:wafregional/webAcl@3.30.1
    debug: registering module aws:wafregional/webAclAssociation@3.30.1
    debug: registering module aws:wafregional/xssMatchSet@3.30.1
    debug: registering module aws:wafv2/ipSet@3.30.1
    debug: registering module aws:wafv2/regexPatternSet@3.30.1
    debug: registering module aws:wafv2/ruleGroup@3.30.1
    debug: registering module aws:wafv2/webAcl@3.30.1
    debug: registering module aws:wafv2/webAclAssociation@3.30.1
    debug: registering module aws:wafv2/webAclLoggingConfiguration@3.30.1
    debug: registering module aws:worklink/fleet@3.30.1
    debug: registering module aws:worklink/websiteCertificateAuthorityAssociation@3.30.1
    debug: registering module aws:workspaces/directory@3.30.1
    debug: registering module aws:workspaces/ipGroup@3.30.1
    debug: registering module aws:workspaces/workspace@3.30.1
    debug: registering module aws:xray/encryptionConfig@3.30.1
    debug: registering module aws:xray/group@3.30.1
    debug: registering module aws:xray/samplingRule@3.30.1
    debug: registering package aws@3.30.1
    debug: registering module eks:index@0.22.0
    debug: registering package eks@0.22.0
    debug: reading resource: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    debug: preparing read resource for RPC
    debug: adding resolver name
    debug: adding resolver outputs
    debug: adding resolver secret_output_names
    debug: registering resource: ty=eks:index:Cluster, name=eks-main-eks, custom=False, remote=True
    debug: preparing resource for RPC
    debug: adding resolver cluster_security_group
    debug: adding resolver cluster_security_group_tags
    debug: adding resolver cluster_tags
    debug: adding resolver create_oidc_provider
    debug: adding resolver creation_role_provider
    debug: adding resolver desired_capacity
    debug: adding resolver enabled_cluster_log_types
    debug: adding resolver encrypt_root_block_device
    debug: adding resolver encryption_config_key_arn
    debug: adding resolver endpoint_private_access
    debug: adding resolver endpoint_public_access
    debug: adding resolver fargate
    debug: adding resolver gpu
    debug: adding resolver instance_profile_name
    debug: adding resolver instance_role
    debug: adding resolver instance_roles
    debug: adding resolver instance_type
    debug: adding resolver kubernetes_service_ip_address_range
    debug: adding resolver max_size
    debug: adding resolver min_size
    debug: adding resolver name
    debug: adding resolver node_ami_id
    debug: adding resolver node_associate_public_ip_address
    debug: adding resolver node_group_options
    debug: adding resolver node_public_key
    debug: adding resolver node_root_volume_size
    debug: adding resolver node_security_group_tags
    debug: adding resolver node_subnet_ids
    debug: adding resolver node_user_data
    debug: adding resolver private_subnet_ids
    debug: adding resolver provider_credential_opts
    debug: adding resolver proxy
    debug: adding resolver public_access_cidrs
    debug: adding resolver public_subnet_ids
    debug: adding resolver role_mappings
    debug: adding resolver service_role
    debug: adding resolver skip_default_node_group
    debug: adding resolver storage_classes
    debug: adding resolver subnet_ids
    debug: adding resolver tags
    debug: adding resolver use_default_vpc_cni
    debug: adding resolver user_mappings
    debug: adding resolver version
    debug: adding resolver vpc_cni_options
    debug: adding resolver vpc_id
    debug: adding resolver aws_provider
    debug: adding resolver core
    debug: adding resolver default_node_group
    debug: adding resolver eks_cluster
    debug: adding resolver eks_cluster_ingress_rule
    debug: adding resolver kubeconfig
    debug: adding resolver node_security_group
    debug: adding resolver provider
    debug: registering resource: ty=pulumi:providers:kubernetes, name=k8s, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver cluster
    debug: adding resolver context
    debug: adding resolver enable_dry_run
    debug: adding resolver kubeconfig
    debug: adding resolver namespace
    debug: adding resolver render_yaml_to_directory
    debug: adding resolver suppress_deprecation_warnings
    debug: registering resource: ty=kubernetes:core/v1:Namespace, name=eks-main-app, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver api_version
    debug: adding resolver kind
    debug: adding resolver metadata
    debug: adding resolver spec
    debug: adding resolver status
    debug: registering resource: ty=custom:resource:App, name=eks-main-app, custom=False, remote=False
    debug: preparing resource for RPC
    debug: registering resource: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver api_version
    debug: adding resolver kind
    debug: adding resolver metadata
    debug: adding resolver spec
    debug: adding resolver status
    debug: registering resource: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver api_version
    debug: adding resolver kind
    debug: adding resolver metadata
    debug: adding resolver spec
    debug: adding resolver status
    debug: registering resource: ty=custom:resource:IngressCtl, name=eks-main-ing-perms, custom=False, remote=False
    debug: preparing resource for RPC
    debug: registering resource: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver description
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver path
    debug: adding resolver policy
    debug: adding resolver arn
    debug: registering resource: ty=aws:iam/role:Role, name=eks-main-alb-controller-role, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver assume_role_policy
    debug: adding resolver description
    debug: adding resolver force_detach_policies
    debug: adding resolver inline_policies
    debug: adding resolver managed_policy_arns
    debug: adding resolver max_session_duration
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver path
    debug: adding resolver permissions_boundary
    debug: adding resolver tags
    debug: adding resolver arn
    debug: adding resolver create_date
    debug: adding resolver unique_id
    debug: registering resource: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver policy_arn
    debug: adding resolver role
    debug: Waiting for outstanding RPCs to complete
    debug: beginning rpc register resource
    debug: beginning rpc read resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource outputs
    debug: waiting for quiescence; 13 RPCs outstanding
    debug: preparing resource registration: ty=pulumi:pulumi:Stack, name=eks-main-dev
    debug: resource {} preparing to wait for dependencies
    debug: resource {} prepared
    debug: resource registration prepared: ty=pulumi:pulumi:Stack, name=eks-main-dev
    debug: preparing read: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} preparing to wait for dependencies
    debug: top-level input property translated: name -> name
    debug: preparing resource registration: ty=eks:index:Cluster, name=eks-main-eks
    debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x110c4d040>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x110c3fc40>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x110c13a00>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} preparing to wait for dependencies
    debug: top-level input property translated: create_oidc_provider -> createOidcProvider
    debug: top-level input property translated: fargate -> fargate
    debug: preparing resource registration: ty=pulumi:providers:kubernetes, name=k8s
    debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': <pulumi.output.Output object at 0x110d49d00>, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    debug: preparing resource registration: ty=kubernetes:core/v1:Namespace, name=eks-main-app
    debug: resource {'api_version': 'v1', 'kind': 'Namespace', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x111db1fa0>, 'spec': None, 'status': None} preparing to wait for dependencies
    debug: top-level input property translated: api_version -> apiVersion
    debug: top-level input property translated: kind -> kind
    debug: top-level input property translated: metadata -> metadata
    debug: preparing resource registration: ty=custom:resource:App, name=eks-main-app
    debug: resource {} preparing to wait for dependencies
    debug: preparing resource registration: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment
    debug: resource {'api_version': 'apps/v1', 'kind': 'Deployment', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb460>, 'spec': <pulumi_kubernetes.apps.v1._inputs.DeploymentSpecArgs object at 0x110dcb640>, 'status': None} preparing to wait for dependencies
    debug: top-level input property translated: api_version -> apiVersion
    debug: top-level input property translated: kind -> kind
    debug: transforming input property: app -> app
    debug: preparing resource registration: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service
    debug: resource {'api_version': 'v1', 'kind': 'Service', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb700>, 'spec': <pulumi_kubernetes.core.v1._inputs.ServiceSpecArgs object at 0x110ee2730>, 'status': None} preparing to wait for dependencies
    debug: top-level input property translated: api_version -> apiVersion
    debug: top-level input property translated: kind -> kind
    debug: preparing resource registration: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    debug: resource {} preparing to wait for dependencies
    debug: preparing resource registration: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} preparing to wait for dependencies
    debug: top-level input property translated: policy -> policy
    debug: preparing resource registration: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    debug: top-level input property translated: assume_role_policy -> assumeRolePolicy
    debug: top-level input property translated: description -> description
    debug: top-level input property translated: force_detach_policies -> forceDetachPolicies
    debug: preparing resource registration: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment
    debug: resource {'policy_arn': <pulumi.output.Output object at 0x110f48670>, 'role': <pulumi.output.Output object at 0x110f9bc70>} preparing to wait for dependencies
    debug: resource registration successful: ty=pulumi:pulumi:Stack, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev
    debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} prepared
    debug: read prepared: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    debug: resource {} prepared
    debug: resource registration prepared: ty=custom:resource:App, name=eks-main-app
    debug: resource {} prepared
    debug: resource registration prepared: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    debug: resource registration successful: ty=custom:resource:App, urn=urn:pulumi:dev::eks-main::custom:resource:App::eks-main-app
    debug: resource registration successful: ty=custom:resource:IngressCtl, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl::eks-main-ing-perms
    debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} prepared
    debug: resource registration prepared: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    debug: resource registration prepared: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    debug: resource read successful: ty=pulumi:pulumi:StackReference, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:StackReference::demo/eks-vpc/dev
    debug: incoming output property translated: outputs -> outputs
    debug: incoming output value translated: {'vpcId': 'vpc-0b7b646c66cd6f099', 'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768']} -> {'vpcId': 'vpc-0b7b646c66cd6f099', 'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768']}
    debug: incoming output property translated: secretOutputNames -> secret_output_names
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: demo/eks-vpc/dev -> demo/eks-vpc/dev
    debug: looking for resolver using translated name outputs
    debug: looking for resolver using translated name secret_output_names
    debug: looking for resolver using translated name name
    debug: top-level input property translated: private_subnet_ids -> privateSubnetIds
    debug: top-level input property translated: vpc_id -> vpcId
    debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x110c4d040>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x110c3fc40>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x110c13a00>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} prepared
    debug: resource registration prepared: ty=eks:index:Cluster, name=eks-main-eks
    debug: resource registration successful: ty=aws:iam/role:Role, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/role:Role::eks-main-alb-controller-role
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-alb-controller-role-480c3af -> eks-main-alb-controller-role-480c3af
    debug: incoming output property translated: description -> description
    debug: incoming output value translated: Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job. -> Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.
    debug: incoming output property translated: maxSessionDuration -> max_session_duration
    debug: incoming output value translated: 3600.0 -> 3600
    debug: incoming output property translated: path -> path
    debug: incoming output value translated: / -> /
    debug: incoming output property translated: forceDetachPolicies -> force_detach_policies
    debug: incoming output value translated: True -> True
    debug: incoming output property translated: assumeRolePolicy -> assume_role_policy
    debug: incoming output value translated: {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": "{oidc_provider_arn}"
                  },
                  "Action": "sts:AssumeRoleWithWebIdentity",
                  "Condition": {
                    "StringEquals": {
                      "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}"
                    }
                  }
                }
              ]
            }
             -> {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": "{oidc_provider_arn}"
                  },
                  "Action": "sts:AssumeRoleWithWebIdentity",
                  "Condition": {
                    "StringEquals": {
                      "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}"
                    }
                  }
                }
              ]
            }
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name max_session_duration
    debug: looking for resolver using translated name path
    debug: looking for resolver using translated name force_detach_policies
    debug: looking for resolver using translated name assume_role_policy
    debug: resource registration successful: ty=aws:iam/policy:Policy, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/policy:Policy::eks-main-alb-controller-policy
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-alb-controller-policy-1929516 -> eks-main-alb-controller-policy-1929516
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    debug: incoming output property translated: policy -> policy
    debug: incoming output value translated: {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "acm:DescribeCertificate",
                    "acm:ListCertificates",
                    "acm:GetCertificate"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateTags",
                    "ec2:DeleteTags",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeAddresses",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInstanceStatus",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:ModifyInstanceAttribute",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:RevokeSecurityGroupIngress"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticloadbalancing:AddListenerCertificates",
                    "elasticloadbalancing:AddTags",
                    "elasticloadbalancing:CreateListener",
                    "elasticloadbalancing:CreateLoadBalancer",
                    "elasticloadbalancing:CreateRule",
                    "elasticloadbalancing:CreateTargetGroup",
                    "elasticloadbalancing:DeleteListener",
                    "elasticloadbalancing:DeleteLoadBalancer",
                    "elasticloadbalancing:DeleteRule",
                    "elasticloadbalancing:DeleteTargetGroup",
                    "elasticloadbalancing:DeregisterTargets",
                    "elasticloadbalancing:DescribeListenerCertificates",
                    "elasticloadbalancing:DescribeListeners",
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                    "elasticloadbalancing:DescribeRules",
                    "elasticloadbalancing:DescribeSSLPolicies",
                    "elasticloadbalancing:DescribeTags",
                    "elasticloadbalancing:DescribeTargetGroups",
                    "elasticloadbalancing:DescribeTargetGroupAttributes",
                    "elasticloadbalancing:DescribeTargetHealth",
                    "elasticloadbalancing:ModifyListener",
                    "elasticloadbalancing:ModifyLoadBalancerAttributes",
                    "elasticloadbalancing:ModifyRule",
                    "elasticloadbalancing:ModifyTargetGroup",
                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                    "elasticloadbalancing:RegisterTargets",
                    "elasticloadbalancing:RemoveListenerCertificates",
                    "elasticloadbalancing:RemoveTags",
                    "elasticloadbalancing:SetIpAddressType",
                    "elasticloadbalancing:SetSecurityGroups",
                    "elasticloadbalancing:SetSubnets",
                    "elasticloadbalancing:SetWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:CreateServiceLinkedRole",
                    "iam:GetServerCertificate",
                    "iam:ListServerCertificates"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:DescribeUserPoolClient"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf-regional:GetWebACLForResource",
                    "waf-regional:GetWebACL",
                    "waf-regional:AssociateWebACL",
                    "waf-regional:DisassociateWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "tag:GetResources",
                    "tag:TagResources"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf:GetWebACL"
                  ],
                  "Resource": "*"
                }
              ]
            }
             -> {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "acm:DescribeCertificate",
                    "acm:ListCertificates",
                    "acm:GetCertificate"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateTags",
                    "ec2:DeleteTags",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeAddresses",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInstanceStatus",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:ModifyInstanceAttribute",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:RevokeSecurityGroupIngress"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticloadbalancing:AddListenerCertificates",
                    "elasticloadbalancing:AddTags",
                    "elasticloadbalancing:CreateListener",
                    "elasticloadbalancing:CreateLoadBalancer",
                    "elasticloadbalancing:CreateRule",
                    "elasticloadbalancing:CreateTargetGroup",
                    "elasticloadbalancing:DeleteListener",
                    "elasticloadbalancing:DeleteLoadBalancer",
                    "elasticloadbalancing:DeleteRule",
                    "elasticloadbalancing:DeleteTargetGroup",
                    "elasticloadbalancing:DeregisterTargets",
                    "elasticloadbalancing:DescribeListenerCertificates",
                    "elasticloadbalancing:DescribeListeners",
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                    "elasticloadbalancing:DescribeRules",
                    "elasticloadbalancing:DescribeSSLPolicies",
                    "elasticloadbalancing:DescribeTags",
                    "elasticloadbalancing:DescribeTargetGroups",
                    "elasticloadbalancing:DescribeTargetGroupAttributes",
                    "elasticloadbalancing:DescribeTargetHealth",
                    "elasticloadbalancing:ModifyListener",
                    "elasticloadbalancing:ModifyLoadBalancerAttributes",
                    "elasticloadbalancing:ModifyRule",
                    "elasticloadbalancing:ModifyTargetGroup",
                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                    "elasticloadbalancing:RegisterTargets",
                    "elasticloadbalancing:RemoveListenerCertificates",
                    "elasticloadbalancing:RemoveTags",
                    "elasticloadbalancing:SetIpAddressType",
                    "elasticloadbalancing:SetSecurityGroups",
                    "elasticloadbalancing:SetSubnets",
                    "elasticloadbalancing:SetWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:CreateServiceLinkedRole",
                    "iam:GetServerCertificate",
                    "iam:ListServerCertificates"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:DescribeUserPoolClient"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf-regional:GetWebACLForResource",
                    "waf-regional:GetWebACL",
                    "waf-regional:AssociateWebACL",
                    "waf-regional:DisassociateWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "tag:GetResources",
                    "tag:TagResources"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf:GetWebACL"
                  ],
                  "Resource": "*"
                }
              ]
            }
    debug: incoming output property translated: description -> description
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: path -> path
    debug: incoming output value translated: / -> /
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name policy
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name path
    debug: top-level input property translated: policy_arn -> policyArn
    debug: top-level input property translated: role -> role
    debug: resource {'policy_arn': <pulumi.output.Output object at 0x110f48670>, 'role': <pulumi.output.Output object at 0x110f9bc70>} prepared
    debug: resource registration prepared: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment
    debug: resource registration successful: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-alb-controller-role-attachment
    debug: incoming output property translated: policyArn -> policy_arn
    debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    debug: incoming output property translated: role -> role
    debug: incoming output value translated: eks-main-alb-controller-role-480c3af -> eks-main-alb-controller-role-480c3af
    debug: looking for resolver using translated name policy_arn
    debug: looking for resolver using translated name role
    debug: Registering resource: t=eks:index:Cluster, name=eks-main-eks, custom=false, remote=false
    debug: Registering resource: t=eks:index:ServiceRole, name=eks-main-eks-eksRole, custom=false, remote=false
    debug: Registering resource: t=aws:iam/role:Role, name=eks-main-eks-eksRole-role, custom=true, remote=false
    debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-4b490823, custom=true, remote=false
    debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-90eb1c99, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-eksClusterSecurityGroup, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterInternetEgressRule, custom=true, remote=false
    debug: Registering resource: t=aws:eks/cluster:Cluster, name=eks-main-eks-eksCluster, custom=true, remote=false
    debug: Registering resource: t=pulumi:providers:kubernetes, name=eks-main-eks-eks-k8s, custom=true, remote=false
    debug: Registering resource: t=eks:index:VpcCni, name=eks-main-eks-vpc-cni, custom=true, remote=false
    debug: Registering resource: t=eks:index:ServiceRole, name=eks-main-eks-instanceRole, custom=false, remote=false
    debug: Registering resource: t=aws:iam/role:Role, name=eks-main-eks-instanceRole-role, custom=true, remote=false
    debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-03516f97, custom=true, remote=false
    debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-e1b295bd, custom=true, remote=false
    debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-3eb088f2, custom=true, remote=false
    debug: Registering resource: t=kubernetes:core/v1:ConfigMap, name=eks-main-eks-nodeAccess, custom=true, remote=false
    debug: Invoking function: tok=aws:index/getRegion:getRegion asynchronously
    debug: Registering resource: t=aws:iam/openIdConnectProvider:OpenIdConnectProvider, name=eks-main-eks-oidcProvider, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-nodeSecurityGroup, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeIngressRule, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeClusterIngressRule, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksExtApiServerClusterIngressRule, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeInternetEgressRule, custom=true, remote=false
    debug: Registering resource: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterIngressRule, custom=true, remote=false
    debug: Registering resource: t=pulumi:providers:kubernetes, name=eks-main-eks-provider, custom=true, remote=false
    debug: , obj={}
    debug: RegisterResource RPC prepared: t=eks:index:Cluster, name=eks-main-eks
    debug: Registering resource: t=eks:index:ServiceRole, name=eks-main-eks-podExecutionRole, custom=false, remote=false
    debug: Registering resource: t=aws:iam/role:Role, name=eks-main-eks-podExecutionRole-role, custom=true, remote=false
    debug: Registering resource: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-podExecutionRole-6ad441d9, custom=true, remote=false
    debug: Registering resource: t=aws:eks/fargateProfile:FargateProfile, name=eks_main-eksfargateProfile, custom=true, remote=false
    debug: Invoking function: tok=aws:ec2/getRouteTable:getRouteTable asynchronously
    debug: , obj={"subnetId":"subnet-044974ee15921bd4d"}
    debug: RegisterResource RPC finished: resource:eks-main-eks[eks:index:Cluster]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks,,,,
    debug: RegisterResource RPC prepared: t=eks:index:ServiceRole, name=eks-main-eks-eksRole
    debug: RegisterResource RPC prepared: t=eks:index:ServiceRole, name=eks-main-eks-instanceRole
    debug: RegisterResource RPC prepared: t=eks:index:ServiceRole, name=eks-main-eks-podExecutionRole
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-eksClusterSecurityGroup
    debug: Invoke RPC finished: tok=aws:index/getRegion:getRegion; err: null, resp: description,,,US East (Ohio),endpoint,,,ec2.us-east-2.amazonaws.com,id,,,us-east-2,name,,,us-east-2,
    debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole[eks:index:ServiceRole]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole,,,,
    debug: RegisterResource RPC prepared: t=aws:iam/role:Role, name=eks-main-eks-instanceRole-role
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole[eks:index:ServiceRole]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole,,,,
    debug: RegisterResource RPC prepared: t=aws:iam/role:Role, name=eks-main-eks-eksRole-role
    debug: RegisterResource RPC finished: resource:eks-main-eks-podExecutionRole[eks:index:ServiceRole]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole,,,,
    debug: RegisterResource RPC prepared: t=aws:iam/role:Role, name=eks-main-eks-podExecutionRole-role
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksClusterSecurityGroup[aws:ec2/securityGroup:SecurityGroup]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup,sg-084343bc5734f4845,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":600000000000,"delete":600000000000},"schema_version":"1"},arn,,,arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845,description,,,Managed by Pulumi,egress,,,,,,,id,,,sg-084343bc5734f4845,ingress,,,,,,,name,,,eks-main-eks-eksClusterSecurityGroup-9283f28,namePrefix,,,,ownerId,,,052848974346,revokeRulesOnDelete,,,,true,tags,,,,,Name,,,eks-main-eks-eksClusterSecurityGroup,vpcId,,,vpc-0b7b646c66cd6f099,,
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterInternetEgressRule
    debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-role[aws:iam/role:Role]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role,eks-main-eks-instanceRole-role-02f1126,arn,,,arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126,assumeRolePolicy,,,{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]},createDate,,,2021-02-26T14:48:18Z,description,,,,forceDetachPolicies,,,,false,id,,,eks-main-eks-instanceRole-role-02f1126,maxSessionDuration,,3600,name,,,eks-main-eks-instanceRole-role-02f1126,path,,,/,tags,,,,,,uniqueId,,,AROAQYTQLLIFHBA4LNWT6,,
    debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-3eb088f2
    debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-e1b295bd
    debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-instanceRole-03516f97
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole-role[aws:iam/role:Role]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-eksRole-role,eks-main-eks-eksRole-role-b7159f6,arn,,,arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6,assumeRolePolicy,,,{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"eks.amazonaws.com"},"Action":"sts:AssumeRole"}]},createDate,,,2021-02-26T14:48:18Z,description,,,Allows EKS to manage clusters on your behalf.,forceDetachPolicies,,,,false,id,,,eks-main-eks-eksRole-role-b7159f6,maxSessionDuration,,3600,name,,,eks-main-eks-eksRole-role-b7159f6,path,,,/,tags,,,,,,uniqueId,,,AROAQYTQLLIFIGFZU3FMI,,
    debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-4b490823
    debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-eksRole-90eb1c99
    debug: RegisterResource RPC finished: resource:eks-main-eks-podExecutionRole-role[aws:iam/role:Role]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-podExecutionRole-role,eks-main-eks-podExecutionRole-role-beaab3d,arn,,,arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d,assumeRolePolicy,,,{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"eks-fargate-pods.amazonaws.com"},"Action":"sts:AssumeRole"}]},createDate,,,2021-02-26T14:48:19Z,description,,,,forceDetachPolicies,,,,false,id,,,eks-main-eks-podExecutionRole-role-beaab3d,maxSessionDuration,,3600,name,,,eks-main-eks-podExecutionRole-role-beaab3d,path,,,/,tags,,,,,,uniqueId,,,AROAQYTQLLIFAAV72F4A3,,
    debug: RegisterResource RPC prepared: t=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-eks-podExecutionRole-6ad441d9
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksClusterInternetEgressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterInternetEgressRule,sgrule-118633929,__meta,,,{"schema_version":"2"},cidrBlocks,,,,,,,,0.0.0.0/0,description,,,Allow internet access.,fromPort,,0,id,,,sgrule-118633929,protocol,,,-1,securityGroupId,,,sg-084343bc5734f4845,self,,,,false,toPort,,0,type,,,egress,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-3eb088f2[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-instanceRole-3eb088f2,eks-main-eks-instanceRole-role-02f1126-20210226144820886800000005,id,,,eks-main-eks-instanceRole-role-02f1126-20210226144820886800000005,policyArn,,,arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly,role,,,eks-main-eks-instanceRole-role-02f1126,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-e1b295bd[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-instanceRole-e1b295bd,eks-main-eks-instanceRole-role-02f1126-20210226144819704600000002,id,,,eks-main-eks-instanceRole-role-02f1126-20210226144819704600000002,policyArn,,,arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy,role,,,eks-main-eks-instanceRole-role-02f1126,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-instanceRole-03516f97[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-instanceRole-03516f97,eks-main-eks-instanceRole-role-02f1126-20210226144819582900000001,id,,,eks-main-eks-instanceRole-role-02f1126-20210226144819582900000001,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy,role,,,eks-main-eks-instanceRole-role-02f1126,,
    debug: Truncating attribute path of 0 diagnostics for TypeSet
    debug: Truncating attribute path of 0 diagnostics for TypeSet
    debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole-4b490823[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-eksRole-4b490823,eks-main-eks-eksRole-role-b7159f6-20210226144820559500000004,id,,,eks-main-eks-eksRole-role-b7159f6-20210226144820559500000004,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSClusterPolicy,role,,,eks-main-eks-eksRole-role-b7159f6,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksRole-90eb1c99[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-eksRole-90eb1c99,eks-main-eks-eksRole-role-b7159f6-20210226144820473100000003,id,,,eks-main-eks-eksRole-role-b7159f6-20210226144820473100000003,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSServicePolicy,role,,,eks-main-eks-eksRole-role-b7159f6,,
    debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole
    debug: RegisterResource RPC prepared: t=aws:eks/cluster:Cluster, name=eks-main-eks-eksCluster
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole; err: null, resp: 
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-instanceRole; err: null, resp: 
    debug: RegisterResource RPC finished: resource:eks-main-eks-podExecutionRole-6ad441d9[aws:iam/rolePolicyAttachment:RolePolicyAttachment]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::eks-main-eks-podExecutionRole-6ad441d9,eks-main-eks-podExecutionRole-role-beaab3d-20210226144821078900000006,id,,,eks-main-eks-podExecutionRole-role-beaab3d-20210226144821078900000006,policyArn,,,arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy,role,,,eks-main-eks-podExecutionRole-role-beaab3d,,
    debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole; err: null, resp: 
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-eksRole; err: null, resp: 
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole; err: null, resp: 
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole::eks-main-eks-podExecutionRole; err: null, resp: 
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksCluster[aws:eks/cluster:Cluster]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster,eks-main-eks-eksCluster-5d4dcbc,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":1800000000000,"delete":900000000000,"update":3600000000000}},arn,,,arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc,certificateAuthority,,,,,data,,,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=,createdAt,,,2021-02-26 14:48:23.041 +0000 UTC,enabledClusterLogTypes,,,,,,,encryptionConfig,0,endpoint,,,https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com,id,,,eks-main-eks-eksCluster-5d4dcbc,identities,,,,,,,,,,oidcs,,,,,,,,,,issuer,,,https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,kubernetesNetworkConfig,,,,,serviceIpv4Cidr,,,172.20.0.0/16,name,,,eks-main-eks-eksCluster-5d4dcbc,platformVersion,,,eks.3,roleArn,,,arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6,status,,,ACTIVE,tags,,,,,Name,,,eks-main-eks-eksCluster,version,,,1.18,vpcConfig,,,,,clusterSecurityGroupId,,,sg-0280096cc04a81715,endpointPrivateAccess,,,,false,endpointPublicAccess,,,,true,publicAccessCidrs,,,,,,,,0.0.0.0/0,securityGroupIds,,,,,,,,sg-084343bc5734f4845,subnetIds,,,,,,,,subnet-044974ee15921bd4d,,,subnet-0a8eed68bc61c6768,vpcId,,,vpc-0b7b646c66cd6f099,,
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroup:SecurityGroup, name=eks-main-eks-nodeSecurityGroup
    debug: RegisterResource RPC prepared: t=pulumi:providers:kubernetes, name=eks-main-eks-eks-k8s
    debug: RegisterResourceOutputs RPC prepared: urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks
    debug: RegisterResource RPC prepared: t=eks:index:VpcCni, name=eks-main-eks-vpc-cni
    debug: RegisterResource RPC prepared: t=pulumi:providers:kubernetes, name=eks-main-eks-provider
    debug: RegisterResource RPC prepared: t=aws:iam/openIdConnectProvider:OpenIdConnectProvider, name=eks-main-eks-oidcProvider
    debug: Invoke RPC finished: tok=aws:ec2/getRouteTable:getRouteTable; err: null, resp: associations,,,,,,,,,,gatewayId,,,,main,,,,false,routeTableAssociationId,,,rtbassoc-05decc1c16a4f5c10,routeTableId,,,rtb-0682680fd365b9895,subnetId,,,subnet-044974ee15921bd4d,id,,,rtb-0682680fd365b9895,ownerId,,,052848974346,routeTableId,,,rtb-0682680fd365b9895,routes,,,,,,,,,,cidrBlock,,,0.0.0.0/0,egressOnlyGatewayId,,,,gatewayId,,,,instanceId,,,,ipv6CidrBlock,,,,localGatewayId,,,,natGatewayId,,,nat-0e021cd4cf4d96668,networkInterfaceId,,,,transitGatewayId,,,,vpcEndpointId,,,,vpcPeeringConnectionId,,,,subnetId,,,subnet-044974ee15921bd4d,tags,,,,,,vpcId,,,vpc-0b7b646c66cd6f099,
    debug: Invoking function: tok=aws:ec2/getRouteTable:getRouteTable asynchronously
    debug: , obj={"subnetId":"subnet-0a8eed68bc61c6768"}
    debug: Reading Route Table: {
    debug:   Filters: [{
    debug:       Name: "association.subnet-id",
    debug:       Values: ["subnet-0a8eed68bc61c6768"]
    debug:     }]
    debug: }
    debug: Invoke RPC finished: tok=aws:ec2/getRouteTable:getRouteTable; err: null, resp: associations,,,,,,,,,,gatewayId,,,,main,,,,false,routeTableAssociationId,,,rtbassoc-0c805468271f1fa02,routeTableId,,,rtb-011cd0081345b5fa7,subnetId,,,subnet-0a8eed68bc61c6768,id,,,rtb-011cd0081345b5fa7,ownerId,,,052848974346,routeTableId,,,rtb-011cd0081345b5fa7,routes,,,,,,,,,,cidrBlock,,,0.0.0.0/0,egressOnlyGatewayId,,,,gatewayId,,,,instanceId,,,,ipv6CidrBlock,,,,localGatewayId,,,,natGatewayId,,,nat-0feac976d920c1f4b,networkInterfaceId,,,,transitGatewayId,,,,vpcEndpointId,,,,vpcPeeringConnectionId,,,,subnetId,,,subnet-0a8eed68bc61c6768,tags,,,,,,vpcId,,,vpc-0b7b646c66cd6f099,
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks; err: null, resp: 
    debug: RegisterResourceOutputs RPC finished: urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks; err: null, resp: 
    debug: RegisterResource RPC finished: resource:eks-main-eks-eks-k8s[pulumi:providers:kubernetes]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-eks-k8s,09e0d2d6-63f5-4dd6-9caa-b682dedd4cc9,kubeconfig,,,{"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]},version,,,2.8.0,,
    debug: RegisterResource RPC prepared: t=kubernetes:core/v1:ConfigMap, name=eks-main-eks-nodeAccess
    debug: RegisterResource RPC finished: resource:eks-main-eks-nodeSecurityGroup[aws:ec2/securityGroup:SecurityGroup]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup,sg-0a5ff208056363723,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":600000000000,"delete":600000000000},"schema_version":"1"},arn,,,arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723,description,,,Managed by Pulumi,egress,,,,,,,id,,,sg-0a5ff208056363723,ingress,,,,,,,name,,,eks-main-eks-nodeSecurityGroup-e015189,namePrefix,,,,ownerId,,,052848974346,revokeRulesOnDelete,,,,true,tags,,,,,Name,,,eks-main-eks-nodeSecurityGroup,kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc,,,owned,vpcId,,,vpc-0b7b646c66cd6f099,,
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeIngressRule
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeInternetEgressRule
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksClusterIngressRule
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksNodeClusterIngressRule
    debug: RegisterResource RPC prepared: t=aws:ec2/securityGroupRule:SecurityGroupRule, name=eks-main-eks-eksExtApiServerClusterIngressRule
    debug: RegisterResource RPC finished: resource:eks-main-eks-provider[pulumi:providers:kubernetes]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-provider,6b44b415-c44a-43bf-9bb0-425f113778a9,kubeconfig,,,{"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]},version,,,2.8.0,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-vpc-cni[eks:index:VpcCni]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:VpcCni::eks-main-eks-vpc-cni,636d4620e8d6f460,,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-oidcProvider[aws:iam/openIdConnectProvider:OpenIdConnectProvider]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::eks-main-eks-oidcProvider,arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,arn,,,arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,clientIdLists,,,,,,,,sts.amazonaws.com,id,,,arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,thumbprintLists,,,,,,,,9e99a48a9960b14926bb7f3b02e22da2b0ab7280,url,,,oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-nodeAccess[kubernetes:core/v1:ConfigMap]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$kubernetes:core/v1:ConfigMap::eks-main-eks-nodeAccess,kube-system/aws-auth,__initialApiVersion,,,v1,__inputs,,,,,apiVersion,,,v1,data,,,,,mapRoles,,,- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'
      username: 'system:node:{{EC2PrivateDNSName}}'
      groups:
        - 'system:bootstrappers'
        - 'system:nodes'
    ,kind,,,ConfigMap,metadata,,,,,labels,,,,,app.kubernetes.io/managed-by,,,pulumi,name,,,aws-auth,namespace,,,kube-system,apiVersion,,,v1,data,,,,,mapRoles,,,- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'
      username: 'system:node:{{EC2PrivateDNSName}}'
      groups:
        - 'system:bootstrappers'
        - 'system:nodes'
    ,kind,,,ConfigMap,metadata,,,,,annotations,,,,,kubectl.kubernetes.io/last-applied-configuration,,,{"apiVersion":"v1","data":{"mapRoles":"- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"},"kind":"ConfigMap","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"aws-auth","namespace":"kube-system"}}
    ,creationTimestamp,,,2021-02-26T15:00:24Z,labels,,,,,app.kubernetes.io/managed-by,,,pulumi,managedFields,,,,,,,,,,apiVersion,,,v1,fieldsType,,,FieldsV1,fieldsV1,,,,,f:data,,,,,.,,,,,,f:mapRoles,,,,,,f:metadata,,,,,f:annotations,,,,,.,,,,,,f:kubectl.kubernetes.io/last-applied-configuration,,,,,,f:labels,,,,,.,,,,,,f:app.kubernetes.io/managed-by,,,,,,manager,,,pulumi-resource-kubernetes,operation,,,Update,time,,,2021-02-26T15:00:24Z,name,,,aws-auth,namespace,,,kube-system,resourceVersion,,,710,selfLink,,,/api/v1/namespaces/kube-system/configmaps/aws-auth,uid,,,621e5b3c-1b49-4b25-9123-2cef6f20daa9,,
    debug: RegisterResource RPC prepared: t=aws:eks/fargateProfile:FargateProfile, name=eks_main-eksfargateProfile
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksExtApiServerClusterIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksExtApiServerClusterIngressRule,sgrule-878838703,__meta,,,{"schema_version":"2"},description,,,Allow pods running extension API servers on port 443 to receive communication from cluster control plane,fromPort,,443,id,,,sgrule-878838703,protocol,,,tcp,securityGroupId,,,sg-0a5ff208056363723,self,,,,false,sourceSecurityGroupId,,,sg-084343bc5734f4845,toPort,,443,type,,,ingress,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksNodeInternetEgressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksNodeInternetEgressRule,sgrule-139676407,__meta,,,{"schema_version":"2"},cidrBlocks,,,,,,,,0.0.0.0/0,description,,,Allow internet access.,fromPort,,0,id,,,sgrule-139676407,protocol,,,-1,securityGroupId,,,sg-0a5ff208056363723,self,,,,false,toPort,,0,type,,,egress,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksClusterIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule,sgrule-3344048136,__meta,,,{"schema_version":"2"},description,,,Allow pods to communicate with the cluster API Server,fromPort,,443,id,,,sgrule-3344048136,protocol,,,tcp,securityGroupId,,,sg-084343bc5734f4845,self,,,,false,sourceSecurityGroupId,,,sg-0a5ff208056363723,toPort,,443,type,,,ingress,,
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksNodeIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksNodeIngressRule,sgrule-2031886210,__meta,,,{"schema_version":"2"},description,,,Allow nodes to communicate with each other,fromPort,,0,id,,,sgrule-2031886210,protocol,,,-1,securityGroupId,,,sg-0a5ff208056363723,self,,,,true,toPort,,0,type,,,ingress,,
    debug: Truncating attribute path of 0 diagnostics for TypeSet
    debug: Truncating attribute path of 0 diagnostics for TypeSet
    debug: RegisterResource RPC finished: resource:eks-main-eks-eksNodeClusterIngressRule[aws:ec2/securityGroupRule:SecurityGroupRule]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksNodeClusterIngressRule,sgrule-1538449771,__meta,,,{"schema_version":"2"},description,,,Allow worker Kubelets and pods to receive communication from the cluster control plane,fromPort,,1025,id,,,sgrule-1538449771,protocol,,,tcp,securityGroupId,,,sg-0a5ff208056363723,self,,,,false,sourceSecurityGroupId,,,sg-084343bc5734f4845,toPort,,65535,type,,,ingress,,
    debug: RegisterResource RPC finished: resource:eks_main-eksfargateProfile[aws:eks/fargateProfile:FargateProfile]; err: null, resp: urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/fargateProfile:FargateProfile::eks_main-eksfargateProfile,eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206,__meta,,,{"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0":{"create":600000000000,"delete":600000000000}},arn,,,arn:aws:eks:us-east-2:052848974346:fargateprofile/eks-main-eks-eksCluster-5d4dcbc/eks_main-eksfargateProfile-00d6206/e4bbef6d-7f40-e761-d583-c101416e841d,clusterName,,,eks-main-eks-eksCluster-5d4dcbc,fargateProfileName,,,eks_main-eksfargateProfile-00d6206,id,,,eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206,podExecutionRoleArn,,,arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d,selectors,,,,,,,,,,labels,,,,,,namespace,,,eks-main-app,,,,,labels,,,,,,namespace,,,kube-system,status,,,ACTIVE,subnetIds,,,,,,,,subnet-044974ee15921bd4d,,,subnet-0a8eed68bc61c6768,tags,,,,,,,
    debug: resource registration successful: ty=eks:index:Cluster, urn=urn:pulumi:dev::eks-main::eks:index:Cluster::eks-main-eks
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    debug: adding resolver assume_role_policy
    debug: adding resolver description
    debug: adding resolver force_detach_policies
    debug: adding resolver inline_policies
    debug: adding resolver managed_policy_arns
    debug: adding resolver max_session_duration
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver path
    debug: adding resolver permissions_boundary
    debug: adding resolver tags
    debug: adding resolver arn
    debug: adding resolver create_date
    debug: adding resolver unique_id
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-provider
    debug: adding resolver cluster
    debug: adding resolver context
    debug: adding resolver enable_dry_run
    debug: adding resolver kubeconfig
    debug: adding resolver namespace
    debug: adding resolver render_yaml_to_directory
    debug: adding resolver suppress_deprecation_warnings
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    debug: adding resolver description
    debug: adding resolver egress
    debug: adding resolver ingress
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver revoke_rules_on_delete
    debug: adding resolver tags
    debug: adding resolver vpc_id
    debug: adding resolver arn
    debug: adding resolver owner_id
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    debug: adding resolver description
    debug: adding resolver egress
    debug: adding resolver ingress
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver revoke_rules_on_delete
    debug: adding resolver tags
    debug: adding resolver vpc_id
    debug: adding resolver arn
    debug: adding resolver owner_id
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    debug: adding resolver cidr_blocks
    debug: adding resolver description
    debug: adding resolver from_port
    debug: adding resolver ipv6_cidr_blocks
    debug: adding resolver prefix_list_ids
    debug: adding resolver protocol
    debug: adding resolver security_group_id
    debug: adding resolver self
    debug: adding resolver source_security_group_id
    debug: adding resolver to_port
    debug: adding resolver type
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    debug: adding resolver enabled_cluster_log_types
    debug: adding resolver encryption_config
    debug: adding resolver kubernetes_network_config
    debug: adding resolver name
    debug: adding resolver role_arn
    debug: adding resolver tags
    debug: adding resolver version
    debug: adding resolver vpc_config
    debug: adding resolver arn
    debug: adding resolver certificate_authority
    debug: adding resolver created_at
    debug: adding resolver endpoint
    debug: adding resolver identities
    debug: adding resolver platform_version
    debug: adding resolver status
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$kubernetes:core/v1:ConfigMap::eks-main-eks-nodeAccess
    debug: adding resolver api_version
    debug: adding resolver binary_data
    debug: adding resolver data
    debug: adding resolver immutable
    debug: adding resolver kind
    debug: adding resolver metadata
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-eks-k8s
    debug: adding resolver cluster
    debug: adding resolver context
    debug: adding resolver enable_dry_run
    debug: adding resolver kubeconfig
    debug: adding resolver namespace
    debug: adding resolver render_yaml_to_directory
    debug: adding resolver suppress_deprecation_warnings
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    debug: adding resolver enabled_cluster_log_types
    debug: adding resolver encryption_config
    debug: adding resolver kubernetes_network_config
    debug: adding resolver name
    debug: adding resolver role_arn
    debug: adding resolver tags
    debug: adding resolver version
    debug: adding resolver vpc_config
    debug: adding resolver arn
    debug: adding resolver certificate_authority
    debug: adding resolver created_at
    debug: adding resolver endpoint
    debug: adding resolver identities
    debug: adding resolver platform_version
    debug: adding resolver status
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/fargateProfile:FargateProfile::eks_main-eksfargateProfile
    debug: adding resolver cluster_name
    debug: adding resolver fargate_profile_name
    debug: adding resolver pod_execution_role_arn
    debug: adding resolver selectors
    debug: adding resolver subnet_ids
    debug: adding resolver tags
    debug: adding resolver arn
    debug: adding resolver status
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    debug: adding resolver assume_role_policy
    debug: adding resolver description
    debug: adding resolver force_detach_policies
    debug: adding resolver inline_policies
    debug: adding resolver managed_policy_arns
    debug: adding resolver max_session_duration
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver path
    debug: adding resolver permissions_boundary
    debug: adding resolver tags
    debug: adding resolver arn
    debug: adding resolver create_date
    debug: adding resolver unique_id
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::eks-main-eks-oidcProvider
    debug: adding resolver client_id_lists
    debug: adding resolver thumbprint_lists
    debug: adding resolver url
    debug: adding resolver arn
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    debug: adding resolver description
    debug: adding resolver egress
    debug: adding resolver ingress
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver revoke_rules_on_delete
    debug: adding resolver tags
    debug: adding resolver vpc_id
    debug: adding resolver arn
    debug: adding resolver owner_id
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:VpcCni::eks-main-eks-vpc-cni
    debug: adding resolver custom_network_config
    debug: adding resolver eni_config_label_def
    debug: adding resolver eni_mtu
    debug: adding resolver external_snat
    debug: adding resolver image
    debug: adding resolver kubeconfig
    debug: adding resolver log_file
    debug: adding resolver log_level
    debug: adding resolver node_port_support
    debug: adding resolver veth_prefix
    debug: adding resolver warm_eni_target
    debug: adding resolver warm_ip_target
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    debug: adding resolver cidr_blocks
    debug: adding resolver description
    debug: adding resolver from_port
    debug: adding resolver ipv6_cidr_blocks
    debug: adding resolver prefix_list_ids
    debug: adding resolver protocol
    debug: adding resolver security_group_id
    debug: adding resolver self
    debug: adding resolver source_security_group_id
    debug: adding resolver to_port
    debug: adding resolver type
    debug: getting resource: urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    debug: adding resolver description
    debug: adding resolver egress
    debug: adding resolver ingress
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver revoke_rules_on_delete
    debug: adding resolver tags
    debug: adding resolver vpc_id
    debug: adding resolver arn
    debug: adding resolver owner_id
    debug: incoming output property translated: instanceRoles -> instance_roles
    debug: incoming output value translated: [<pulumi_aws.iam.role.Role object at 0x110f484f0>] -> [<pulumi_aws.iam.role.Role object at 0x110f484f0>]
    debug: incoming output property translated: provider -> provider
    debug: incoming output value translated: <pulumi_kubernetes.provider.Provider object at 0x110c32280> -> <pulumi_kubernetes.provider.Provider object at 0x110c32280>
    debug: incoming output property translated: nodeSecurityGroup -> node_security_group
    debug: incoming output value translated: <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111d63640> -> <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111d63640>
    debug: incoming output property translated: clusterSecurityGroup -> cluster_security_group
    debug: incoming output value translated: <pulumi_aws.ec2.security_group.SecurityGroup object at 0x110f48970> -> <pulumi_aws.ec2.security_group.SecurityGroup object at 0x110f48970>
    debug: incoming output property translated: eksClusterIngressRule -> eks_cluster_ingress_rule
    debug: incoming output value translated: <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x110dcbaf0> -> <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x110dcbaf0>
    debug: incoming output property translated: eksCluster -> eks_cluster
    debug: incoming output value translated: <pulumi_aws.eks.cluster.Cluster object at 0x110c483a0> -> <pulumi_aws.eks.cluster.Cluster object at 0x110c483a0>
    debug: incoming output property translated: core -> core
    debug: incoming output value translated: {'eksNodeAccess': <pulumi_kubernetes.core.v1.ConfigMap.ConfigMap object at 0x1110a7610>, 'provider': <pulumi_kubernetes.provider.Provider object at 0x1110a7730>, 'cluster': <pulumi_aws.eks.cluster.Cluster object at 0x11136b820>, 'subnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'endpoint': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'fargateProfile': <pulumi_aws.eks.fargate_profile.FargateProfile object at 0x111aa3280>, 'storageClasses': {}, 'kubeconfig': {'contexts': [{'context': {'user': 'aws', 'cluster': 'kubernetes'}, 'name': 'aws'}], 'kind': 'Config', 'apiVersion': 'v1', 'clusters': [{'name': 'kubernetes', 'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}}], 'current-context': 'aws', 'users': [{'name': 'aws', 'user': {'exec': {'apiVersion': 'client.authentication.k8s.io/v1alpha1', 'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc']}}}]}, 'instanceRoles': [<pulumi_aws.iam.role.Role object at 0x111aa38b0>], 'oidcProvider': <pulumi_aws.iam.open_id_connect_provider.OpenIdConnectProvider object at 0x111b9f610>, 'clusterSecurityGroup': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111b9f910>, 'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpcId': 'vpc-0b7b646c66cd6f099', 'vpcCni': <pulumi_eks.vpc_cni.VpcCni object at 0x111bdee50>, 'nodeGroupOptions': {'clusterIngressRule': <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x111c6af40>, 'nodeSecurityGroup': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111ceb280>}} -> {'cluster': <pulumi_aws.eks.cluster.Cluster object at 0x11136b820>, 'cluster_security_group': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111b9f910>, 'endpoint': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'instance_roles': [<pulumi_aws.iam.role.Role object at 0x111aa38b0>], 'node_group_options': {'cluster_ingress_rule': <pulumi_aws.ec2.security_group_rule.SecurityGroupRule object at 0x111c6af40>, 'node_security_group': <pulumi_aws.ec2.security_group.SecurityGroup object at 0x111ceb280>}, 'provider': <pulumi_kubernetes.provider.Provider object at 0x1110a7730>, 'subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpc_id': 'vpc-0b7b646c66cd6f099', 'eks_node_access': <pulumi_kubernetes.core.v1.ConfigMap.ConfigMap object at 0x1110a7610>, 'fargate_profile': <pulumi_aws.eks.fargate_profile.FargateProfile object at 0x111aa3280>, 'kubeconfig': {'contexts': [{'context': {'user': 'aws', 'cluster': 'kubernetes'}, 'name': 'aws'}], 'kind': 'Config', 'apiVersion': 'v1', 'clusters': [{'name': 'kubernetes', 'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}}], 'current-context': 'aws', 'users': [{'name': 'aws', 'user': {'exec': {'apiVersion': 'client.authentication.k8s.io/v1alpha1', 'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc']}}}]}, 'oidc_provider': <pulumi_aws.iam.open_id_connect_provider.OpenIdConnectProvider object at 0x111b9f610>, 'private_subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'storage_classes': {}, 'vpc_cni': <pulumi_eks.vpc_cni.VpcCni object at 0x111bdee50>}
    debug: incoming output property translated: kubeconfig -> kubeconfig
    debug: incoming output value translated: {'kind': 'Config', 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'apiVersion': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec': {'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'apiVersion': 'client.authentication.k8s.io/v1alpha1'}}, 'name': 'aws'}], 'clusters': [{'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}, 'name': 'kubernetes'}]} -> {'kind': 'Config', 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'apiVersion': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec': {'command': 'aws', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'apiVersion': 'client.authentication.k8s.io/v1alpha1'}}, 'name': 'aws'}], 'clusters': [{'cluster': {'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=', 'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com'}, 'name': 'kubernetes'}]}
    debug: looking for resolver using translated name instance_roles
    debug: looking for resolver using translated name provider
    debug: looking for resolver using translated name node_security_group
    debug: looking for resolver using translated name cluster_security_group
    debug: looking for resolver using translated name eks_cluster_ingress_rule
    debug: looking for resolver using translated name eks_cluster
    debug: looking for resolver using translated name core
    debug: looking for resolver using translated name kubeconfig
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: beginning rpc get resource
    debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    debug: top-level input property translated: description -> description
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    debug: top-level input property translated: description -> description
    debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} preparing to wait for dependencies
    debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} preparing to wait for dependencies
    debug: resource {'api_version': 'v1', 'binary_data': None, 'data': None, 'immutable': None, 'kind': 'ConfigMap', 'metadata': None} preparing to wait for dependencies
    debug: top-level input property translated: api_version -> apiVersion
    debug: top-level input property translated: kind -> kind
    debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} preparing to wait for dependencies
    debug: resource {'cluster_name': None, 'fargate_profile_name': None, 'pod_execution_role_arn': None, 'selectors': None, 'subnet_ids': None, 'tags': None, 'arn': None, 'status': None} preparing to wait for dependencies
    debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    debug: resource {'client_id_lists': None, 'thumbprint_lists': None, 'url': None, 'arn': None} preparing to wait for dependencies
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    debug: top-level input property translated: description -> description
    debug: resource {'custom_network_config': None, 'eni_config_label_def': None, 'eni_mtu': None, 'external_snat': None, 'image': None, 'kubeconfig': None, 'log_file': None, 'log_level': None, 'node_port_support': None, 'veth_prefix': None, 'warm_eni_target': None, 'warm_ip_target': None} preparing to wait for dependencies
    debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} preparing to wait for dependencies
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} preparing to wait for dependencies
    debug: top-level input property translated: description -> description
    debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} prepared
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} prepared
    debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} prepared
    debug: resource {'api_version': 'v1', 'binary_data': None, 'data': None, 'immutable': None, 'kind': 'ConfigMap', 'metadata': None} prepared
    debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': None, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} prepared
    debug: resource {'enabled_cluster_log_types': None, 'encryption_config': None, 'kubernetes_network_config': None, 'name': None, 'role_arn': None, 'tags': None, 'version': None, 'vpc_config': None, 'arn': None, 'certificate_authority': None, 'created_at': None, 'endpoint': None, 'identities': None, 'platform_version': None, 'status': None} prepared
    debug: resource {'cluster_name': None, 'fargate_profile_name': None, 'pod_execution_role_arn': None, 'selectors': None, 'subnet_ids': None, 'tags': None, 'arn': None, 'status': None} prepared
    debug: resource {'assume_role_policy': None, 'description': None, 'force_detach_policies': None, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    debug: resource {'client_id_lists': None, 'thumbprint_lists': None, 'url': None, 'arn': None} prepared
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    debug: resource {'custom_network_config': None, 'eni_config_label_def': None, 'eni_mtu': None, 'external_snat': None, 'image': None, 'kubeconfig': None, 'log_file': None, 'log_level': None, 'node_port_support': None, 'veth_prefix': None, 'warm_eni_target': None, 'warm_ip_target': None} prepared
    debug: resource {'cidr_blocks': None, 'description': None, 'from_port': None, 'ipv6_cidr_blocks': None, 'prefix_list_ids': None, 'protocol': None, 'security_group_id': None, 'self': None, 'source_security_group_id': None, 'to_port': None, 'type': None} prepared
    debug: resource {'description': 'Managed by Pulumi', 'egress': None, 'ingress': None, 'name': None, 'name_prefix': None, 'revoke_rules_on_delete': None, 'tags': None, 'vpc_id': None, 'arn': None, 'owner_id': None} prepared
    debug: getResource completed successfully: ty=aws:iam/role:Role, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {} -> {}
    debug: incoming output property translated: assumeRolePolicy -> assume_role_policy
    debug: incoming output value translated: {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]} -> {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]}
    debug: incoming output property translated: maxSessionDuration -> max_session_duration
    debug: incoming output value translated: 3600.0 -> 3600
    debug: incoming output property translated: description -> description
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: createDate -> create_date
    debug: incoming output value translated: 2021-02-26T14:48:18Z -> 2021-02-26T14:48:18Z
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126 -> arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126
    debug: incoming output property translated: uniqueId -> unique_id
    debug: incoming output value translated: AROAQYTQLLIFHBA4LNWT6 -> AROAQYTQLLIFHBA4LNWT6
    debug: incoming output property translated: forceDetachPolicies -> force_detach_policies
    debug: incoming output value translated: False -> False
    debug: incoming output property translated: path -> path
    debug: incoming output value translated: / -> /
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name tags
    debug: looking for resolver using translated name assume_role_policy
    debug: looking for resolver using translated name max_session_duration
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name create_date
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name unique_id
    debug: looking for resolver using translated name force_detach_policies
    debug: looking for resolver using translated name path
    debug: getResource completed successfully: ty=pulumi:providers:kubernetes, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-provider
    debug: incoming output property translated: version -> version
    debug: incoming output value translated: 2.8.0 -> 2.8.0
    debug: incoming output property translated: kubeconfig -> kubeconfig
    debug: incoming output value translated: {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]} -> {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]}
    debug: looking for resolver using translated name version
    debug: looking for resolver using translated name kubeconfig
    debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    debug: incoming output property translated: namePrefix -> name_prefix
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723
    debug: incoming output property translated: ingress -> ingress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-nodeSecurityGroup-e015189 -> eks-main-eks-nodeSecurityGroup-e015189
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned', 'Name': 'eks-main-eks-nodeSecurityGroup'} -> {'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned', 'Name': 'eks-main-eks-nodeSecurityGroup'}
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    debug: incoming output property translated: description -> description
    debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    debug: incoming output property translated: egress -> egress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    debug: incoming output value translated: True -> True
    debug: incoming output property translated: ownerId -> owner_id
    debug: incoming output value translated: 052848974346 -> 052848974346
    debug: incoming output property translated: vpcId -> vpc_id
    debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    debug: looking for resolver using translated name name_prefix
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name ingress
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name tags
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name egress
    debug: looking for resolver using translated name revoke_rules_on_delete
    debug: looking for resolver using translated name owner_id
    debug: looking for resolver using translated name vpc_id
    debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    debug: incoming output property translated: ingress -> ingress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: description -> description
    debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    debug: incoming output property translated: egress -> egress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-eksClusterSecurityGroup-9283f28 -> eks-main-eks-eksClusterSecurityGroup-9283f28
    debug: incoming output property translated: namePrefix -> name_prefix
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845
    debug: incoming output property translated: vpcId -> vpc_id
    debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    debug: incoming output property translated: ownerId -> owner_id
    debug: incoming output value translated: 052848974346 -> 052848974346
    debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    debug: incoming output value translated: True -> True
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {'Name': 'eks-main-eks-eksClusterSecurityGroup'} -> {'Name': 'eks-main-eks-eksClusterSecurityGroup'}
    debug: looking for resolver using translated name ingress
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name egress
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name name_prefix
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name vpc_id
    debug: looking for resolver using translated name owner_id
    debug: looking for resolver using translated name revoke_rules_on_delete
    debug: looking for resolver using translated name tags
    debug: getResource completed successfully: ty=aws:ec2/securityGroupRule:SecurityGroupRule, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    debug: incoming output property translated: protocol -> protocol
    debug: incoming output value translated: tcp -> tcp
    debug: incoming output property translated: sourceSecurityGroupId -> source_security_group_id
    debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    debug: incoming output property translated: description -> description
    debug: incoming output value translated: Allow pods to communicate with the cluster API Server -> Allow pods to communicate with the cluster API Server
    debug: incoming output property translated: toPort -> to_port
    debug: incoming output value translated: 443.0 -> 443
    debug: incoming output property translated: type -> type
    debug: incoming output value translated: ingress -> ingress
    debug: incoming output property translated: fromPort -> from_port
    debug: incoming output value translated: 443.0 -> 443
    debug: incoming output property translated: securityGroupId -> security_group_id
    debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: sgrule-3344048136 -> sgrule-3344048136
    debug: incoming output property translated: self -> self
    debug: incoming output value translated: False -> False
    debug: looking for resolver using translated name protocol
    debug: looking for resolver using translated name source_security_group_id
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name to_port
    debug: looking for resolver using translated name type
    debug: looking for resolver using translated name from_port
    debug: looking for resolver using translated name security_group_id
    debug: looking for resolver using translated name self
    debug: getResource completed successfully: ty=aws:eks/cluster:Cluster, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    debug: incoming output property translated: vpcConfig -> vpc_config
    debug: incoming output value translated: {'securityGroupIds': ['sg-084343bc5734f4845'], 'publicAccessCidrs': ['0.0.0.0/0'], 'vpcId': 'vpc-0b7b646c66cd6f099', 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'subnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'endpointPublicAccess': True, 'endpointPrivateAccess': False} -> {'subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'endpointPrivateAccess': False, 'endpointPublicAccess': True, 'publicAccessCidrs': ['0.0.0.0/0'], 'security_group_ids': ['sg-084343bc5734f4845'], 'vpc_id': 'vpc-0b7b646c66cd6f099'}
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    debug: incoming output property translated: status -> status
    debug: incoming output value translated: ACTIVE -> ACTIVE
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {'Name': 'eks-main-eks-eksCluster'} -> {'Name': 'eks-main-eks-eksCluster'}
    debug: incoming output property translated: version -> version
    debug: incoming output value translated: 1.18 -> 1.18
    debug: incoming output property translated: createdAt -> created_at
    debug: incoming output value translated: 2021-02-26 14:48:23.041 +0000 UTC -> 2021-02-26 14:48:23.041 +0000 UTC
    debug: incoming output property translated: certificateAuthority -> certificate_authority
    debug: incoming output value translated: {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='} -> {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc -> arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    debug: incoming output property translated: platformVersion -> platform_version
    debug: incoming output value translated: eks.3 -> eks.3
    debug: incoming output property translated: endpoint -> endpoint
    debug: incoming output value translated: https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com -> https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com
    debug: incoming output property translated: identities -> identities
    debug: incoming output value translated: [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}] -> [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}]
    debug: incoming output property translated: kubernetesNetworkConfig -> kubernetes_network_config
    debug: incoming output value translated: {'serviceIpv4Cidr': '172.20.0.0/16'} -> {'serviceIpv4Cidr': '172.20.0.0/16'}
    debug: incoming output property translated: enabledClusterLogTypes -> enabled_cluster_log_types
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: roleArn -> role_arn
    debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6 -> arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6
    debug: looking for resolver using translated name vpc_config
    debug: looking for resolver using translated name status
    debug: looking for resolver using translated name tags
    debug: looking for resolver using translated name version
    debug: looking for resolver using translated name created_at
    debug: looking for resolver using translated name certificate_authority
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name platform_version
    debug: looking for resolver using translated name endpoint
    debug: looking for resolver using translated name identities
    debug: looking for resolver using translated name kubernetes_network_config
    debug: looking for resolver using translated name enabled_cluster_log_types
    debug: looking for resolver using translated name role_arn
    debug: getResource completed successfully: ty=kubernetes:core/v1:ConfigMap, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$kubernetes:core/v1:ConfigMap::eks-main-eks-nodeAccess
    debug: incoming output property translated: apiVersion -> api_version
    debug: incoming output value translated: v1 -> v1
    debug: incoming output property translated: metadata -> metadata
    debug: incoming output value translated: {'name': 'aws-auth', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","data":{"mapRoles":"- rolearn: \'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126\'\\n  username: \'system:node:{{EC2PrivateDNSName}}\'\\n  groups:\\n    - \'system:bootstrappers\'\\n    - \'system:nodes\'\\n"},"kind":"ConfigMap","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"aws-auth","namespace":"kube-system"}}\n'}, 'uid': '621e5b3c-1b49-4b25-9123-2cef6f20daa9', 'creationTimestamp': '2021-02-26T15:00:24Z', 'resourceVersion': '710', 'selfLink': '/api/v1/namespaces/kube-system/configmaps/aws-auth', 'managedFields': [{'operation': 'Update', 'apiVersion': 'v1', 'manager': 'pulumi-resource-kubernetes', 'fieldsV1': {'f:data': {'.': {}, 'f:mapRoles': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}, 'f:annotations': {'.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}}, 'fieldsType': 'FieldsV1', 'time': '2021-02-26T15:00:24Z'}], 'namespace': 'kube-system'} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","data":{"mapRoles":"- rolearn: \'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126\'\\n  username: \'system:node:{{EC2PrivateDNSName}}\'\\n  groups:\\n    - \'system:bootstrappers\'\\n    - \'system:nodes\'\\n"},"kind":"ConfigMap","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"aws-auth","namespace":"kube-system"}}\n'}, 'creation_timestamp': '2021-02-26T15:00:24Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'managed_fields': [{'api_version': 'v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:data': {'.': {}, 'f:mapRoles': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}, 'f:annotations': {'.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:00:24Z'}], 'name': 'aws-auth', 'namespace': 'kube-system', 'resource_version': '710', 'self_link': '/api/v1/namespaces/kube-system/configmaps/aws-auth', 'uid': '621e5b3c-1b49-4b25-9123-2cef6f20daa9'}
    debug: incoming output property translated: kind -> kind
    debug: incoming output value translated: ConfigMap -> ConfigMap
    debug: incoming output property translated: data -> data
    debug: incoming output value translated: {'mapRoles': "- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"} -> {'mapRoles': "- rolearn: 'arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"}
    debug: looking for resolver using translated name api_version
    debug: looking for resolver using translated name metadata
    debug: looking for resolver using translated name kind
    debug: looking for resolver using translated name data
    debug: getResource completed successfully: ty=pulumi:providers:kubernetes, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$pulumi:providers:kubernetes::eks-main-eks-eks-k8s
    debug: incoming output property translated: version -> version
    debug: incoming output value translated: 2.8.0 -> 2.8.0
    debug: incoming output property translated: kubeconfig -> kubeconfig
    debug: incoming output value translated: {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]} -> {"apiVersion":"v1","clusters":[{"cluster":{"server":"https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com","certificate-authority-data":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"name":"kubernetes"}],"contexts":[{"context":{"cluster":"kubernetes","user":"aws"},"name":"aws"}],"current-context":"aws","kind":"Config","users":[{"name":"aws","user":{"exec":{"apiVersion":"client.authentication.k8s.io/v1alpha1","command":"aws","args":["eks","get-token","--cluster-name","eks-main-eks-eksCluster-5d4dcbc"]}}}]}
    debug: looking for resolver using translated name version
    debug: looking for resolver using translated name kubeconfig
    debug: getResource completed successfully: ty=aws:eks/cluster:Cluster, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/cluster:Cluster::eks-main-eks-eksCluster
    debug: incoming output property translated: status -> status
    debug: incoming output value translated: ACTIVE -> ACTIVE
    debug: incoming output property translated: enabledClusterLogTypes -> enabled_cluster_log_types
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: vpcConfig -> vpc_config
    debug: incoming output value translated: {'endpointPublicAccess': True, 'securityGroupIds': ['sg-084343bc5734f4845'], 'subnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'publicAccessCidrs': ['0.0.0.0/0'], 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'vpcId': 'vpc-0b7b646c66cd6f099', 'endpointPrivateAccess': False} -> {'subnet_ids': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'clusterSecurityGroupId': 'sg-0280096cc04a81715', 'endpointPrivateAccess': False, 'endpointPublicAccess': True, 'publicAccessCidrs': ['0.0.0.0/0'], 'security_group_ids': ['sg-084343bc5734f4845'], 'vpc_id': 'vpc-0b7b646c66cd6f099'}
    debug: incoming output property translated: platformVersion -> platform_version
    debug: incoming output value translated: eks.3 -> eks.3
    debug: incoming output property translated: kubernetesNetworkConfig -> kubernetes_network_config
    debug: incoming output value translated: {'serviceIpv4Cidr': '172.20.0.0/16'} -> {'serviceIpv4Cidr': '172.20.0.0/16'}
    debug: incoming output property translated: version -> version
    debug: incoming output value translated: 1.18 -> 1.18
    debug: incoming output property translated: createdAt -> created_at
    debug: incoming output value translated: 2021-02-26 14:48:23.041 +0000 UTC -> 2021-02-26 14:48:23.041 +0000 UTC
    debug: incoming output property translated: certificateAuthority -> certificate_authority
    debug: incoming output value translated: {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='} -> {'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}
    debug: incoming output property translated: identities -> identities
    debug: incoming output value translated: [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}] -> [{'oidcs': [{'issuer': 'https://oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F'}]}]
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    debug: incoming output property translated: roleArn -> role_arn
    debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6 -> arn:aws:iam::052848974346:role/eks-main-eks-eksRole-role-b7159f6
    debug: incoming output property translated: endpoint -> endpoint
    debug: incoming output value translated: https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com -> https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {'Name': 'eks-main-eks-eksCluster'} -> {'Name': 'eks-main-eks-eksCluster'}
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc -> arn:aws:eks:us-east-2:052848974346:cluster/eks-main-eks-eksCluster-5d4dcbc
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    debug: looking for resolver using translated name status
    debug: looking for resolver using translated name enabled_cluster_log_types
    debug: looking for resolver using translated name vpc_config
    debug: looking for resolver using translated name platform_version
    debug: looking for resolver using translated name kubernetes_network_config
    debug: looking for resolver using translated name version
    debug: looking for resolver using translated name created_at
    debug: looking for resolver using translated name certificate_authority
    debug: looking for resolver using translated name identities
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name role_arn
    debug: looking for resolver using translated name endpoint
    debug: looking for resolver using translated name tags
    debug: looking for resolver using translated name arn
    debug: getResource completed successfully: ty=aws:eks/fargateProfile:FargateProfile, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:eks/fargateProfile:FargateProfile::eks_main-eksfargateProfile
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:eks:us-east-2:052848974346:fargateprofile/eks-main-eks-eksCluster-5d4dcbc/eks_main-eksfargateProfile-00d6206/e4bbef6d-7f40-e761-d583-c101416e841d -> arn:aws:eks:us-east-2:052848974346:fargateprofile/eks-main-eks-eksCluster-5d4dcbc/eks_main-eksfargateProfile-00d6206/e4bbef6d-7f40-e761-d583-c101416e841d
    debug: incoming output property translated: clusterName -> cluster_name
    debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc -> eks-main-eks-eksCluster-5d4dcbc
    debug: incoming output property translated: subnetIds -> subnet_ids
    debug: incoming output value translated: ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'] -> ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768']
    debug: incoming output property translated: status -> status
    debug: incoming output value translated: ACTIVE -> ACTIVE
    debug: incoming output property translated: fargateProfileName -> fargate_profile_name
    debug: incoming output value translated: eks_main-eksfargateProfile-00d6206 -> eks_main-eksfargateProfile-00d6206
    debug: incoming output property translated: selectors -> selectors
    debug: incoming output value translated: [{'labels': {}, 'namespace': 'eks-main-app'}, {'namespace': 'kube-system', 'labels': {}}] -> [{'namespace': 'eks-main-app', 'labels': {}}, {'namespace': 'kube-system', 'labels': {}}]
    debug: incoming output property translated: podExecutionRoleArn -> pod_execution_role_arn
    debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d -> arn:aws:iam::052848974346:role/eks-main-eks-podExecutionRole-role-beaab3d
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206 -> eks-main-eks-eksCluster-5d4dcbc:eks_main-eksfargateProfile-00d6206
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {} -> {}
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name cluster_name
    debug: looking for resolver using translated name subnet_ids
    debug: looking for resolver using translated name status
    debug: looking for resolver using translated name fargate_profile_name
    debug: looking for resolver using translated name selectors
    debug: looking for resolver using translated name pod_execution_role_arn
    debug: looking for resolver using translated name tags
    debug: getResource completed successfully: ty=aws:iam/role:Role, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::eks-main-eks-instanceRole-role
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126 -> arn:aws:iam::052848974346:role/eks-main-eks-instanceRole-role-02f1126
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {} -> {}
    debug: incoming output property translated: description -> description
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: forceDetachPolicies -> force_detach_policies
    debug: incoming output value translated: False -> False
    debug: incoming output property translated: createDate -> create_date
    debug: incoming output value translated: 2021-02-26T14:48:18Z -> 2021-02-26T14:48:18Z
    debug: incoming output property translated: path -> path
    debug: incoming output value translated: / -> /
    debug: incoming output property translated: uniqueId -> unique_id
    debug: incoming output value translated: AROAQYTQLLIFHBA4LNWT6 -> AROAQYTQLLIFHBA4LNWT6
    debug: incoming output property translated: maxSessionDuration -> max_session_duration
    debug: incoming output value translated: 3600.0 -> 3600
    debug: incoming output property translated: assumeRolePolicy -> assume_role_policy
    debug: incoming output value translated: {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]} -> {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]}
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: eks-main-eks-instanceRole-role-02f1126 -> eks-main-eks-instanceRole-role-02f1126
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name tags
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name force_detach_policies
    debug: looking for resolver using translated name create_date
    debug: looking for resolver using translated name path
    debug: looking for resolver using translated name unique_id
    debug: looking for resolver using translated name max_session_duration
    debug: looking for resolver using translated name assume_role_policy
    debug: getResource completed successfully: ty=aws:iam/openIdConnectProvider:OpenIdConnectProvider, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::eks-main-eks-oidcProvider
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F -> arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F
    debug: incoming output property translated: thumbprintLists -> thumbprint_lists
    debug: incoming output value translated: ['9e99a48a9960b14926bb7f3b02e22da2b0ab7280'] -> ['9e99a48a9960b14926bb7f3b02e22da2b0ab7280']
    debug: incoming output property translated: clientIdLists -> client_id_lists
    debug: incoming output value translated: ['sts.amazonaws.com'] -> ['sts.amazonaws.com']
    debug: incoming output property translated: url -> url
    debug: incoming output value translated: oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F -> oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F -> arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name thumbprint_lists
    debug: looking for resolver using translated name client_id_lists
    debug: looking for resolver using translated name url
    debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-eksClusterSecurityGroup
    debug: incoming output property translated: namePrefix -> name_prefix
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: egress -> egress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: description -> description
    debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    debug: incoming output property translated: vpcId -> vpc_id
    debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {'Name': 'eks-main-eks-eksClusterSecurityGroup'} -> {'Name': 'eks-main-eks-eksClusterSecurityGroup'}
    debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    debug: incoming output value translated: True -> True
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-084343bc5734f4845
    debug: incoming output property translated: ingress -> ingress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: ownerId -> owner_id
    debug: incoming output value translated: 052848974346 -> 052848974346
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-eksClusterSecurityGroup-9283f28 -> eks-main-eks-eksClusterSecurityGroup-9283f28
    debug: looking for resolver using translated name name_prefix
    debug: looking for resolver using translated name egress
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name vpc_id
    debug: looking for resolver using translated name tags
    debug: looking for resolver using translated name revoke_rules_on_delete
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name ingress
    debug: looking for resolver using translated name owner_id
    debug: looking for resolver using translated name name
    debug: getResource completed successfully: ty=eks:index:VpcCni, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$eks:index:VpcCni::eks-main-eks-vpc-cni
    debug: getResource completed successfully: ty=aws:ec2/securityGroupRule:SecurityGroupRule, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::eks-main-eks-eksClusterIngressRule
    debug: incoming output property translated: self -> self
    debug: incoming output value translated: False -> False
    debug: incoming output property translated: toPort -> to_port
    debug: incoming output value translated: 443.0 -> 443
    debug: incoming output property translated: type -> type
    debug: incoming output value translated: ingress -> ingress
    debug: incoming output property translated: sourceSecurityGroupId -> source_security_group_id
    debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    debug: incoming output property translated: protocol -> protocol
    debug: incoming output value translated: tcp -> tcp
    debug: incoming output property translated: description -> description
    debug: incoming output value translated: Allow pods to communicate with the cluster API Server -> Allow pods to communicate with the cluster API Server
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: sgrule-3344048136 -> sgrule-3344048136
    debug: incoming output property translated: fromPort -> from_port
    debug: incoming output value translated: 443.0 -> 443
    debug: incoming output property translated: securityGroupId -> security_group_id
    debug: incoming output value translated: sg-084343bc5734f4845 -> sg-084343bc5734f4845
    debug: looking for resolver using translated name self
    debug: looking for resolver using translated name to_port
    debug: looking for resolver using translated name type
    debug: looking for resolver using translated name source_security_group_id
    debug: looking for resolver using translated name protocol
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name from_port
    debug: looking for resolver using translated name security_group_id
    debug: getResource completed successfully: ty=aws:ec2/securityGroup:SecurityGroup, urn=urn:pulumi:dev::eks-main::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::eks-main-eks-nodeSecurityGroup
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723 -> arn:aws:ec2:us-east-2:052848974346:security-group/sg-0a5ff208056363723
    debug: incoming output property translated: description -> description
    debug: incoming output value translated: Managed by Pulumi -> Managed by Pulumi
    debug: incoming output property translated: revokeRulesOnDelete -> revoke_rules_on_delete
    debug: incoming output value translated: True -> True
    debug: incoming output property translated: tags -> tags
    debug: incoming output value translated: {'Name': 'eks-main-eks-nodeSecurityGroup', 'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned'} -> {'Name': 'eks-main-eks-nodeSecurityGroup', 'kubernetes.io/cluster/eks-main-eks-eksCluster-5d4dcbc': 'owned'}
    debug: incoming output property translated: ownerId -> owner_id
    debug: incoming output value translated: 052848974346 -> 052848974346
    debug: incoming output property translated: ingress -> ingress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: sg-0a5ff208056363723 -> sg-0a5ff208056363723
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-eks-nodeSecurityGroup-e015189 -> eks-main-eks-nodeSecurityGroup-e015189
    debug: incoming output property translated: egress -> egress
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: namePrefix -> name_prefix
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: vpcId -> vpc_id
    debug: incoming output value translated: vpc-0b7b646c66cd6f099 -> vpc-0b7b646c66cd6f099
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name revoke_rules_on_delete
    debug: looking for resolver using translated name tags
    debug: looking for resolver using translated name owner_id
    debug: looking for resolver using translated name ingress
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name egress
    debug: looking for resolver using translated name name_prefix
    debug: looking for resolver using translated name vpc_id
    debug: transforming input property: kind -> kind
    debug: transforming input property: contexts -> contexts
    debug: transforming input property: name -> name
    debug: transforming input property: context -> context
    debug: transforming input property: user -> user
    debug: transforming input property: cluster -> cluster
    debug: transforming input property: apiVersion -> apiVersion
    debug: transforming input property: current-context -> current-context
    debug: transforming input property: users -> users
    debug: transforming input property: user -> user
    debug: transforming input property: exec -> exec
    debug: transforming input property: command -> command
    debug: transforming input property: args -> args
    debug: transforming input property: apiVersion -> apiVersion
    debug: transforming input property: name -> name
    debug: transforming input property: clusters -> clusters
    debug: transforming input property: cluster -> cluster
    debug: transforming input property: certificate-authority-data -> certificate-authority-data
    debug: transforming input property: server -> server
    debug: transforming input property: name -> name
    debug: top-level input property translated: kubeconfig -> kubeconfig
    debug: register resource outputs prepared: urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev, props=fields {
      key: "App Namespace"
      value {
        string_value: "eks-main-app"
      }
    }
    fields {
      key: "kubeconfig"
      value {
        struct_value {
          fields {
            key: "4dabf18193072939515e22adb298388d"
            value {
              string_value: "1b47061264138c4ac30d75fd1eb44270"
            }
          }
          fields {
            key: "value"
            value {
              struct_value {
                fields {
                  key: "apiVersion"
                  value {
                    string_value: "v1"
                  }
                }
                fields {
                  key: "clusters"
                  value {
                    list_value {
                      values {
                        struct_value {
                          fields {
                            key: "cluster"
                            value {
                              struct_value {
                                fields {
                                  key: "certificate-authority-data"
                                  value {
                                    string_value: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                                  }
                                }
                                fields {
                                  key: "server"
                                  value {
                                    string_value: "https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com"
                                  }
                                }
                              }
                            }
                          }
                          fields {
                            key: "name"
                            value {
                              string_value: "kubernetes"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "contexts"
                  value {
                    list_value {
                      values {
                        struct_value {
                          fields {
                            key: "context"
                            value {
                              struct_value {
                                fields {
                                  key: "cluster"
                                  value {
                                    string_value: "kubernetes"
                                  }
                                }
                                fields {
                                  key: "user"
                                  value {
                                    string_value: "aws"
                                  }
                                }
                              }
                            }
                          }
                          fields {
                            key: "name"
                            value {
                              string_value: "aws"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "current-context"
                  value {
                    string_value: "aws"
                  }
                }
                fields {
                  key: "kind"
                  value {
                    string_value: "Config"
                  }
                }
                fields {
                  key: "users"
                  value {
                    list_value {
                      values {
                        struct_value {
                          fields {
                            key: "name"
                            value {
                              string_value: "aws"
                            }
                          }
                          fields {
                            key: "user"
                            value {
                              struct_value {
                                fields {
                                  key: "exec"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "apiVersion"
                                        value {
                                          string_value: "client.authentication.k8s.io/v1alpha1"
                                        }
                                      }
                                      fields {
                                        key: "args"
                                        value {
                                          list_value {
                                            values {
                                              string_value: "eks"
                                            }
                                            values {
                                              string_value: "get-token"
                                            }
                                            values {
                                              string_value: "--cluster-name"
                                            }
                                            values {
                                              string_value: "eks-main-eks-eksCluster-5d4dcbc"
                                            }
                                          }
                                        }
                                      }
                                      fields {
                                        key: "command"
                                        value {
                                          string_value: "aws"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': <pulumi.output.Output object at 0x110d49d00>, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} prepared
    debug: resource registration prepared: ty=pulumi:providers:kubernetes, name=k8s
    debug: resource registration successful: urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev, props=fields {
      key: "App Namespace"
      value {
        string_value: "eks-main-app"
      }
    }
    fields {
      key: "kubeconfig"
      value {
        struct_value {
          fields {
            key: "4dabf18193072939515e22adb298388d"
            value {
              string_value: "1b47061264138c4ac30d75fd1eb44270"
            }
          }
          fields {
            key: "value"
            value {
              struct_value {
                fields {
                  key: "apiVersion"
                  value {
                    string_value: "v1"
                  }
                }
                fields {
                  key: "clusters"
                  value {
                    list_value {
                      values {
                        struct_value {
                          fields {
                            key: "cluster"
                            value {
                              struct_value {
                                fields {
                                  key: "certificate-authority-data"
                                  value {
                                    string_value: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                                  }
                                }
                                fields {
                                  key: "server"
                                  value {
                                    string_value: "https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com"
                                  }
                                }
                              }
                            }
                          }
                          fields {
                            key: "name"
                            value {
                              string_value: "kubernetes"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "contexts"
                  value {
                    list_value {
                      values {
                        struct_value {
                          fields {
                            key: "context"
                            value {
                              struct_value {
                                fields {
                                  key: "cluster"
                                  value {
                                    string_value: "kubernetes"
                                  }
                                }
                                fields {
                                  key: "user"
                                  value {
                                    string_value: "aws"
                                  }
                                }
                              }
                            }
                          }
                          fields {
                            key: "name"
                            value {
                              string_value: "aws"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "current-context"
                  value {
                    string_value: "aws"
                  }
                }
                fields {
                  key: "kind"
                  value {
                    string_value: "Config"
                  }
                }
                fields {
                  key: "users"
                  value {
                    list_value {
                      values {
                        struct_value {
                          fields {
                            key: "name"
                            value {
                              string_value: "aws"
                            }
                          }
                          fields {
                            key: "user"
                            value {
                              struct_value {
                                fields {
                                  key: "exec"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "apiVersion"
                                        value {
                                          string_value: "client.authentication.k8s.io/v1alpha1"
                                        }
                                      }
                                      fields {
                                        key: "args"
                                        value {
                                          list_value {
                                            values {
                                              string_value: "eks"
                                            }
                                            values {
                                              string_value: "get-token"
                                            }
                                            values {
                                              string_value: "--cluster-name"
                                            }
                                            values {
                                              string_value: "eks-main-eks-eksCluster-5d4dcbc"
                                            }
                                          }
                                        }
                                      }
                                      fields {
                                        key: "command"
                                        value {
                                          string_value: "aws"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    debug: waiting for quiescence; 28 RPCs outstanding
    debug: waiting for quiescence; 27 RPCs outstanding
    debug: waiting for quiescence; 26 RPCs outstanding
    debug: waiting for quiescence; 25 RPCs outstanding
    debug: waiting for quiescence; 24 RPCs outstanding
    debug: waiting for quiescence; 23 RPCs outstanding
    debug: waiting for quiescence; 22 RPCs outstanding
    debug: waiting for quiescence; 21 RPCs outstanding
    debug: waiting for quiescence; 20 RPCs outstanding
    debug: waiting for quiescence; 19 RPCs outstanding
    debug: waiting for quiescence; 18 RPCs outstanding
    debug: waiting for quiescence; 17 RPCs outstanding
    debug: waiting for quiescence; 16 RPCs outstanding
    debug: waiting for quiescence; 15 RPCs outstanding
    debug: waiting for quiescence; 14 RPCs outstanding
    debug: waiting for quiescence; 13 RPCs outstanding
    debug: waiting for quiescence; 12 RPCs outstanding
    debug: waiting for quiescence; 11 RPCs outstanding
    debug: waiting for quiescence; 10 RPCs outstanding
    debug: waiting for quiescence; 9 RPCs outstanding
    debug: waiting for quiescence; 8 RPCs outstanding
    debug: resource registration successful: ty=pulumi:providers:kubernetes, urn=urn:pulumi:dev::eks-main::pulumi:providers:kubernetes::k8s
    debug: incoming output property translated: kubeconfig -> kubeconfig
    debug: incoming output value translated: {'4dabf18193072939515e22adb298388d': '1b47061264138c4ac30d75fd1eb44270', 'value': {'kind': 'Config', 'apiVersion': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec': {'apiVersion': 'client.authentication.k8s.io/v1alpha1', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'command': 'aws'}}, 'name': 'aws'}], 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'clusters': [{'cluster': {'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}, 'name': 'kubernetes'}]}} -> {'4dabf18193072939515e22adb298388d': '1b47061264138c4ac30d75fd1eb44270', 'value': {'kind': 'Config', 'api_version': 'v1', 'current-context': 'aws', 'users': [{'user': {'exec_': {'api_version': 'client.authentication.k8s.io/v1alpha1', 'args': ['eks', 'get-token', '--cluster-name', 'eks-main-eks-eksCluster-5d4dcbc'], 'command': 'aws'}}, 'name': 'aws'}], 'contexts': [{'name': 'aws', 'context': {'user': 'aws', 'cluster': 'kubernetes'}}], 'clusters': [{'cluster': {'server': 'https://A72B1F6DBDD97583B52B25D4AFD7D57F.yl4.us-east-2.eks.amazonaws.com', 'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1ESXlOakUwTlRZd01Gb1hEVE14TURJeU5ERTBOVFl3TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGp0CmJrM0dGd0p2Q1FRdUNRbzBSdVBUVVU2bWFtMlhlUFptdnJRMTdsWW1HNlJUUnQraGxhVGNXc2VlNHV3cnRNVTgKYTRaVHB6TEFyc05MMzI1ZWVDaXhvVjVocm9qUnVrZFRkZkY5QXR3NmEweWlpcmN1aXJNU29Ua3NQc1Fvd01obQpMU0lXK3ZuYTZ0aU1tSlNVb0NFNmZidWgxZGFxa25nMUNHTU1VWHVhRHkxYm9QMlBhRUF3SHZPUkZiQk1lTFRRCmlDcWhndm91NHI4Nmh0T3o4a3hDaTVodWFLRVdQL1kyY1hoU3VheFZuZjEvSzAyUXhOY1BBMDBFbFJiK1cwUlQKaHRoYmxNcFovbndSRWE1aytCUHo1WHEvQmw2QzV1VllUKy80b3dDeWNWampjUFF0RXF3SEh4MEZZcDVrWUJlWApGc2tUQ1MvMXNscTl3WWlFeE1zQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGaXlyVzR6NGhlMVNrL0hHd1Z1NmUzaVdGb04KMXZQOTlPYWZQWW9lT0gxRllLd000ZlZqeHU5b3dPUUF5ZXRjYStidEVtWENpODlrdk9PS2xscVE1ZllSUDlSOQpyQU1IZ2NtQUs2dmYwUXZkZ0NaMlBHTzBMTUNjOXM4K3l1WUpoa1pGcXlTOFVJdGxacE4rVlNGb1RRWVQ0REZHCjRiY1Y2Ry8xR1dNWEI4YlpIUzdyYS8vSU1qSVg3cGI1bnZIa216OE5yWHhGSDhFbnAvRFlpUWlib1ViK1VmUEoKNGYwL3dvS3VoTE1HVkFDTk9zSHNGRlR5TWwvYWN3RTJGalBuYzNUdjdlSWdrNG9qK0tGTDRhaHNqaDdtYVBRdApoY2RaSC9qUjg3SUkzVTRnT04zbXcwK2VzTzFCeE1VTG9RZVVtNmdXeGRmaGdHZG1Sb0xsYU8vRDFxaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='}, 'name': 'kubernetes'}]}}
    debug: incoming output property translated: version -> version
    debug: incoming output value translated: 2.8.2 -> 2.8.2
    debug: looking for resolver using translated name kubeconfig
    debug: looking for resolver using translated name version
    debug: resource {'api_version': 'v1', 'kind': 'Namespace', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x111db1fa0>, 'spec': None, 'status': None} prepared
    debug: resource registration prepared: ty=kubernetes:core/v1:Namespace, name=eks-main-app
    debug: resource registration successful: ty=kubernetes:core/v1:Namespace, urn=urn:pulumi:dev::eks-main::kubernetes:core/v1:Namespace::eks-main-app
    debug: incoming output property translated: kind -> kind
    debug: incoming output value translated: Namespace -> Namespace
    debug: incoming output property translated: spec -> spec
    debug: incoming output value translated: {'finalizers': ['kubernetes']} -> {'finalizers': ['kubernetes']}
    debug: incoming output property translated: apiVersion -> api_version
    debug: incoming output value translated: v1 -> v1
    debug: incoming output property translated: status -> status
    debug: incoming output value translated: {'phase': 'Active'} -> {'phase': 'Active'}
    debug: incoming output property translated: metadata -> metadata
    debug: incoming output value translated: {'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'resourceVersion': '977', 'selfLink': '/api/v1/namespaces/eks-main-app', 'managedFields': [{'fieldsV1': {'f:status': {'f:phase': {}}, 'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, '.': {}}, 'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}}}}, 'apiVersion': 'v1', 'operation': 'Update', 'manager': 'pulumi-resource-kubernetes', 'time': '2021-02-26T15:01:42Z', 'fieldsType': 'FieldsV1'}], 'creationTimestamp': '2021-02-26T15:01:42Z', 'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Namespace","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app"}}\n'}, 'name': 'eks-main-app', 'uid': '65530e16-1ba8-4146-b499-6764ac0bf705'} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Namespace","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app"}}\n'}, 'creation_timestamp': '2021-02-26T15:01:42Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'managed_fields': [{'api_version': 'v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:status': {'f:phase': {}}, 'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, '.': {}}, 'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:01:42Z'}], 'name': 'eks-main-app', 'resource_version': '977', 'self_link': '/api/v1/namespaces/eks-main-app', 'uid': '65530e16-1ba8-4146-b499-6764ac0bf705'}
    debug: looking for resolver using translated name kind
    debug: looking for resolver using translated name spec
    debug: looking for resolver using translated name api_version
    debug: looking for resolver using translated name status
    debug: looking for resolver using translated name metadata
    debug: top-level input property translated: metadata -> metadata
    debug: transforming input property: app -> app
    debug: transforming input property: app -> app
    debug: top-level input property translated: spec -> spec
    debug: top-level input property translated: metadata -> metadata
    debug: transforming input property: app -> app
    debug: top-level input property translated: spec -> spec
    debug: resource {'api_version': 'v1', 'kind': 'Service', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb700>, 'spec': <pulumi_kubernetes.core.v1._inputs.ServiceSpecArgs object at 0x110ee2730>, 'status': None} prepared
    debug: resource registration prepared: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service
    debug: resource {'api_version': 'apps/v1', 'kind': 'Deployment', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x110dcb460>, 'spec': <pulumi_kubernetes.apps.v1._inputs.DeploymentSpecArgs object at 0x110dcb640>, 'status': None} prepared
    debug: resource registration prepared: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment
    debug: resource registration successful: ty=kubernetes:core/v1:Service, urn=urn:pulumi:dev::eks-main::custom:resource:App$kubernetes:core/v1:Service::eks-main-app-app-service
    debug: incoming output property translated: apiVersion -> api_version
    debug: incoming output value translated: v1 -> v1
    debug: incoming output property translated: status -> status
    debug: incoming output value translated: {'loadBalancer': {}} -> {'load_balancer': {}}
    debug: incoming output property translated: kind -> kind
    debug: incoming output value translated: Service -> Service
    debug: incoming output property translated: spec -> spec
    debug: incoming output value translated: {'type': 'NodePort', 'sessionAffinity': 'None', 'externalTrafficPolicy': 'Cluster', 'ports': [{'port': 80.0, 'nodePort': 31922.0, 'targetPort': 80.0, 'protocol': 'TCP'}], 'selector': {'app': 'nginx'}, 'clusterIP': '172.20.105.167'} -> {'cluster_ip': '172.20.105.167', 'external_traffic_policy': 'Cluster', 'ports': [{'port': 80, 'node_port': 31922, 'protocol': 'TCP', 'target_port': 80.0}], 'selector': {'app': 'nginx'}, 'session_affinity': 'None', 'type': 'NodePort'}
    debug: incoming output property translated: metadata -> metadata
    debug: incoming output value translated: {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-service-xn0x9uqw","namespace":"eks-main-app"},"spec":{"ports":[{"port":80}],"selector":{"app":"nginx"},"type":"NodePort"}}\n', 'pulumi.com/autonamed': 'true'}, 'uid': '9907f937-744a-44d4-8f4d-298464fc4f79', 'name': 'eks-main-app-app-service-xn0x9uqw', 'creationTimestamp': '2021-02-26T15:01:42Z', 'selfLink': '/api/v1/namespaces/eks-main-app/services/eks-main-app-app-service-xn0x9uqw', 'namespace': 'eks-main-app', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'resourceVersion': '983', 'managedFields': [{'operation': 'Update', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}, 'f:pulumi.com/autonamed': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}}, 'f:spec': {'f:sessionAffinity': {}, 'f:selector': {'f:app': {}, '.': {}}, 'f:ports': {'.': {}, 'k:{"port":80,"protocol":"TCP"}': {'.': {}, 'f:targetPort': {}, 'f:protocol': {}, 'f:port': {}}}, 'f:externalTrafficPolicy': {}, 'f:type': {}}}, 'time': '2021-02-26T15:01:42Z', 'fieldsType': 'FieldsV1', 'apiVersion': 'v1', 'manager': 'pulumi-resource-kubernetes'}]} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-service-xn0x9uqw","namespace":"eks-main-app"},"spec":{"ports":[{"port":80}],"selector":{"app":"nginx"},"type":"NodePort"}}\n', 'pulumi.com/autonamed': 'true'}, 'creation_timestamp': '2021-02-26T15:01:42Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi'}, 'managed_fields': [{'api_version': 'v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:metadata': {'f:annotations': {'f:kubectl.kubernetes.io/last-applied-configuration': {}, '.': {}, 'f:pulumi.com/autonamed': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}}}, 'f:spec': {'f:sessionAffinity': {}, 'f:selector': {'f:app': {}, '.': {}}, 'f:ports': {'.': {}, 'k:{"port":80,"protocol":"TCP"}': {'.': {}, 'f:targetPort': {}, 'f:protocol': {}, 'f:port': {}}}, 'f:externalTrafficPolicy': {}, 'f:type': {}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:01:42Z'}], 'name': 'eks-main-app-app-service-xn0x9uqw', 'namespace': 'eks-main-app', 'resource_version': '983', 'self_link': '/api/v1/namespaces/eks-main-app/services/eks-main-app-app-service-xn0x9uqw', 'uid': '9907f937-744a-44d4-8f4d-298464fc4f79'}
    debug: looking for resolver using translated name api_version
    debug: looking for resolver using translated name status
    debug: looking for resolver using translated name kind
    debug: looking for resolver using translated name spec
    debug: looking for resolver using translated name metadata
    debug: waiting for quiescence; 7 RPCs outstanding
    debug: resource registration successful: ty=kubernetes:apps/v1:Deployment, urn=urn:pulumi:dev::eks-main::custom:resource:App$kubernetes:apps/v1:Deployment::eks-main-app-app-deployment
    debug: incoming output property translated: metadata -> metadata
    debug: incoming output value translated: {'generation': 1.0, 'resourceVersion': '1439', 'creationTimestamp': '2021-02-26T15:01:42Z', 'labels': {'app.kubernetes.io/managed-by': 'pulumi', 'app': 'nginx'}, 'uid': '460878ee-b102-46bc-943c-bc0bca464845', 'managedFields': [{'time': '2021-02-26T15:01:42Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, 'f:app': {}, '.': {}}, 'f:annotations': {'f:pulumi.com/autonamed': {}, '.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:replicas': {}, 'f:progressDeadlineSeconds': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {'f:matchLabels': {'f:app': {}, '.': {}}}, 'f:template': {'f:spec': {'f:containers': {'k:{"name":"eks-main-app"}': {'f:terminationMessagePolicy': {}, 'f:resources': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:image': {}, '.': {}, 'f:terminationMessagePath': {}}}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:schedulerName': {}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app': {}}}}, 'f:strategy': {'f:rollingUpdate': {'f:maxSurge': {}, '.': {}, 'f:maxUnavailable': {}}, 'f:type': {}}}}, 'apiVersion': 'apps/v1', 'operation': 'Update', 'manager': 'pulumi-resource-kubernetes'}, {'apiVersion': 'apps/v1', 'fieldsType': 'FieldsV1', 'time': '2021-02-26T15:03:35Z', 'manager': 'kube-controller-manager', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"Progressing"}': {'f:lastUpdateTime': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, '.': {}, 'k:{"type":"Available"}': {'f:reason': {}, 'f:lastUpdateTime': {}, 'f:type': {}, 'f:status': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}}}, 'f:readyReplicas': {}, 'f:observedGeneration': {}, 'f:replicas': {}, 'f:availableReplicas': {}, 'f:updatedReplicas': {}}, 'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}}, 'operation': 'Update'}], 'selfLink': '/apis/apps/v1/namespaces/eks-main-app/deployments/eks-main-app-app-deployment-349l8jl5', 'name': 'eks-main-app-app-deployment-349l8jl5', 'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app":"nginx","app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-deployment-349l8jl5","namespace":"eks-main-app"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx","name":"eks-main-app"}]}}}}\n', 'deployment.kubernetes.io/revision': '1', 'pulumi.com/autonamed': 'true'}, 'namespace': 'eks-main-app'} -> {'annotations': {'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"labels":{"app":"nginx","app.kubernetes.io/managed-by":"pulumi"},"name":"eks-main-app-app-deployment-349l8jl5","namespace":"eks-main-app"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx","name":"eks-main-app"}]}}}}\n', 'deployment.kubernetes.io/revision': '1', 'pulumi.com/autonamed': 'true'}, 'creation_timestamp': '2021-02-26T15:01:42Z', 'generation': 1, 'labels': {'app.kubernetes.io/managed-by': 'pulumi', 'app': 'nginx'}, 'managed_fields': [{'api_version': 'apps/v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:metadata': {'f:labels': {'f:app.kubernetes.io/managed-by': {}, 'f:app': {}, '.': {}}, 'f:annotations': {'f:pulumi.com/autonamed': {}, '.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:replicas': {}, 'f:progressDeadlineSeconds': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {'f:matchLabels': {'f:app': {}, '.': {}}}, 'f:template': {'f:spec': {'f:containers': {'k:{"name":"eks-main-app"}': {'f:terminationMessagePolicy': {}, 'f:resources': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:image': {}, '.': {}, 'f:terminationMessagePath': {}}}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:schedulerName': {}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}}, 'f:metadata': {'f:labels': {'.': {}, 'f:app': {}}}}, 'f:strategy': {'f:rollingUpdate': {'f:maxSurge': {}, '.': {}, 'f:maxUnavailable': {}}, 'f:type': {}}}}, 'manager': 'pulumi-resource-kubernetes', 'operation': 'Update', 'time': '2021-02-26T15:01:42Z'}, {'api_version': 'apps/v1', 'fields_type': 'FieldsV1', 'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"Progressing"}': {'f:lastUpdateTime': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, '.': {}, 'k:{"type":"Available"}': {'f:reason': {}, 'f:lastUpdateTime': {}, 'f:type': {}, 'f:status': {}, 'f:lastTransitionTime': {}, '.': {}, 'f:message': {}}}, 'f:readyReplicas': {}, 'f:observedGeneration': {}, 'f:replicas': {}, 'f:availableReplicas': {}, 'f:updatedReplicas': {}}, 'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}}, 'manager': 'kube-controller-manager', 'operation': 'Update', 'time': '2021-02-26T15:03:35Z'}], 'name': 'eks-main-app-app-deployment-349l8jl5', 'namespace': 'eks-main-app', 'resource_version': '1439', 'self_link': '/apis/apps/v1/namespaces/eks-main-app/deployments/eks-main-app-app-deployment-349l8jl5', 'uid': '460878ee-b102-46bc-943c-bc0bca464845'}
    debug: incoming output property translated: status -> status
    debug: incoming output value translated: {'conditions': [{'reason': 'MinimumReplicasAvailable', 'lastTransitionTime': '2021-02-26T15:03:35Z', 'status': 'True', 'type': 'Available', 'lastUpdateTime': '2021-02-26T15:03:35Z', 'message': 'Deployment has minimum availability.'}, {'lastTransitionTime': '2021-02-26T15:01:42Z', 'message': 'ReplicaSet "eks-main-app-app-deployment-349l8jl5-7c7787d64d" has successfully progressed.', 'reason': 'NewReplicaSetAvailable', 'status': 'True', 'lastUpdateTime': '2021-02-26T15:03:35Z', 'type': 'Progressing'}], 'observedGeneration': 1.0, 'availableReplicas': 2.0, 'updatedReplicas': 2.0, 'replicas': 2.0, 'readyReplicas': 2.0} -> {'available_replicas': 2, 'conditions': [{'status': 'True', 'type': 'Available', 'last_transition_time': '2021-02-26T15:03:35Z', 'last_update_time': '2021-02-26T15:03:35Z', 'message': 'Deployment has minimum availability.', 'reason': 'MinimumReplicasAvailable'}, {'status': 'True', 'type': 'Progressing', 'last_transition_time': '2021-02-26T15:01:42Z', 'last_update_time': '2021-02-26T15:03:35Z', 'message': 'ReplicaSet "eks-main-app-app-deployment-349l8jl5-7c7787d64d" has successfully progressed.', 'reason': 'NewReplicaSetAvailable'}], 'observed_generation': 1, 'ready_replicas': 2, 'replicas': 2, 'updated_replicas': 2}
    debug: incoming output property translated: apiVersion -> api_version
    debug: incoming output value translated: apps/v1 -> apps/v1
    debug: incoming output property translated: spec -> spec
    debug: incoming output value translated: {'template': {'spec': {'containers': [{'imagePullPolicy': 'Always', 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'resources': {}, 'name': 'eks-main-app', 'image': 'nginx'}], 'dnsPolicy': 'ClusterFirst', 'terminationGracePeriodSeconds': 30.0, 'restartPolicy': 'Always', 'schedulerName': 'default-scheduler', 'securityContext': {}}, 'metadata': {'labels': {'app': 'nginx'}}}, 'revisionHistoryLimit': 10.0, 'selector': {'matchLabels': {'app': 'nginx'}}, 'replicas': 2.0, 'progressDeadlineSeconds': 600.0, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}} -> {'selector': {'match_labels': {'app': 'nginx'}}, 'template': {'metadata': {'labels': {'app': 'nginx'}}, 'spec': {'containers': [{'name': 'eks-main-app', 'image': 'nginx', 'image_pull_policy': 'Always', 'resources': {}, 'termination_message_path': '/dev/termination-log', 'termination_message_policy': 'File'}], 'dns_policy': 'ClusterFirst', 'restart_policy': 'Always', 'scheduler_name': 'default-scheduler', 'security_context': {}, 'termination_grace_period_seconds': 30}}, 'progress_deadline_seconds': 600, 'replicas': 2, 'revision_history_limit': 10, 'strategy': {'rolling_update': {'max_surge': '25%', 'max_unavailable': '25%'}, 'type': 'RollingUpdate'}}
    debug: incoming output property translated: kind -> kind
    debug: incoming output value translated: Deployment -> Deployment
    debug: looking for resolver using translated name metadata
    debug: looking for resolver using translated name status
    debug: looking for resolver using translated name api_version
    debug: looking for resolver using translated name spec
    debug: looking for resolver using translated name kind
    debug: waiting for quiescence; 6 RPCs outstanding
    debug: waiting for quiescence; 5 RPCs outstanding
    debug: waiting for quiescence; 4 RPCs outstanding
    debug: waiting for quiescence; 3 RPCs outstanding
    debug: waiting for quiescence; 2 RPCs outstanding
    debug: waiting for quiescence; 1 RPCs outstanding
    debug: Canceling all outstanding tasks
    debug: run_pulumi_func completed
 
Policy Violations:
    [advisory]  aws v0.1.20201015-2  require-region (pulumi:providers:aws: default_3_26_1)
    Must use an approved region.
    Region [us-east-2] is not allowed.
    
    [advisory]  aws v0.1.20201015-2  require-region (pulumi:providers:aws: default_3_30_1)
    Must use an approved region.
    Region [us-east-2] is not allowed.
    
    [advisory]  k8s v0.1.20201105-1  non-secure-http (kubernetes:core/v1:Service: eks-main-app-app-service)
    External services should expose via HTTPS.
    Service port [80] should be exposed via 443.
    
Outputs:
  - cluster oidc arn       : "arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F"
  - cluster oidc issuer url: "oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F"

Updating (demo/dev)

View Live: https://app.pulumi.com/demo/eks-main/dev/updates/52

    pulumi:pulumi:Stack eks-main-dev  debug: AWS Auth provider used: "SharedCredentialsProvider"
    pulumi:pulumi:Stack eks-main-dev  debug: AWS Auth provider used: "SharedCredentialsProvider"
    pulumi:pulumi:Stack eks-main-dev  debug: Trying to get account information via iam:GetUser
    pulumi:pulumi:Stack eks-main-dev  debug: AWS Auth provider used: "SharedCredentialsProvider"
    pulumi:pulumi:Stack eks-main-dev  debug: Trying to get account information via sts:GetCallerIdentity
    pulumi:pulumi:Stack eks-main-dev  debug: Trying to get account information via sts:GetCallerIdentity

    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=pulumi:pulumi:Stack, name=eks-main-dev, custom=False, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:meta/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiextensions.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiextensions.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:admissionregistration.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:admissionregistration.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiregistration.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apiregistration.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:core/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apps/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apps/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:apps/v1beta2@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:auditregistration.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authentication.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authentication.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authorization.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:authorization.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:autoscaling/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:autoscaling/v2beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:autoscaling/v2beta2@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:batch/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:batch/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:batch/v2alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:certificates.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:certificates.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:coordination.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:coordination.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:discovery.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:events.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:events.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:extensions/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:networking.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:networking.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:node.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:node.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:node.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:policy/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:rbac.authorization.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:rbac.authorization.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:rbac.authorization.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:scheduling.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:scheduling.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:scheduling.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:settings.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:storage.k8s.io/v1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:storage.k8s.io/v1alpha1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module kubernetes:storage.k8s.io/v1beta1@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering package kubernetes@2.8.2
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:accessanalyzer/analyzer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:acm/certificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:acm/certificateValidation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:acmpca/certificateAuthority@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:alb/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:amp/workspace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/account@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/apiKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/authorizer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/basePathMapping@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/clientCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/deployment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/documentationPart@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/documentationVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/domainName@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/integration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/integrationResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/method@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/methodResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/methodSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/model@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/requestValidator@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/resource@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/response@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/restApi@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/restApiPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/stage@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/usagePlan@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/usagePlanKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigateway/vpcLink@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/api@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/apiMapping@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/authorizer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/deployment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/domainName@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/integration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/integrationResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/model@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/routeResponse@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/stage@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:apigatewayv2/vpcLink@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appautoscaling/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appautoscaling/scheduledAction@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appautoscaling/target@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:applicationloadbalancing/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/gatewayRoute@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/mesh@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualNode@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualRouter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appmesh/virtualService@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/apiKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/dataSource@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/function@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/graphQLApi@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:appsync/resolver@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:athena/database@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:athena/namedQuery@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:athena/workgroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/attachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/lifecycleHook@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/notification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscaling/schedule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:autoscalingplans/scalingPlan@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/globalSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/plan@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/regionSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/selection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/vault@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/vaultNotifications@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:backup/vaultPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:batch/computeEnvironment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:batch/jobDefinition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:batch/jobQueue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:budgets/budget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/aggregateAuthorization@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/configurationAggregator@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/conformancePack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/deliveryChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/organizationCustomRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/organizationManagedRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/recorder@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/recorderStatus@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/remediationConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cfg/rule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloud9/environmentEC2@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudformation/stack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudformation/stackSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudformation/stackSetInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/cachePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/distribution@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/originAccessIdentity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/originRequestPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/publicKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudfront/realtimeLogConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudhsmv2/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudhsmv2/hsm@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudtrail/trail@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/compositeAlarm@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/dashboard@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventArchive@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventBus@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventPermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/eventTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logDestination@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logDestinationPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logMetricFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logResourcePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/logSubscriptionFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cloudwatch/metricAlarm@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/domainPermissions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/repository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codeartifact/repositoryPermissionsPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/project@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/reportGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/sourceCredential@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codebuild/webhook@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codecommit/repository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codecommit/trigger@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codedeploy/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codedeploy/deploymentConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codedeploy/deploymentGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codepipeline/pipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codepipeline/webhook@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codestarconnections/connection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:codestarnotifications/notificationRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/identityPool@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/identityPoolRoleAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/identityProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/resourceServer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userPool@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userPoolClient@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cognito/userPoolDomain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:cur/reportDefinition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datapipeline/pipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/agent@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/efsLocation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/locationFsxWindows@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/locationSmb@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/nfsLocation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/s3Location@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:datasync/task@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dax/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dax/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dax/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:devicefarm/project@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/bgpPeer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/connection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/connectionAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/gateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/gatewayAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/gatewayAssociationProposal@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPrivateVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPrivateVirtualInterfaceAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPublicVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedPublicVirtualInterfaceAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedTransitVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/hostedTransitVirtualInterfaceAcceptor@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/linkAggregationGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/privateVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/publicVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directconnect/transitVirtualInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directoryservice/conditionalForwader@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directoryservice/directory@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:directoryservice/logService@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dlm/lifecyclePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/certificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/replicationInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/replicationSubnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dms/replicationTask@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/clusterInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/clusterParameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/clusterSnapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:docdb/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dynamodb/globalTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dynamodb/table@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:dynamodb/tableItem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/defaultKmsKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/encryptionByDefault@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/snapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/snapshotCopy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ebs/volume@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/ami@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/amiCopy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/amiFromInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/amiLaunchPermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/availabilityZoneGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/capacityReservation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/carrierGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/customerGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/dedicatedHost@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultNetworkAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultRouteTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultSecurityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultSubnet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultVpc@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/defaultVpcDhcpOptions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/egressOnlyInternetGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/eip@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/eipAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/fleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/flowLog@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/internetGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/keyPair@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/launchConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/launchTemplate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/localGatewayRoute@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/localGatewayRouteTableVpcAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/mainRouteTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/managedPrefixList@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/natGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkAclRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkInterface@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkInterfaceAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/networkInterfaceSecurityGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/peeringConnectionOptions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/placementGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/proxyProtocolPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/routeTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/routeTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/securityGroupRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/snapshotCreateVolumePermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/spotDatafeedSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/spotFleetRequest@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/spotInstanceRequest@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/subnet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/tag@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorFilterRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorSession@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/trafficMirrorTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/transitGatewayPeeringAttachmentAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/volumeAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpc@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcDhcpOptions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcDhcpOptionsAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointConnectionNotification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointRouteTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointService@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointServiceAllowedPrinciple@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcEndpointSubnetAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcIpv4CidrBlockAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcPeeringConnection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpcPeeringConnectionAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnConnection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnConnectionRoute@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnGatewayAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2/vpnGatewayRoutePropagation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/authorizationRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/networkAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2clientvpn/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/peeringAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/prefixListReference@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/route@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/routeTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/routeTableAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/routeTablePropagation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/transitGateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/vpcAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ec2transitgateway/vpcAttachmentAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecr/lifecyclePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecr/repository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecr/repositoryPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/capacityProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/service@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ecs/taskDefinition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/accessPoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/fileSystem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/fileSystemPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:efs/mountTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:eks/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:eks/fargateProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:eks/nodeGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/globalReplicationGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/replicationGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticache/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/applicationVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/configurationTemplate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticbeanstalk/environment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/appCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/attachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/listenerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancerBackendServerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancerCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/loadBalancerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancing/sslNegotiationPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticloadbalancingv2/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticsearch/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elasticsearch/domainPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elastictranscoder/pipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elastictranscoder/preset@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/appCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/attachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/listenerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancerBackendServerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancerCookieStickinessPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/loadBalancerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:elb/sslNegotiationPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/instanceFleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/instanceGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/managedScalingPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:emr/securityConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fms/adminAccount@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fms/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fsx/lustreFileSystem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:fsx/windowsFileSystem@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/alias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/build@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/fleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:gamelift/gameSessionQueue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glacier/vault@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glacier/vaultLock@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:globalaccelerator/accelerator@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:globalaccelerator/endpointGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:globalaccelerator/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/catalogDatabase@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/catalogTable@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/classifier@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/connection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/crawler@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/dataCatalogEncryptionSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/devEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/job@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/mLTransform@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/partition@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/registry@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/resourcePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/schema@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/securityConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/trigger@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/userDefinedFunction@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:glue/workflow@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/detector@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/filter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/iPSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/inviteAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/member@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/organizationAdminAccount@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/organizationConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/publishingDestination@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:guardduty/threatIntelSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/accessKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/accountAlias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/accountPasswordPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/groupMembership@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/groupPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/groupPolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/instanceProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/openIdConnectProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/policyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/role@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/rolePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/rolePolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/samlProvider@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/serverCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/serviceLinkedRole@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/sshKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/user@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userGroupMembership@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userLoginProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iam/userPolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/component@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/distributionConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/image@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/imagePipeline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/imageRecipe@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:imagebuilder/infrastructureConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:inspector/assessmentTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:inspector/assessmentTemplate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:inspector/resourceGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/certificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/policyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/roleAlias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/thing@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/thingPrincipalAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/thingType@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:iot/topicRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/analyticsApplication@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/firehoseDeliveryStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/stream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesis/videoStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kinesisanalyticsv2/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/alias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/ciphertext@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/externalKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/grant@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:kms/key@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lakeformation/dataLakeSettings@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lakeformation/permissions@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lakeformation/resource@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/alias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/codeSigningConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/eventSourceMapping@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/function@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/functionEventInvokeConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/layerVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/permission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lambda/provisionedConcurrencyConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/listener@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/listenerCertificate@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/listenerRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/loadBalancer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/targetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lb/targetGroupAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/bot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/botAlias@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/intent@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lex/slotType@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:licensemanager/association@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:licensemanager/licenseConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/keyPair@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/staticIp@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:lightsail/staticIpAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:macie/memberAccountAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:macie/s3BucketAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediaconvert/queue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediapackage/channel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediastore/container@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mediastore/containerPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mq/broker@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:mq/configuration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:msk/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:msk/configuration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:msk/scramSecretAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/clusterInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/clusterParameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/clusterSnapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:neptune/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/firewall@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/firewallPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/loggingConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/resourcePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:networkfirewall/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/application@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/customLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/gangliaLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/haproxyLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/javaAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/memcachedLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/mysqlLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/nodejsAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/permission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/phpAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/railsAppLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/rdsDbInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/stack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/staticWebLayer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:opsworks/userProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/account@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/organization@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/organizationalUnit@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/policy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:organizations/policyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/admChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsSandboxChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsVoipChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/apnsVoipSandboxChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/app@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/baiduChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/emailChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/eventStream@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/gcmChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:pinpoint/smsChannel@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:qldb/ledger@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:quicksight/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:quicksight/user@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/principalAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/resourceAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/resourceShare@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ram/resourceShareAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterParameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/clusterSnapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/globalCluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/instance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/optionGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/proxy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/proxyDefaultTargetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/proxyTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/roleAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/snapshot@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:rds/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/cluster@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/eventSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/parameterGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/securityGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/snapshotCopyGrant@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/snapshotSchedule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/snapshotScheduleAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:redshift/subnetGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:resourcegroups/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/delegationSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/healthCheck@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/keySigningKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/queryLog@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/record@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverDnsSecConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverEndpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverQueryLogConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverQueryLogConfigAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/resolverRuleAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/vpcAssociationAuthorization@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/zone@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:route53/zoneAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/accessPoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/accountPublicAccessBlock@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/analyticsConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucket@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketMetric@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketNotification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketObject@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketOwnershipControls@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/bucketPublicAccessBlock@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/inventory@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3/objectCopy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3control/bucket@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3control/bucketLifecycleConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3control/bucketPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:s3outposts/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/appImageConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/codeRepository@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/endpoint@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/endpointConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/featureGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/image@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/imageVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/model@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/modelPackageGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/notebookInstance@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/notebookInstanceLifecycleConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sagemaker/userProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secret@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secretPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secretRotation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:secretsmanager/secretVersion@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/account@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/actionTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/inviteAccepter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/member@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/organizationAdminAccount@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/productSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:securityhub/standardsSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:serverlessrepository/cloudFormationStack@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicecatalog/portfolio@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/httpNamespace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/privateDnsNamespace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/publicDnsNamespace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicediscovery/service@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:servicequotas/serviceQuota@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/activeReceiptRuleSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/confgurationSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/configurationSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/domainDkim@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/domainIdentity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/domainIdentityVerification@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/emailIdentity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/eventDestination@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/identityNotificationTopic@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/identityPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/mailFrom@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/receiptFilter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/receiptRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/receiptRuleSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ses/template@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sfn/activity@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sfn/stateMachine@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:shield/protection@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:signer/signingJob@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:signer/signingProfile@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:signer/signingProfilePermission@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:simpledb/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/platformApplication@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/smsPreferences@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/topic@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/topicPolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sns/topicSubscription@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sqs/queue@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:sqs/queuePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/activation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/association@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/document@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/maintenanceWindow@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/maintenanceWindowTarget@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/maintenanceWindowTask@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/parameter@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/patchBaseline@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/patchGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssm/resourceDataSync@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/accountAssignment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/managedPolicyAttachment@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/permissionSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:ssoadmin/permissionSetInlinePolicy@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/cache@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/cachesIscsiVolume@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/gateway@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/nfsFileShare@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/smbFileShare@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/storedIscsiVolume@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/tapePool@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/uploadBuffer@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:storagegateway/workingStorage@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:swf/domain@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:synthetics/canary@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:transfer/server@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:transfer/sshKey@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:transfer/user@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/byteMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/geoMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/ipSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/rateBasedRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/regexMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/regexPatternSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/rule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/sizeConstraintSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/sqlInjectionMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/webAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:waf/xssMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/byteMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/geoMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/ipSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/rateBasedRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/regexMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/regexPatternSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/rule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/sizeConstraintSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/sqlInjectionMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/webAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/webAclAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafregional/xssMatchSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/ipSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/regexPatternSet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/ruleGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/webAcl@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/webAclAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:wafv2/webAclLoggingConfiguration@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:worklink/fleet@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:worklink/websiteCertificateAuthorityAssociation@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:workspaces/directory@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:workspaces/ipGroup@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:workspaces/workspace@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:xray/encryptionConfig@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:xray/group@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module aws:xray/samplingRule@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering package aws@3.30.1
    pulumi:pulumi:Stack eks-main-dev  debug: registering module eks:index@0.22.0
    pulumi:pulumi:Stack eks-main-dev  debug: registering package eks@0.22.0
    pulumi:pulumi:Stack eks-main-dev  debug: reading resource: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev  debug: preparing read resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver outputs
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver secret_output_names
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=eks:index:Cluster, name=eks-main-eks, custom=False, remote=True
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster_security_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster_security_group_tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster_tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver create_oidc_provider
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver creation_role_provider
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver desired_capacity
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver enabled_cluster_log_types
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver encrypt_root_block_device
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver encryption_config_key_arn
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver endpoint_private_access
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver endpoint_public_access
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver fargate
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver gpu
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_profile_name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_role
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_roles
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver instance_type
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kubernetes_service_ip_address_range
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver max_size
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver min_size
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_ami_id
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_associate_public_ip_address
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_group_options
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_public_key
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_root_volume_size
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_security_group_tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_user_data
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver private_subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver provider_credential_opts
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver proxy
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver public_access_cidrs
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver public_subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver role_mappings
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver service_role
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver skip_default_node_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver storage_classes
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver subnet_ids
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver use_default_vpc_cni
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver user_mappings
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver vpc_cni_options
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver vpc_id
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver aws_provider
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver core
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver default_node_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver eks_cluster
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver eks_cluster_ingress_rule
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kubeconfig
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver node_security_group
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver provider
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=pulumi:providers:kubernetes, name=k8s, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver cluster
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver context
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver enable_dry_run
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kubeconfig
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver namespace
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver render_yaml_to_directory
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver suppress_deprecation_warnings
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=kubernetes:core/v1:Namespace, name=eks-main-app, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver api_version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kind
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver metadata
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver spec
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=custom:resource:App, name=eks-main-app, custom=False, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver api_version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kind
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver metadata
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver spec
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver api_version
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver kind
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver metadata
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver spec
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver status
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=custom:resource:IngressCtl, name=eks-main-ing-perms, custom=False, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver path
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver policy
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=aws:iam/role:Role, name=eks-main-alb-controller-role, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver assume_role_policy
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver description
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver force_detach_policies
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver inline_policies
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver managed_policy_arns
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver max_session_duration
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver name_prefix
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver path
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver permissions_boundary
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver tags
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver arn
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver create_date
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver unique_id
    pulumi:pulumi:Stack eks-main-dev  debug: registering resource: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment, custom=True, remote=False
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource for RPC
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver policy_arn
    pulumi:pulumi:Stack eks-main-dev  debug: adding resolver role
    pulumi:pulumi:Stack eks-main-dev  debug: Waiting for outstanding RPCs to complete
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc read resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource
    pulumi:pulumi:Stack eks-main-dev  debug: beginning rpc register resource outputs
    pulumi:pulumi:Stack eks-main-dev  debug: waiting for quiescence; 13 RPCs outstanding
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=pulumi:pulumi:Stack, name=eks-main-dev
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} prepared
    pulumi:pulumi:Stack eks-main-dev  debug: resource registration prepared: ty=pulumi:pulumi:Stack, name=eks-main-dev
    pulumi:pulumi:Stack eks-main-dev  debug: preparing read: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=eks:index:Cluster, name=eks-main-eks
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x10e42adf0>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x10e424af0>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x10e3f6430>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: create_oidc_provider -> createOidcProvider
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: fargate -> fargate
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=pulumi:providers:kubernetes, name=k8s
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': <pulumi.output.Output object at 0x10e534250>, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=kubernetes:core/v1:Namespace, name=eks-main-app
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'api_version': 'v1', 'kind': 'Namespace', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x10f525d00>, 'spec': None, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: api_version -> apiVersion
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: metadata -> metadata
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=custom:resource:App, name=eks-main-app
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'api_version': 'apps/v1', 'kind': 'Deployment', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x10e663b80>, 'spec': <pulumi_kubernetes.apps.v1._inputs.DeploymentSpecArgs object at 0x10e663d60>, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: api_version -> apiVersion
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev  debug: transforming input property: app -> app
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'api_version': 'v1', 'kind': 'Service', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x10e663e20>, 'spec': <pulumi_kubernetes.core.v1._inputs.ServiceSpecArgs object at 0x10e705e50>, 'status': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: api_version -> apiVersion
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: kind -> kind
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    pulumi:pulumi:Stack eks-main-dev  debug: resource {} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: policy -> policy
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: assume_role_policy -> assumeRolePolicy
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev  debug: top-level input property translated: force_detach_policies -> forceDetachPolicies
    pulumi:pulumi:Stack eks-main-dev  debug: preparing resource registration: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment
    pulumi:pulumi:Stack eks-main-dev  debug: resource {'policy_arn': <pulumi.output.Output object at 0x10e663ee0>, 'role': <pulumi.output.Output object at 0x10e9e4580>} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'policy_arn': <pulumi.output.Output object at 0x10e663ee0>, 'role': <pulumi.output.Output object at 0x10e9e4580>} preparing to wait for dependencies
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=pulumi:pulumi:Stack, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: read prepared: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: resource {} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=custom:resource:App, name=eks-main-app
    pulumi:pulumi:Stack eks-main-dev running debug: resource {} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    custom:resource:App eks-main-app  
    custom:resource:IngressCtl eks-main-ing-perms  
    pulumi:pulumi:Stack eks-main-dev running read pulumi:pulumi:StackReference demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=custom:resource:App, urn=urn:pulumi:dev::eks-main::custom:resource:App::eks-main-app
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=custom:resource:IngressCtl, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl::eks-main-ing-perms
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    pulumi:providers:aws default_3_30_1  
    pulumi:pulumi:Stack eks-main-dev running read pulumi:pulumi:StackReference demo/eks-vpc/dev
 +  aws:iam:Role eks-main-alb-controller-role creating 
    aws:iam:Policy eks-main-alb-controller-policy  
    pulumi:pulumi:Stack eks-main-dev running debug: resource read successful: ty=pulumi:pulumi:StackReference, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:StackReference::demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: demo/eks-vpc/dev -> demo/eks-vpc/dev
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: secretOutputNames -> secret_output_names
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: [] -> []
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: outputs -> outputs
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpcId': 'vpc-0b7b646c66cd6f099'} -> {'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpcId': 'vpc-0b7b646c66cd6f099'}
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name secret_output_names
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name outputs
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: private_subnet_ids -> privateSubnetIds
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: vpc_id -> vpcId
    pulumi:pulumi:Stack eks-main-dev running debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x10e42adf0>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x10e424af0>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x10e3f6430>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} prepared
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration prepared: ty=eks:index:Cluster, name=eks-main-eks
    pulumi:pulumi:Stack eks-main-dev running debug: resource registration successful: ty=aws:iam/policy:Policy, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/policy:Policy::eks-main-alb-controller-policy
    pulumi:pulumi:Stack eks-main-dev running debug: No meta timeoutkey found in Apply()
    pulumi:pulumi:Stack eks-main-dev running debug: Waiting for state to become: [success]
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: arn -> arn
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: name -> name
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: eks-main-alb-controller-policy-1929516 -> eks-main-alb-controller-policy-1929516
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: path -> path
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: / -> /
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: description -> description
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated:  -> 
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: id -> id
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output property translated: policy -> policy
    pulumi:pulumi:Stack eks-main-dev running debug: incoming output value translated: {
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name arn
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name name
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name path
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name description
    pulumi:pulumi:Stack eks-main-dev running debug: looking for resolver using translated name policy
    pulumi:pulumi:Stack eks-main-dev running debug: top-level input property translated: policy_arn -> policyArn
 +  aws:iam:Role eks-main-alb-controller-role creating error: 1 error occurred:
 +  aws:iam:Role eks-main-alb-controller-role **creating failed** error: 1 error occurred:
    pulumi:pulumi:Stack eks-main-dev running error: update failed
    custom:resource:App eks-main-app  
    pulumi:pulumi:Stack eks-main-dev **failed** 1 error; 992 debugs
    custom:resource:IngressCtl eks-main-ing-perms  
    pulumi:providers:aws default_3_30_1  
 
Diagnostics:
  pulumi:pulumi:Stack (eks-main-dev):
    debug: AWS Auth provider used: "SharedCredentialsProvider"
    debug: AWS Auth provider used: "SharedCredentialsProvider"
    debug: Trying to get account information via iam:GetUser
    debug: AWS Auth provider used: "SharedCredentialsProvider"
    debug: Trying to get account information via sts:GetCallerIdentity
    debug: Trying to get account information via sts:GetCallerIdentity
    debug: registering resource: ty=pulumi:pulumi:Stack, name=eks-main-dev, custom=False, remote=False
    debug: preparing resource for RPC
    debug: registering module kubernetes:meta/v1@2.8.2
    debug: registering module kubernetes:apiextensions.k8s.io/v1@2.8.2
    debug: registering module kubernetes:apiextensions.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:admissionregistration.k8s.io/v1@2.8.2
    debug: registering module kubernetes:admissionregistration.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:apiregistration.k8s.io/v1@2.8.2
    debug: registering module kubernetes:apiregistration.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:core/v1@2.8.2
    debug: registering module kubernetes:apps/v1@2.8.2
    debug: registering module kubernetes:apps/v1beta1@2.8.2
    debug: registering module kubernetes:apps/v1beta2@2.8.2
    debug: registering module kubernetes:auditregistration.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:authentication.k8s.io/v1@2.8.2
    debug: registering module kubernetes:authentication.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:authorization.k8s.io/v1@2.8.2
    debug: registering module kubernetes:authorization.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:autoscaling/v1@2.8.2
    debug: registering module kubernetes:autoscaling/v2beta1@2.8.2
    debug: registering module kubernetes:autoscaling/v2beta2@2.8.2
    debug: registering module kubernetes:batch/v1@2.8.2
    debug: registering module kubernetes:batch/v1beta1@2.8.2
    debug: registering module kubernetes:batch/v2alpha1@2.8.2
    debug: registering module kubernetes:certificates.k8s.io/v1@2.8.2
    debug: registering module kubernetes:certificates.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:coordination.k8s.io/v1@2.8.2
    debug: registering module kubernetes:coordination.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:discovery.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:events.k8s.io/v1@2.8.2
    debug: registering module kubernetes:events.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:extensions/v1beta1@2.8.2
    debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:flowcontrol.apiserver.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:networking.k8s.io/v1@2.8.2
    debug: registering module kubernetes:networking.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:node.k8s.io/v1@2.8.2
    debug: registering module kubernetes:node.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:node.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:policy/v1beta1@2.8.2
    debug: registering module kubernetes:rbac.authorization.k8s.io/v1@2.8.2
    debug: registering module kubernetes:rbac.authorization.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:rbac.authorization.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:scheduling.k8s.io/v1@2.8.2
    debug: registering module kubernetes:scheduling.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:scheduling.k8s.io/v1beta1@2.8.2
    debug: registering module kubernetes:settings.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:storage.k8s.io/v1@2.8.2
    debug: registering module kubernetes:storage.k8s.io/v1alpha1@2.8.2
    debug: registering module kubernetes:storage.k8s.io/v1beta1@2.8.2
    debug: registering package kubernetes@2.8.2
    debug: registering module aws:accessanalyzer/analyzer@3.30.1
    debug: registering module aws:acm/certificate@3.30.1
    debug: registering module aws:acm/certificateValidation@3.30.1
    debug: registering module aws:acmpca/certificateAuthority@3.30.1
    debug: registering module aws:alb/listener@3.30.1
    debug: registering module aws:alb/listenerCertificate@3.30.1
    debug: registering module aws:alb/listenerRule@3.30.1
    debug: registering module aws:alb/loadBalancer@3.30.1
    debug: registering module aws:alb/targetGroup@3.30.1
    debug: registering module aws:alb/targetGroupAttachment@3.30.1
    debug: registering module aws:amp/workspace@3.30.1
    debug: registering module aws:apigateway/account@3.30.1
    debug: registering module aws:apigateway/apiKey@3.30.1
    debug: registering module aws:apigateway/authorizer@3.30.1
    debug: registering module aws:apigateway/basePathMapping@3.30.1
    debug: registering module aws:apigateway/clientCertificate@3.30.1
    debug: registering module aws:apigateway/deployment@3.30.1
    debug: registering module aws:apigateway/documentationPart@3.30.1
    debug: registering module aws:apigateway/documentationVersion@3.30.1
    debug: registering module aws:apigateway/domainName@3.30.1
    debug: registering module aws:apigateway/integration@3.30.1
    debug: registering module aws:apigateway/integrationResponse@3.30.1
    debug: registering module aws:apigateway/method@3.30.1
    debug: registering module aws:apigateway/methodResponse@3.30.1
    debug: registering module aws:apigateway/methodSettings@3.30.1
    debug: registering module aws:apigateway/model@3.30.1
    debug: registering module aws:apigateway/requestValidator@3.30.1
    debug: registering module aws:apigateway/resource@3.30.1
    debug: registering module aws:apigateway/response@3.30.1
    debug: registering module aws:apigateway/restApi@3.30.1
    debug: registering module aws:apigateway/restApiPolicy@3.30.1
    debug: registering module aws:apigateway/stage@3.30.1
    debug: registering module aws:apigateway/usagePlan@3.30.1
    debug: registering module aws:apigateway/usagePlanKey@3.30.1
    debug: registering module aws:apigateway/vpcLink@3.30.1
    debug: registering module aws:apigatewayv2/api@3.30.1
    debug: registering module aws:apigatewayv2/apiMapping@3.30.1
    debug: registering module aws:apigatewayv2/authorizer@3.30.1
    debug: registering module aws:apigatewayv2/deployment@3.30.1
    debug: registering module aws:apigatewayv2/domainName@3.30.1
    debug: registering module aws:apigatewayv2/integration@3.30.1
    debug: registering module aws:apigatewayv2/integrationResponse@3.30.1
    debug: registering module aws:apigatewayv2/model@3.30.1
    debug: registering module aws:apigatewayv2/route@3.30.1
    debug: registering module aws:apigatewayv2/routeResponse@3.30.1
    debug: registering module aws:apigatewayv2/stage@3.30.1
    debug: registering module aws:apigatewayv2/vpcLink@3.30.1
    debug: registering module aws:appautoscaling/policy@3.30.1
    debug: registering module aws:appautoscaling/scheduledAction@3.30.1
    debug: registering module aws:appautoscaling/target@3.30.1
    debug: registering module aws:applicationloadbalancing/listener@3.30.1
    debug: registering module aws:applicationloadbalancing/listenerCertificate@3.30.1
    debug: registering module aws:applicationloadbalancing/listenerRule@3.30.1
    debug: registering module aws:applicationloadbalancing/loadBalancer@3.30.1
    debug: registering module aws:applicationloadbalancing/targetGroup@3.30.1
    debug: registering module aws:applicationloadbalancing/targetGroupAttachment@3.30.1
    debug: registering module aws:appmesh/gatewayRoute@3.30.1
    debug: registering module aws:appmesh/mesh@3.30.1
    debug: registering module aws:appmesh/route@3.30.1
    debug: registering module aws:appmesh/virtualGateway@3.30.1
    debug: registering module aws:appmesh/virtualNode@3.30.1
    debug: registering module aws:appmesh/virtualRouter@3.30.1
    debug: registering module aws:appmesh/virtualService@3.30.1
    debug: registering module aws:appsync/apiKey@3.30.1
    debug: registering module aws:appsync/dataSource@3.30.1
    debug: registering module aws:appsync/function@3.30.1
    debug: registering module aws:appsync/graphQLApi@3.30.1
    debug: registering module aws:appsync/resolver@3.30.1
    debug: registering module aws:athena/database@3.30.1
    debug: registering module aws:athena/namedQuery@3.30.1
    debug: registering module aws:athena/workgroup@3.30.1
    debug: registering module aws:autoscaling/attachment@3.30.1
    debug: registering module aws:autoscaling/group@3.30.1
    debug: registering module aws:autoscaling/lifecycleHook@3.30.1
    debug: registering module aws:autoscaling/notification@3.30.1
    debug: registering module aws:autoscaling/policy@3.30.1
    debug: registering module aws:autoscaling/schedule@3.30.1
    debug: registering module aws:autoscalingplans/scalingPlan@3.30.1
    debug: registering module aws:backup/globalSettings@3.30.1
    debug: registering module aws:backup/plan@3.30.1
    debug: registering module aws:backup/regionSettings@3.30.1
    debug: registering module aws:backup/selection@3.30.1
    debug: registering module aws:backup/vault@3.30.1
    debug: registering module aws:backup/vaultNotifications@3.30.1
    debug: registering module aws:backup/vaultPolicy@3.30.1
    debug: registering module aws:batch/computeEnvironment@3.30.1
    debug: registering module aws:batch/jobDefinition@3.30.1
    debug: registering module aws:batch/jobQueue@3.30.1
    debug: registering module aws:budgets/budget@3.30.1
    debug: registering module aws:cfg/aggregateAuthorization@3.30.1
    debug: registering module aws:cfg/configurationAggregator@3.30.1
    debug: registering module aws:cfg/conformancePack@3.30.1
    debug: registering module aws:cfg/deliveryChannel@3.30.1
    debug: registering module aws:cfg/organizationCustomRule@3.30.1
    debug: registering module aws:cfg/organizationManagedRule@3.30.1
    debug: registering module aws:cfg/recorder@3.30.1
    debug: registering module aws:cfg/recorderStatus@3.30.1
    debug: registering module aws:cfg/remediationConfiguration@3.30.1
    debug: registering module aws:cfg/rule@3.30.1
    debug: registering module aws:cloud9/environmentEC2@3.30.1
    debug: registering module aws:cloudformation/stack@3.30.1
    debug: registering module aws:cloudformation/stackSet@3.30.1
    debug: registering module aws:cloudformation/stackSetInstance@3.30.1
    debug: registering module aws:cloudfront/cachePolicy@3.30.1
    debug: registering module aws:cloudfront/distribution@3.30.1
    debug: registering module aws:cloudfront/originAccessIdentity@3.30.1
    debug: registering module aws:cloudfront/originRequestPolicy@3.30.1
    debug: registering module aws:cloudfront/publicKey@3.30.1
    debug: registering module aws:cloudfront/realtimeLogConfig@3.30.1
    debug: registering module aws:cloudhsmv2/cluster@3.30.1
    debug: registering module aws:cloudhsmv2/hsm@3.30.1
    debug: registering module aws:cloudtrail/trail@3.30.1
    debug: registering module aws:cloudwatch/compositeAlarm@3.30.1
    debug: registering module aws:cloudwatch/dashboard@3.30.1
    debug: registering module aws:cloudwatch/eventArchive@3.30.1
    debug: registering module aws:cloudwatch/eventBus@3.30.1
    debug: registering module aws:cloudwatch/eventPermission@3.30.1
    debug: registering module aws:cloudwatch/eventRule@3.30.1
    debug: registering module aws:cloudwatch/eventTarget@3.30.1
    debug: registering module aws:cloudwatch/logDestination@3.30.1
    debug: registering module aws:cloudwatch/logDestinationPolicy@3.30.1
    debug: registering module aws:cloudwatch/logGroup@3.30.1
    debug: registering module aws:cloudwatch/logMetricFilter@3.30.1
    debug: registering module aws:cloudwatch/logResourcePolicy@3.30.1
    debug: registering module aws:cloudwatch/logStream@3.30.1
    debug: registering module aws:cloudwatch/logSubscriptionFilter@3.30.1
    debug: registering module aws:cloudwatch/metricAlarm@3.30.1
    debug: registering module aws:codeartifact/domain@3.30.1
    debug: registering module aws:codeartifact/domainPermissions@3.30.1
    debug: registering module aws:codeartifact/repository@3.30.1
    debug: registering module aws:codeartifact/repositoryPermissionsPolicy@3.30.1
    debug: registering module aws:codebuild/project@3.30.1
    debug: registering module aws:codebuild/reportGroup@3.30.1
    debug: registering module aws:codebuild/sourceCredential@3.30.1
    debug: registering module aws:codebuild/webhook@3.30.1
    debug: registering module aws:codecommit/repository@3.30.1
    debug: registering module aws:codecommit/trigger@3.30.1
    debug: registering module aws:codedeploy/application@3.30.1
    debug: registering module aws:codedeploy/deploymentConfig@3.30.1
    debug: registering module aws:codedeploy/deploymentGroup@3.30.1
    debug: registering module aws:codepipeline/pipeline@3.30.1
    debug: registering module aws:codepipeline/webhook@3.30.1
    debug: registering module aws:codestarconnections/connection@3.30.1
    debug: registering module aws:codestarnotifications/notificationRule@3.30.1
    debug: registering module aws:cognito/identityPool@3.30.1
    debug: registering module aws:cognito/identityPoolRoleAttachment@3.30.1
    debug: registering module aws:cognito/identityProvider@3.30.1
    debug: registering module aws:cognito/resourceServer@3.30.1
    debug: registering module aws:cognito/userGroup@3.30.1
    debug: registering module aws:cognito/userPool@3.30.1
    debug: registering module aws:cognito/userPoolClient@3.30.1
    debug: registering module aws:cognito/userPoolDomain@3.30.1
    debug: registering module aws:cur/reportDefinition@3.30.1
    debug: registering module aws:datapipeline/pipeline@3.30.1
    debug: registering module aws:datasync/agent@3.30.1
    debug: registering module aws:datasync/efsLocation@3.30.1
    debug: registering module aws:datasync/locationFsxWindows@3.30.1
    debug: registering module aws:datasync/locationSmb@3.30.1
    debug: registering module aws:datasync/nfsLocation@3.30.1
    debug: registering module aws:datasync/s3Location@3.30.1
    debug: registering module aws:datasync/task@3.30.1
    debug: registering module aws:dax/cluster@3.30.1
    debug: registering module aws:dax/parameterGroup@3.30.1
    debug: registering module aws:dax/subnetGroup@3.30.1
    debug: registering module aws:devicefarm/project@3.30.1
    debug: registering module aws:directconnect/bgpPeer@3.30.1
    debug: registering module aws:directconnect/connection@3.30.1
    debug: registering module aws:directconnect/connectionAssociation@3.30.1
    debug: registering module aws:directconnect/gateway@3.30.1
    debug: registering module aws:directconnect/gatewayAssociation@3.30.1
    debug: registering module aws:directconnect/gatewayAssociationProposal@3.30.1
    debug: registering module aws:directconnect/hostedPrivateVirtualInterface@3.30.1
    debug: registering module aws:directconnect/hostedPrivateVirtualInterfaceAccepter@3.30.1
    debug: registering module aws:directconnect/hostedPublicVirtualInterface@3.30.1
    debug: registering module aws:directconnect/hostedPublicVirtualInterfaceAccepter@3.30.1
    debug: registering module aws:directconnect/hostedTransitVirtualInterface@3.30.1
    debug: registering module aws:directconnect/hostedTransitVirtualInterfaceAcceptor@3.30.1
    debug: registering module aws:directconnect/linkAggregationGroup@3.30.1
    debug: registering module aws:directconnect/privateVirtualInterface@3.30.1
    debug: registering module aws:directconnect/publicVirtualInterface@3.30.1
    debug: registering module aws:directconnect/transitVirtualInterface@3.30.1
    debug: registering module aws:directoryservice/conditionalForwader@3.30.1
    debug: registering module aws:directoryservice/directory@3.30.1
    debug: registering module aws:directoryservice/logService@3.30.1
    debug: registering module aws:dlm/lifecyclePolicy@3.30.1
    debug: registering module aws:dms/certificate@3.30.1
    debug: registering module aws:dms/endpoint@3.30.1
    debug: registering module aws:dms/eventSubscription@3.30.1
    debug: registering module aws:dms/replicationInstance@3.30.1
    debug: registering module aws:dms/replicationSubnetGroup@3.30.1
    debug: registering module aws:dms/replicationTask@3.30.1
    debug: registering module aws:docdb/cluster@3.30.1
    debug: registering module aws:docdb/clusterInstance@3.30.1
    debug: registering module aws:docdb/clusterParameterGroup@3.30.1
    debug: registering module aws:docdb/clusterSnapshot@3.30.1
    debug: registering module aws:docdb/subnetGroup@3.30.1
    debug: registering module aws:dynamodb/globalTable@3.30.1
    debug: registering module aws:dynamodb/table@3.30.1
    debug: registering module aws:dynamodb/tableItem@3.30.1
    debug: registering module aws:ebs/defaultKmsKey@3.30.1
    debug: registering module aws:ebs/encryptionByDefault@3.30.1
    debug: registering module aws:ebs/snapshot@3.30.1
    debug: registering module aws:ebs/snapshotCopy@3.30.1
    debug: registering module aws:ebs/volume@3.30.1
    debug: registering module aws:ec2/ami@3.30.1
    debug: registering module aws:ec2/amiCopy@3.30.1
    debug: registering module aws:ec2/amiFromInstance@3.30.1
    debug: registering module aws:ec2/amiLaunchPermission@3.30.1
    debug: registering module aws:ec2/availabilityZoneGroup@3.30.1
    debug: registering module aws:ec2/capacityReservation@3.30.1
    debug: registering module aws:ec2/carrierGateway@3.30.1
    debug: registering module aws:ec2/customerGateway@3.30.1
    debug: registering module aws:ec2/dedicatedHost@3.30.1
    debug: registering module aws:ec2/defaultNetworkAcl@3.30.1
    debug: registering module aws:ec2/defaultRouteTable@3.30.1
    debug: registering module aws:ec2/defaultSecurityGroup@3.30.1
    debug: registering module aws:ec2/defaultSubnet@3.30.1
    debug: registering module aws:ec2/defaultVpc@3.30.1
    debug: registering module aws:ec2/defaultVpcDhcpOptions@3.30.1
    debug: registering module aws:ec2/egressOnlyInternetGateway@3.30.1
    debug: registering module aws:ec2/eip@3.30.1
    debug: registering module aws:ec2/eipAssociation@3.30.1
    debug: registering module aws:ec2/fleet@3.30.1
    debug: registering module aws:ec2/flowLog@3.30.1
    debug: registering module aws:ec2/instance@3.30.1
    debug: registering module aws:ec2/internetGateway@3.30.1
    debug: registering module aws:ec2/keyPair@3.30.1
    debug: registering module aws:ec2/launchConfiguration@3.30.1
    debug: registering module aws:ec2/launchTemplate@3.30.1
    debug: registering module aws:ec2/localGatewayRoute@3.30.1
    debug: registering module aws:ec2/localGatewayRouteTableVpcAssociation@3.30.1
    debug: registering module aws:ec2/mainRouteTableAssociation@3.30.1
    debug: registering module aws:ec2/managedPrefixList@3.30.1
    debug: registering module aws:ec2/natGateway@3.30.1
    debug: registering module aws:ec2/networkAcl@3.30.1
    debug: registering module aws:ec2/networkAclRule@3.30.1
    debug: registering module aws:ec2/networkInterface@3.30.1
    debug: registering module aws:ec2/networkInterfaceAttachment@3.30.1
    debug: registering module aws:ec2/networkInterfaceSecurityGroupAttachment@3.30.1
    debug: registering module aws:ec2/peeringConnectionOptions@3.30.1
    debug: registering module aws:ec2/placementGroup@3.30.1
    debug: registering module aws:ec2/proxyProtocolPolicy@3.30.1
    debug: registering module aws:ec2/route@3.30.1
    debug: registering module aws:ec2/routeTable@3.30.1
    debug: registering module aws:ec2/routeTableAssociation@3.30.1
    debug: registering module aws:ec2/securityGroup@3.30.1
    debug: registering module aws:ec2/securityGroupRule@3.30.1
    debug: registering module aws:ec2/snapshotCreateVolumePermission@3.30.1
    debug: registering module aws:ec2/spotDatafeedSubscription@3.30.1
    debug: registering module aws:ec2/spotFleetRequest@3.30.1
    debug: registering module aws:ec2/spotInstanceRequest@3.30.1
    debug: registering module aws:ec2/subnet@3.30.1
    debug: registering module aws:ec2/tag@3.30.1
    debug: registering module aws:ec2/trafficMirrorFilter@3.30.1
    debug: registering module aws:ec2/trafficMirrorFilterRule@3.30.1
    debug: registering module aws:ec2/trafficMirrorSession@3.30.1
    debug: registering module aws:ec2/trafficMirrorTarget@3.30.1
    debug: registering module aws:ec2/transitGatewayPeeringAttachmentAccepter@3.30.1
    debug: registering module aws:ec2/volumeAttachment@3.30.1
    debug: registering module aws:ec2/vpc@3.30.1
    debug: registering module aws:ec2/vpcDhcpOptions@3.30.1
    debug: registering module aws:ec2/vpcDhcpOptionsAssociation@3.30.1
    debug: registering module aws:ec2/vpcEndpoint@3.30.1
    debug: registering module aws:ec2/vpcEndpointConnectionNotification@3.30.1
    debug: registering module aws:ec2/vpcEndpointRouteTableAssociation@3.30.1
    debug: registering module aws:ec2/vpcEndpointService@3.30.1
    debug: registering module aws:ec2/vpcEndpointServiceAllowedPrinciple@3.30.1
    debug: registering module aws:ec2/vpcEndpointSubnetAssociation@3.30.1
    debug: registering module aws:ec2/vpcIpv4CidrBlockAssociation@3.30.1
    debug: registering module aws:ec2/vpcPeeringConnection@3.30.1
    debug: registering module aws:ec2/vpcPeeringConnectionAccepter@3.30.1
    debug: registering module aws:ec2/vpnConnection@3.30.1
    debug: registering module aws:ec2/vpnConnectionRoute@3.30.1
    debug: registering module aws:ec2/vpnGateway@3.30.1
    debug: registering module aws:ec2/vpnGatewayAttachment@3.30.1
    debug: registering module aws:ec2/vpnGatewayRoutePropagation@3.30.1
    debug: registering module aws:ec2clientvpn/authorizationRule@3.30.1
    debug: registering module aws:ec2clientvpn/endpoint@3.30.1
    debug: registering module aws:ec2clientvpn/networkAssociation@3.30.1
    debug: registering module aws:ec2clientvpn/route@3.30.1
    debug: registering module aws:ec2transitgateway/peeringAttachment@3.30.1
    debug: registering module aws:ec2transitgateway/prefixListReference@3.30.1
    debug: registering module aws:ec2transitgateway/route@3.30.1
    debug: registering module aws:ec2transitgateway/routeTable@3.30.1
    debug: registering module aws:ec2transitgateway/routeTableAssociation@3.30.1
    debug: registering module aws:ec2transitgateway/routeTablePropagation@3.30.1
    debug: registering module aws:ec2transitgateway/transitGateway@3.30.1
    debug: registering module aws:ec2transitgateway/vpcAttachment@3.30.1
    debug: registering module aws:ec2transitgateway/vpcAttachmentAccepter@3.30.1
    debug: registering module aws:ecr/lifecyclePolicy@3.30.1
    debug: registering module aws:ecr/repository@3.30.1
    debug: registering module aws:ecr/repositoryPolicy@3.30.1
    debug: registering module aws:ecs/capacityProvider@3.30.1
    debug: registering module aws:ecs/cluster@3.30.1
    debug: registering module aws:ecs/service@3.30.1
    debug: registering module aws:ecs/taskDefinition@3.30.1
    debug: registering module aws:efs/accessPoint@3.30.1
    debug: registering module aws:efs/fileSystem@3.30.1
    debug: registering module aws:efs/fileSystemPolicy@3.30.1
    debug: registering module aws:efs/mountTarget@3.30.1
    debug: registering module aws:eks/cluster@3.30.1
    debug: registering module aws:eks/fargateProfile@3.30.1
    debug: registering module aws:eks/nodeGroup@3.30.1
    debug: registering module aws:elasticache/cluster@3.30.1
    debug: registering module aws:elasticache/globalReplicationGroup@3.30.1
    debug: registering module aws:elasticache/parameterGroup@3.30.1
    debug: registering module aws:elasticache/replicationGroup@3.30.1
    debug: registering module aws:elasticache/securityGroup@3.30.1
    debug: registering module aws:elasticache/subnetGroup@3.30.1
    debug: registering module aws:elasticbeanstalk/application@3.30.1
    debug: registering module aws:elasticbeanstalk/applicationVersion@3.30.1
    debug: registering module aws:elasticbeanstalk/configurationTemplate@3.30.1
    debug: registering module aws:elasticbeanstalk/environment@3.30.1
    debug: registering module aws:elasticloadbalancing/appCookieStickinessPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/attachment@3.30.1
    debug: registering module aws:elasticloadbalancing/listenerPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancer@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancerBackendServerPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancerCookieStickinessPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/loadBalancerPolicy@3.30.1
    debug: registering module aws:elasticloadbalancing/sslNegotiationPolicy@3.30.1
    debug: registering module aws:elasticloadbalancingv2/listener@3.30.1
    debug: registering module aws:elasticloadbalancingv2/listenerCertificate@3.30.1
    debug: registering module aws:elasticloadbalancingv2/listenerRule@3.30.1
    debug: registering module aws:elasticloadbalancingv2/loadBalancer@3.30.1
    debug: registering module aws:elasticloadbalancingv2/targetGroup@3.30.1
    debug: registering module aws:elasticloadbalancingv2/targetGroupAttachment@3.30.1
    debug: registering module aws:elasticsearch/domain@3.30.1
    debug: registering module aws:elasticsearch/domainPolicy@3.30.1
    debug: registering module aws:elastictranscoder/pipeline@3.30.1
    debug: registering module aws:elastictranscoder/preset@3.30.1
    debug: registering module aws:elb/appCookieStickinessPolicy@3.30.1
    debug: registering module aws:elb/attachment@3.30.1
    debug: registering module aws:elb/listenerPolicy@3.30.1
    debug: registering module aws:elb/loadBalancer@3.30.1
    debug: registering module aws:elb/loadBalancerBackendServerPolicy@3.30.1
    debug: registering module aws:elb/loadBalancerCookieStickinessPolicy@3.30.1
    debug: registering module aws:elb/loadBalancerPolicy@3.30.1
    debug: registering module aws:elb/sslNegotiationPolicy@3.30.1
    debug: registering module aws:emr/cluster@3.30.1
    debug: registering module aws:emr/instanceFleet@3.30.1
    debug: registering module aws:emr/instanceGroup@3.30.1
    debug: registering module aws:emr/managedScalingPolicy@3.30.1
    debug: registering module aws:emr/securityConfiguration@3.30.1
    debug: registering module aws:fms/adminAccount@3.30.1
    debug: registering module aws:fms/policy@3.30.1
    debug: registering module aws:fsx/lustreFileSystem@3.30.1
    debug: registering module aws:fsx/windowsFileSystem@3.30.1
    debug: registering module aws:gamelift/alias@3.30.1
    debug: registering module aws:gamelift/build@3.30.1
    debug: registering module aws:gamelift/fleet@3.30.1
    debug: registering module aws:gamelift/gameSessionQueue@3.30.1
    debug: registering module aws:glacier/vault@3.30.1
    debug: registering module aws:glacier/vaultLock@3.30.1
    debug: registering module aws:globalaccelerator/accelerator@3.30.1
    debug: registering module aws:globalaccelerator/endpointGroup@3.30.1
    debug: registering module aws:globalaccelerator/listener@3.30.1
    debug: registering module aws:glue/catalogDatabase@3.30.1
    debug: registering module aws:glue/catalogTable@3.30.1
    debug: registering module aws:glue/classifier@3.30.1
    debug: registering module aws:glue/connection@3.30.1
    debug: registering module aws:glue/crawler@3.30.1
    debug: registering module aws:glue/dataCatalogEncryptionSettings@3.30.1
    debug: registering module aws:glue/devEndpoint@3.30.1
    debug: registering module aws:glue/job@3.30.1
    debug: registering module aws:glue/mLTransform@3.30.1
    debug: registering module aws:glue/partition@3.30.1
    debug: registering module aws:glue/registry@3.30.1
    debug: registering module aws:glue/resourcePolicy@3.30.1
    debug: registering module aws:glue/schema@3.30.1
    debug: registering module aws:glue/securityConfiguration@3.30.1
    debug: registering module aws:glue/trigger@3.30.1
    debug: registering module aws:glue/userDefinedFunction@3.30.1
    debug: registering module aws:glue/workflow@3.30.1
    debug: registering module aws:guardduty/detector@3.30.1
    debug: registering module aws:guardduty/filter@3.30.1
    debug: registering module aws:guardduty/iPSet@3.30.1
    debug: registering module aws:guardduty/inviteAccepter@3.30.1
    debug: registering module aws:guardduty/member@3.30.1
    debug: registering module aws:guardduty/organizationAdminAccount@3.30.1
    debug: registering module aws:guardduty/organizationConfiguration@3.30.1
    debug: registering module aws:guardduty/publishingDestination@3.30.1
    debug: registering module aws:guardduty/threatIntelSet@3.30.1
    debug: registering module aws:iam/accessKey@3.30.1
    debug: registering module aws:iam/accountAlias@3.30.1
    debug: registering module aws:iam/accountPasswordPolicy@3.30.1
    debug: registering module aws:iam/group@3.30.1
    debug: registering module aws:iam/groupMembership@3.30.1
    debug: registering module aws:iam/groupPolicy@3.30.1
    debug: registering module aws:iam/groupPolicyAttachment@3.30.1
    debug: registering module aws:iam/instanceProfile@3.30.1
    debug: registering module aws:iam/openIdConnectProvider@3.30.1
    debug: registering module aws:iam/policy@3.30.1
    debug: registering module aws:iam/policyAttachment@3.30.1
    debug: registering module aws:iam/role@3.30.1
    debug: registering module aws:iam/rolePolicy@3.30.1
    debug: registering module aws:iam/rolePolicyAttachment@3.30.1
    debug: registering module aws:iam/samlProvider@3.30.1
    debug: registering module aws:iam/serverCertificate@3.30.1
    debug: registering module aws:iam/serviceLinkedRole@3.30.1
    debug: registering module aws:iam/sshKey@3.30.1
    debug: registering module aws:iam/user@3.30.1
    debug: registering module aws:iam/userGroupMembership@3.30.1
    debug: registering module aws:iam/userLoginProfile@3.30.1
    debug: registering module aws:iam/userPolicy@3.30.1
    debug: registering module aws:iam/userPolicyAttachment@3.30.1
    debug: registering module aws:imagebuilder/component@3.30.1
    debug: registering module aws:imagebuilder/distributionConfiguration@3.30.1
    debug: registering module aws:imagebuilder/image@3.30.1
    debug: registering module aws:imagebuilder/imagePipeline@3.30.1
    debug: registering module aws:imagebuilder/imageRecipe@3.30.1
    debug: registering module aws:imagebuilder/infrastructureConfiguration@3.30.1
    debug: registering module aws:inspector/assessmentTarget@3.30.1
    debug: registering module aws:inspector/assessmentTemplate@3.30.1
    debug: registering module aws:inspector/resourceGroup@3.30.1
    debug: registering module aws:iot/certificate@3.30.1
    debug: registering module aws:iot/policy@3.30.1
    debug: registering module aws:iot/policyAttachment@3.30.1
    debug: registering module aws:iot/roleAlias@3.30.1
    debug: registering module aws:iot/thing@3.30.1
    debug: registering module aws:iot/thingPrincipalAttachment@3.30.1
    debug: registering module aws:iot/thingType@3.30.1
    debug: registering module aws:iot/topicRule@3.30.1
    debug: registering module aws:kinesis/analyticsApplication@3.30.1
    debug: registering module aws:kinesis/firehoseDeliveryStream@3.30.1
    debug: registering module aws:kinesis/stream@3.30.1
    debug: registering module aws:kinesis/videoStream@3.30.1
    debug: registering module aws:kinesisanalyticsv2/application@3.30.1
    debug: registering module aws:kms/alias@3.30.1
    debug: registering module aws:kms/ciphertext@3.30.1
    debug: registering module aws:kms/externalKey@3.30.1
    debug: registering module aws:kms/grant@3.30.1
    debug: registering module aws:kms/key@3.30.1
    debug: registering module aws:lakeformation/dataLakeSettings@3.30.1
    debug: registering module aws:lakeformation/permissions@3.30.1
    debug: registering module aws:lakeformation/resource@3.30.1
    debug: registering module aws:lambda/alias@3.30.1
    debug: registering module aws:lambda/codeSigningConfig@3.30.1
    debug: registering module aws:lambda/eventSourceMapping@3.30.1
    debug: registering module aws:lambda/function@3.30.1
    debug: registering module aws:lambda/functionEventInvokeConfig@3.30.1
    debug: registering module aws:lambda/layerVersion@3.30.1
    debug: registering module aws:lambda/permission@3.30.1
    debug: registering module aws:lambda/provisionedConcurrencyConfig@3.30.1
    debug: registering module aws:lb/listener@3.30.1
    debug: registering module aws:lb/listenerCertificate@3.30.1
    debug: registering module aws:lb/listenerRule@3.30.1
    debug: registering module aws:lb/loadBalancer@3.30.1
    debug: registering module aws:lb/targetGroup@3.30.1
    debug: registering module aws:lb/targetGroupAttachment@3.30.1
    debug: registering module aws:lex/bot@3.30.1
    debug: registering module aws:lex/botAlias@3.30.1
    debug: registering module aws:lex/intent@3.30.1
    debug: registering module aws:lex/slotType@3.30.1
    debug: registering module aws:licensemanager/association@3.30.1
    debug: registering module aws:licensemanager/licenseConfiguration@3.30.1
    debug: registering module aws:lightsail/domain@3.30.1
    debug: registering module aws:lightsail/instance@3.30.1
    debug: registering module aws:lightsail/keyPair@3.30.1
    debug: registering module aws:lightsail/staticIp@3.30.1
    debug: registering module aws:lightsail/staticIpAttachment@3.30.1
    debug: registering module aws:macie/memberAccountAssociation@3.30.1
    debug: registering module aws:macie/s3BucketAssociation@3.30.1
    debug: registering module aws:mediaconvert/queue@3.30.1
    debug: registering module aws:mediapackage/channel@3.30.1
    debug: registering module aws:mediastore/container@3.30.1
    debug: registering module aws:mediastore/containerPolicy@3.30.1
    debug: registering module aws:mq/broker@3.30.1
    debug: registering module aws:mq/configuration@3.30.1
    debug: registering module aws:msk/cluster@3.30.1
    debug: registering module aws:msk/configuration@3.30.1
    debug: registering module aws:msk/scramSecretAssociation@3.30.1
    debug: registering module aws:neptune/cluster@3.30.1
    debug: registering module aws:neptune/clusterInstance@3.30.1
    debug: registering module aws:neptune/clusterParameterGroup@3.30.1
    debug: registering module aws:neptune/clusterSnapshot@3.30.1
    debug: registering module aws:neptune/eventSubscription@3.30.1
    debug: registering module aws:neptune/parameterGroup@3.30.1
    debug: registering module aws:neptune/subnetGroup@3.30.1
    debug: registering module aws:networkfirewall/firewall@3.30.1
    debug: registering module aws:networkfirewall/firewallPolicy@3.30.1
    debug: registering module aws:networkfirewall/loggingConfiguration@3.30.1
    debug: registering module aws:networkfirewall/resourcePolicy@3.30.1
    debug: registering module aws:networkfirewall/ruleGroup@3.30.1
    debug: registering module aws:opsworks/application@3.30.1
    debug: registering module aws:opsworks/customLayer@3.30.1
    debug: registering module aws:opsworks/gangliaLayer@3.30.1
    debug: registering module aws:opsworks/haproxyLayer@3.30.1
    debug: registering module aws:opsworks/instance@3.30.1
    debug: registering module aws:opsworks/javaAppLayer@3.30.1
    debug: registering module aws:opsworks/memcachedLayer@3.30.1
    debug: registering module aws:opsworks/mysqlLayer@3.30.1
    debug: registering module aws:opsworks/nodejsAppLayer@3.30.1
    debug: registering module aws:opsworks/permission@3.30.1
    debug: registering module aws:opsworks/phpAppLayer@3.30.1
    debug: registering module aws:opsworks/railsAppLayer@3.30.1
    debug: registering module aws:opsworks/rdsDbInstance@3.30.1
    debug: registering module aws:opsworks/stack@3.30.1
    debug: registering module aws:opsworks/staticWebLayer@3.30.1
    debug: registering module aws:opsworks/userProfile@3.30.1
    debug: registering module aws:organizations/account@3.30.1
    debug: registering module aws:organizations/organization@3.30.1
    debug: registering module aws:organizations/organizationalUnit@3.30.1
    debug: registering module aws:organizations/policy@3.30.1
    debug: registering module aws:organizations/policyAttachment@3.30.1
    debug: registering module aws:pinpoint/admChannel@3.30.1
    debug: registering module aws:pinpoint/apnsChannel@3.30.1
    debug: registering module aws:pinpoint/apnsSandboxChannel@3.30.1
    debug: registering module aws:pinpoint/apnsVoipChannel@3.30.1
    debug: registering module aws:pinpoint/apnsVoipSandboxChannel@3.30.1
    debug: registering module aws:pinpoint/app@3.30.1
    debug: registering module aws:pinpoint/baiduChannel@3.30.1
    debug: registering module aws:pinpoint/emailChannel@3.30.1
    debug: registering module aws:pinpoint/eventStream@3.30.1
    debug: registering module aws:pinpoint/gcmChannel@3.30.1
    debug: registering module aws:pinpoint/smsChannel@3.30.1
    debug: registering module aws:qldb/ledger@3.30.1
    debug: registering module aws:quicksight/group@3.30.1
    debug: registering module aws:quicksight/user@3.30.1
    debug: registering module aws:ram/principalAssociation@3.30.1
    debug: registering module aws:ram/resourceAssociation@3.30.1
    debug: registering module aws:ram/resourceShare@3.30.1
    debug: registering module aws:ram/resourceShareAccepter@3.30.1
    debug: registering module aws:rds/cluster@3.30.1
    debug: registering module aws:rds/clusterEndpoint@3.30.1
    debug: registering module aws:rds/clusterInstance@3.30.1
    debug: registering module aws:rds/clusterParameterGroup@3.30.1
    debug: registering module aws:rds/clusterSnapshot@3.30.1
    debug: registering module aws:rds/eventSubscription@3.30.1
    debug: registering module aws:rds/globalCluster@3.30.1
    debug: registering module aws:rds/instance@3.30.1
    debug: registering module aws:rds/optionGroup@3.30.1
    debug: registering module aws:rds/parameterGroup@3.30.1
    debug: registering module aws:rds/proxy@3.30.1
    debug: registering module aws:rds/proxyDefaultTargetGroup@3.30.1
    debug: registering module aws:rds/proxyTarget@3.30.1
    debug: registering module aws:rds/roleAssociation@3.30.1
    debug: registering module aws:rds/securityGroup@3.30.1
    debug: registering module aws:rds/snapshot@3.30.1
    debug: registering module aws:rds/subnetGroup@3.30.1
    debug: registering module aws:redshift/cluster@3.30.1
    debug: registering module aws:redshift/eventSubscription@3.30.1
    debug: registering module aws:redshift/parameterGroup@3.30.1
    debug: registering module aws:redshift/securityGroup@3.30.1
    debug: registering module aws:redshift/snapshotCopyGrant@3.30.1
    debug: registering module aws:redshift/snapshotSchedule@3.30.1
    debug: registering module aws:redshift/snapshotScheduleAssociation@3.30.1
    debug: registering module aws:redshift/subnetGroup@3.30.1
    debug: registering module aws:resourcegroups/group@3.30.1
    debug: registering module aws:route53/delegationSet@3.30.1
    debug: registering module aws:route53/healthCheck@3.30.1
    debug: registering module aws:route53/keySigningKey@3.30.1
    debug: registering module aws:route53/queryLog@3.30.1
    debug: registering module aws:route53/record@3.30.1
    debug: registering module aws:route53/resolverDnsSecConfig@3.30.1
    debug: registering module aws:route53/resolverEndpoint@3.30.1
    debug: registering module aws:route53/resolverQueryLogConfig@3.30.1
    debug: registering module aws:route53/resolverQueryLogConfigAssociation@3.30.1
    debug: registering module aws:route53/resolverRule@3.30.1
    debug: registering module aws:route53/resolverRuleAssociation@3.30.1
    debug: registering module aws:route53/vpcAssociationAuthorization@3.30.1
    debug: registering module aws:route53/zone@3.30.1
    debug: registering module aws:route53/zoneAssociation@3.30.1
    debug: registering module aws:s3/accessPoint@3.30.1
    debug: registering module aws:s3/accountPublicAccessBlock@3.30.1
    debug: registering module aws:s3/analyticsConfiguration@3.30.1
    debug: registering module aws:s3/bucket@3.30.1
    debug: registering module aws:s3/bucketMetric@3.30.1
    debug: registering module aws:s3/bucketNotification@3.30.1
    debug: registering module aws:s3/bucketObject@3.30.1
    debug: registering module aws:s3/bucketOwnershipControls@3.30.1
    debug: registering module aws:s3/bucketPolicy@3.30.1
    debug: registering module aws:s3/bucketPublicAccessBlock@3.30.1
    debug: registering module aws:s3/inventory@3.30.1
    debug: registering module aws:s3/objectCopy@3.30.1
    debug: registering module aws:s3control/bucket@3.30.1
    debug: registering module aws:s3control/bucketLifecycleConfiguration@3.30.1
    debug: registering module aws:s3control/bucketPolicy@3.30.1
    debug: registering module aws:s3outposts/endpoint@3.30.1
    debug: registering module aws:sagemaker/appImageConfig@3.30.1
    debug: registering module aws:sagemaker/codeRepository@3.30.1
    debug: registering module aws:sagemaker/domain@3.30.1
    debug: registering module aws:sagemaker/endpoint@3.30.1
    debug: registering module aws:sagemaker/endpointConfiguration@3.30.1
    debug: registering module aws:sagemaker/featureGroup@3.30.1
    debug: registering module aws:sagemaker/image@3.30.1
    debug: registering module aws:sagemaker/imageVersion@3.30.1
    debug: registering module aws:sagemaker/model@3.30.1
    debug: registering module aws:sagemaker/modelPackageGroup@3.30.1
    debug: registering module aws:sagemaker/notebookInstance@3.30.1
    debug: registering module aws:sagemaker/notebookInstanceLifecycleConfiguration@3.30.1
    debug: registering module aws:sagemaker/userProfile@3.30.1
    debug: registering module aws:secretsmanager/secret@3.30.1
    debug: registering module aws:secretsmanager/secretPolicy@3.30.1
    debug: registering module aws:secretsmanager/secretRotation@3.30.1
    debug: registering module aws:secretsmanager/secretVersion@3.30.1
    debug: registering module aws:securityhub/account@3.30.1
    debug: registering module aws:securityhub/actionTarget@3.30.1
    debug: registering module aws:securityhub/inviteAccepter@3.30.1
    debug: registering module aws:securityhub/member@3.30.1
    debug: registering module aws:securityhub/organizationAdminAccount@3.30.1
    debug: registering module aws:securityhub/productSubscription@3.30.1
    debug: registering module aws:securityhub/standardsSubscription@3.30.1
    debug: registering module aws:serverlessrepository/cloudFormationStack@3.30.1
    debug: registering module aws:servicecatalog/portfolio@3.30.1
    debug: registering module aws:servicediscovery/httpNamespace@3.30.1
    debug: registering module aws:servicediscovery/privateDnsNamespace@3.30.1
    debug: registering module aws:servicediscovery/publicDnsNamespace@3.30.1
    debug: registering module aws:servicediscovery/service@3.30.1
    debug: registering module aws:servicequotas/serviceQuota@3.30.1
    debug: registering module aws:ses/activeReceiptRuleSet@3.30.1
    debug: registering module aws:ses/confgurationSet@3.30.1
    debug: registering module aws:ses/configurationSet@3.30.1
    debug: registering module aws:ses/domainDkim@3.30.1
    debug: registering module aws:ses/domainIdentity@3.30.1
    debug: registering module aws:ses/domainIdentityVerification@3.30.1
    debug: registering module aws:ses/emailIdentity@3.30.1
    debug: registering module aws:ses/eventDestination@3.30.1
    debug: registering module aws:ses/identityNotificationTopic@3.30.1
    debug: registering module aws:ses/identityPolicy@3.30.1
    debug: registering module aws:ses/mailFrom@3.30.1
    debug: registering module aws:ses/receiptFilter@3.30.1
    debug: registering module aws:ses/receiptRule@3.30.1
    debug: registering module aws:ses/receiptRuleSet@3.30.1
    debug: registering module aws:ses/template@3.30.1
    debug: registering module aws:sfn/activity@3.30.1
    debug: registering module aws:sfn/stateMachine@3.30.1
    debug: registering module aws:shield/protection@3.30.1
    debug: registering module aws:signer/signingJob@3.30.1
    debug: registering module aws:signer/signingProfile@3.30.1
    debug: registering module aws:signer/signingProfilePermission@3.30.1
    debug: registering module aws:simpledb/domain@3.30.1
    debug: registering module aws:sns/platformApplication@3.30.1
    debug: registering module aws:sns/smsPreferences@3.30.1
    debug: registering module aws:sns/topic@3.30.1
    debug: registering module aws:sns/topicPolicy@3.30.1
    debug: registering module aws:sns/topicSubscription@3.30.1
    debug: registering module aws:sqs/queue@3.30.1
    debug: registering module aws:sqs/queuePolicy@3.30.1
    debug: registering module aws:ssm/activation@3.30.1
    debug: registering module aws:ssm/association@3.30.1
    debug: registering module aws:ssm/document@3.30.1
    debug: registering module aws:ssm/maintenanceWindow@3.30.1
    debug: registering module aws:ssm/maintenanceWindowTarget@3.30.1
    debug: registering module aws:ssm/maintenanceWindowTask@3.30.1
    debug: registering module aws:ssm/parameter@3.30.1
    debug: registering module aws:ssm/patchBaseline@3.30.1
    debug: registering module aws:ssm/patchGroup@3.30.1
    debug: registering module aws:ssm/resourceDataSync@3.30.1
    debug: registering module aws:ssoadmin/accountAssignment@3.30.1
    debug: registering module aws:ssoadmin/managedPolicyAttachment@3.30.1
    debug: registering module aws:ssoadmin/permissionSet@3.30.1
    debug: registering module aws:ssoadmin/permissionSetInlinePolicy@3.30.1
    debug: registering module aws:storagegateway/cache@3.30.1
    debug: registering module aws:storagegateway/cachesIscsiVolume@3.30.1
    debug: registering module aws:storagegateway/gateway@3.30.1
    debug: registering module aws:storagegateway/nfsFileShare@3.30.1
    debug: registering module aws:storagegateway/smbFileShare@3.30.1
    debug: registering module aws:storagegateway/storedIscsiVolume@3.30.1
    debug: registering module aws:storagegateway/tapePool@3.30.1
    debug: registering module aws:storagegateway/uploadBuffer@3.30.1
    debug: registering module aws:storagegateway/workingStorage@3.30.1
    debug: registering module aws:swf/domain@3.30.1
    debug: registering module aws:synthetics/canary@3.30.1
    debug: registering module aws:transfer/server@3.30.1
    debug: registering module aws:transfer/sshKey@3.30.1
    debug: registering module aws:transfer/user@3.30.1
    debug: registering module aws:waf/byteMatchSet@3.30.1
    debug: registering module aws:waf/geoMatchSet@3.30.1
    debug: registering module aws:waf/ipSet@3.30.1
    debug: registering module aws:waf/rateBasedRule@3.30.1
    debug: registering module aws:waf/regexMatchSet@3.30.1
    debug: registering module aws:waf/regexPatternSet@3.30.1
    debug: registering module aws:waf/rule@3.30.1
    debug: registering module aws:waf/ruleGroup@3.30.1
    debug: registering module aws:waf/sizeConstraintSet@3.30.1
    debug: registering module aws:waf/sqlInjectionMatchSet@3.30.1
    debug: registering module aws:waf/webAcl@3.30.1
    debug: registering module aws:waf/xssMatchSet@3.30.1
    debug: registering module aws:wafregional/byteMatchSet@3.30.1
    debug: registering module aws:wafregional/geoMatchSet@3.30.1
    debug: registering module aws:wafregional/ipSet@3.30.1
    debug: registering module aws:wafregional/rateBasedRule@3.30.1
    debug: registering module aws:wafregional/regexMatchSet@3.30.1
    debug: registering module aws:wafregional/regexPatternSet@3.30.1
    debug: registering module aws:wafregional/rule@3.30.1
    debug: registering module aws:wafregional/ruleGroup@3.30.1
    debug: registering module aws:wafregional/sizeConstraintSet@3.30.1
    debug: registering module aws:wafregional/sqlInjectionMatchSet@3.30.1
    debug: registering module aws:wafregional/webAcl@3.30.1
    debug: registering module aws:wafregional/webAclAssociation@3.30.1
    debug: registering module aws:wafregional/xssMatchSet@3.30.1
    debug: registering module aws:wafv2/ipSet@3.30.1
    debug: registering module aws:wafv2/regexPatternSet@3.30.1
    debug: registering module aws:wafv2/ruleGroup@3.30.1
    debug: registering module aws:wafv2/webAcl@3.30.1
    debug: registering module aws:wafv2/webAclAssociation@3.30.1
    debug: registering module aws:wafv2/webAclLoggingConfiguration@3.30.1
    debug: registering module aws:worklink/fleet@3.30.1
    debug: registering module aws:worklink/websiteCertificateAuthorityAssociation@3.30.1
    debug: registering module aws:workspaces/directory@3.30.1
    debug: registering module aws:workspaces/ipGroup@3.30.1
    debug: registering module aws:workspaces/workspace@3.30.1
    debug: registering module aws:xray/encryptionConfig@3.30.1
    debug: registering module aws:xray/group@3.30.1
    debug: registering module aws:xray/samplingRule@3.30.1
    debug: registering package aws@3.30.1
    debug: registering module eks:index@0.22.0
    debug: registering package eks@0.22.0
    debug: reading resource: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    debug: preparing read resource for RPC
    debug: adding resolver name
    debug: adding resolver outputs
    debug: adding resolver secret_output_names
    debug: registering resource: ty=eks:index:Cluster, name=eks-main-eks, custom=False, remote=True
    debug: preparing resource for RPC
    debug: adding resolver cluster_security_group
    debug: adding resolver cluster_security_group_tags
    debug: adding resolver cluster_tags
    debug: adding resolver create_oidc_provider
    debug: adding resolver creation_role_provider
    debug: adding resolver desired_capacity
    debug: adding resolver enabled_cluster_log_types
    debug: adding resolver encrypt_root_block_device
    debug: adding resolver encryption_config_key_arn
    debug: adding resolver endpoint_private_access
    debug: adding resolver endpoint_public_access
    debug: adding resolver fargate
    debug: adding resolver gpu
    debug: adding resolver instance_profile_name
    debug: adding resolver instance_role
    debug: adding resolver instance_roles
    debug: adding resolver instance_type
    debug: adding resolver kubernetes_service_ip_address_range
    debug: adding resolver max_size
    debug: adding resolver min_size
    debug: adding resolver name
    debug: adding resolver node_ami_id
    debug: adding resolver node_associate_public_ip_address
    debug: adding resolver node_group_options
    debug: adding resolver node_public_key
    debug: adding resolver node_root_volume_size
    debug: adding resolver node_security_group_tags
    debug: adding resolver node_subnet_ids
    debug: adding resolver node_user_data
    debug: adding resolver private_subnet_ids
    debug: adding resolver provider_credential_opts
    debug: adding resolver proxy
    debug: adding resolver public_access_cidrs
    debug: adding resolver public_subnet_ids
    debug: adding resolver role_mappings
    debug: adding resolver service_role
    debug: adding resolver skip_default_node_group
    debug: adding resolver storage_classes
    debug: adding resolver subnet_ids
    debug: adding resolver tags
    debug: adding resolver use_default_vpc_cni
    debug: adding resolver user_mappings
    debug: adding resolver version
    debug: adding resolver vpc_cni_options
    debug: adding resolver vpc_id
    debug: adding resolver aws_provider
    debug: adding resolver core
    debug: adding resolver default_node_group
    debug: adding resolver eks_cluster
    debug: adding resolver eks_cluster_ingress_rule
    debug: adding resolver kubeconfig
    debug: adding resolver node_security_group
    debug: adding resolver provider
    debug: registering resource: ty=pulumi:providers:kubernetes, name=k8s, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver cluster
    debug: adding resolver context
    debug: adding resolver enable_dry_run
    debug: adding resolver kubeconfig
    debug: adding resolver namespace
    debug: adding resolver render_yaml_to_directory
    debug: adding resolver suppress_deprecation_warnings
    debug: registering resource: ty=kubernetes:core/v1:Namespace, name=eks-main-app, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver api_version
    debug: adding resolver kind
    debug: adding resolver metadata
    debug: adding resolver spec
    debug: adding resolver status
    debug: registering resource: ty=custom:resource:App, name=eks-main-app, custom=False, remote=False
    debug: preparing resource for RPC
    debug: registering resource: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver api_version
    debug: adding resolver kind
    debug: adding resolver metadata
    debug: adding resolver spec
    debug: adding resolver status
    debug: registering resource: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver api_version
    debug: adding resolver kind
    debug: adding resolver metadata
    debug: adding resolver spec
    debug: adding resolver status
    debug: registering resource: ty=custom:resource:IngressCtl, name=eks-main-ing-perms, custom=False, remote=False
    debug: preparing resource for RPC
    debug: registering resource: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver description
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver path
    debug: adding resolver policy
    debug: adding resolver arn
    debug: registering resource: ty=aws:iam/role:Role, name=eks-main-alb-controller-role, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver assume_role_policy
    debug: adding resolver description
    debug: adding resolver force_detach_policies
    debug: adding resolver inline_policies
    debug: adding resolver managed_policy_arns
    debug: adding resolver max_session_duration
    debug: adding resolver name
    debug: adding resolver name_prefix
    debug: adding resolver path
    debug: adding resolver permissions_boundary
    debug: adding resolver tags
    debug: adding resolver arn
    debug: adding resolver create_date
    debug: adding resolver unique_id
    debug: registering resource: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment, custom=True, remote=False
    debug: preparing resource for RPC
    debug: adding resolver policy_arn
    debug: adding resolver role
    debug: Waiting for outstanding RPCs to complete
    debug: beginning rpc register resource
    debug: beginning rpc read resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource
    debug: beginning rpc register resource outputs
    debug: waiting for quiescence; 13 RPCs outstanding
    debug: preparing resource registration: ty=pulumi:pulumi:Stack, name=eks-main-dev
    debug: resource {} preparing to wait for dependencies
    debug: resource {} prepared
    debug: resource registration prepared: ty=pulumi:pulumi:Stack, name=eks-main-dev
    debug: preparing read: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} preparing to wait for dependencies
    debug: top-level input property translated: name -> name
    debug: preparing resource registration: ty=eks:index:Cluster, name=eks-main-eks
    debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x10e42adf0>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x10e424af0>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x10e3f6430>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} preparing to wait for dependencies
    debug: top-level input property translated: create_oidc_provider -> createOidcProvider
    debug: top-level input property translated: fargate -> fargate
    debug: preparing resource registration: ty=pulumi:providers:kubernetes, name=k8s
    debug: resource {'cluster': None, 'context': None, 'enable_dry_run': None, 'kubeconfig': <pulumi.output.Output object at 0x10e534250>, 'namespace': None, 'render_yaml_to_directory': None, 'suppress_deprecation_warnings': None} preparing to wait for dependencies
    debug: preparing resource registration: ty=kubernetes:core/v1:Namespace, name=eks-main-app
    debug: resource {'api_version': 'v1', 'kind': 'Namespace', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x10f525d00>, 'spec': None, 'status': None} preparing to wait for dependencies
    debug: top-level input property translated: api_version -> apiVersion
    debug: top-level input property translated: kind -> kind
    debug: top-level input property translated: metadata -> metadata
    debug: preparing resource registration: ty=custom:resource:App, name=eks-main-app
    debug: resource {} preparing to wait for dependencies
    debug: preparing resource registration: ty=kubernetes:apps/v1:Deployment, name=eks-main-app-app-deployment
    debug: resource {'api_version': 'apps/v1', 'kind': 'Deployment', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x10e663b80>, 'spec': <pulumi_kubernetes.apps.v1._inputs.DeploymentSpecArgs object at 0x10e663d60>, 'status': None} preparing to wait for dependencies
    debug: top-level input property translated: api_version -> apiVersion
    debug: top-level input property translated: kind -> kind
    debug: transforming input property: app -> app
    debug: preparing resource registration: ty=kubernetes:core/v1:Service, name=eks-main-app-app-service
    debug: resource {'api_version': 'v1', 'kind': 'Service', 'metadata': <pulumi_kubernetes.meta.v1._inputs.ObjectMetaArgs object at 0x10e663e20>, 'spec': <pulumi_kubernetes.core.v1._inputs.ServiceSpecArgs object at 0x10e705e50>, 'status': None} preparing to wait for dependencies
    debug: top-level input property translated: api_version -> apiVersion
    debug: top-level input property translated: kind -> kind
    debug: preparing resource registration: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    debug: resource {} preparing to wait for dependencies
    debug: preparing resource registration: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} preparing to wait for dependencies
    debug: top-level input property translated: policy -> policy
    debug: preparing resource registration: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} preparing to wait for dependencies
    debug: top-level input property translated: assume_role_policy -> assumeRolePolicy
    debug: top-level input property translated: description -> description
    debug: top-level input property translated: force_detach_policies -> forceDetachPolicies
    debug: preparing resource registration: ty=aws:iam/rolePolicyAttachment:RolePolicyAttachment, name=eks-main-alb-controller-role-attachment
    debug: resource {'policy_arn': <pulumi.output.Output object at 0x10e663ee0>, 'role': <pulumi.output.Output object at 0x10e9e4580>} preparing to wait for dependencies
    debug: resource registration successful: ty=pulumi:pulumi:Stack, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:Stack::eks-main-dev
    debug: resource {'name': 'demo/eks-vpc/dev', 'outputs': None, 'secret_output_names': None} prepared
    debug: read prepared: ty=pulumi:pulumi:StackReference, name=demo/eks-vpc/dev, id=demo/eks-vpc/dev
    debug: resource {} prepared
    debug: resource registration prepared: ty=custom:resource:App, name=eks-main-app
    debug: resource {} prepared
    debug: resource registration prepared: ty=custom:resource:IngressCtl, name=eks-main-ing-perms
    debug: resource registration successful: ty=custom:resource:App, urn=urn:pulumi:dev::eks-main::custom:resource:App::eks-main-app
    debug: resource registration successful: ty=custom:resource:IngressCtl, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl::eks-main-ing-perms
    debug: resource {'description': None, 'name': None, 'name_prefix': None, 'path': None, 'policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Action": [\n                "acm:DescribeCertificate",\n                "acm:ListCertificates",\n                "acm:GetCertificate"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteTags",\n                "ec2:DeleteSecurityGroup",\n                "ec2:DescribeAccountAttributes",\n                "ec2:DescribeAddresses",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus",\n                "ec2:DescribeInternetGateways",\n                "ec2:DescribeNetworkInterfaces",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeSubnets",\n                "ec2:DescribeTags",\n                "ec2:DescribeVpcs",\n                "ec2:ModifyInstanceAttribute",\n                "ec2:ModifyNetworkInterfaceAttribute",\n                "ec2:RevokeSecurityGroupIngress"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "elasticloadbalancing:AddListenerCertificates",\n                "elasticloadbalancing:AddTags",\n                "elasticloadbalancing:CreateListener",\n                "elasticloadbalancing:CreateLoadBalancer",\n                "elasticloadbalancing:CreateRule",\n                "elasticloadbalancing:CreateTargetGroup",\n                "elasticloadbalancing:DeleteListener",\n                "elasticloadbalancing:DeleteLoadBalancer",\n                "elasticloadbalancing:DeleteRule",\n                "elasticloadbalancing:DeleteTargetGroup",\n                "elasticloadbalancing:DeregisterTargets",\n                "elasticloadbalancing:DescribeListenerCertificates",\n                "elasticloadbalancing:DescribeListeners",\n                "elasticloadbalancing:DescribeLoadBalancers",\n                "elasticloadbalancing:DescribeLoadBalancerAttributes",\n                "elasticloadbalancing:DescribeRules",\n                "elasticloadbalancing:DescribeSSLPolicies",\n                "elasticloadbalancing:DescribeTags",\n                "elasticloadbalancing:DescribeTargetGroups",\n                "elasticloadbalancing:DescribeTargetGroupAttributes",\n                "elasticloadbalancing:DescribeTargetHealth",\n                "elasticloadbalancing:ModifyListener",\n                "elasticloadbalancing:ModifyLoadBalancerAttributes",\n                "elasticloadbalancing:ModifyRule",\n                "elasticloadbalancing:ModifyTargetGroup",\n                "elasticloadbalancing:ModifyTargetGroupAttributes",\n                "elasticloadbalancing:RegisterTargets",\n                "elasticloadbalancing:RemoveListenerCertificates",\n                "elasticloadbalancing:RemoveTags",\n                "elasticloadbalancing:SetIpAddressType",\n                "elasticloadbalancing:SetSecurityGroups",\n                "elasticloadbalancing:SetSubnets",\n                "elasticloadbalancing:SetWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "iam:CreateServiceLinkedRole",\n                "iam:GetServerCertificate",\n                "iam:ListServerCertificates"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "cognito-idp:DescribeUserPoolClient"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf-regional:GetWebACLForResource",\n                "waf-regional:GetWebACL",\n                "waf-regional:AssociateWebACL",\n                "waf-regional:DisassociateWebACL"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "tag:GetResources",\n                "tag:TagResources"\n              ],\n              "Resource": "*"\n            },\n            {\n              "Effect": "Allow",\n              "Action": [\n                "waf:GetWebACL"\n              ],\n              "Resource": "*"\n            }\n          ]\n        }\n        ', 'arn': None} prepared
    debug: resource registration prepared: ty=aws:iam/policy:Policy, name=eks-main-alb-controller-policy
    debug: resource {'assume_role_policy': '{\n          "Version": "2012-10-17",\n          "Statement": [\n            {\n              "Effect": "Allow",\n              "Principal": {\n                "Federated": "{oidc_provider_arn}"\n              },\n              "Action": "sts:AssumeRoleWithWebIdentity",\n              "Condition": {\n                "StringEquals": {\n                  "{oidc_provider_url}:sub": "system:serviceaccount:kube-system:{controller_name}" \n                }\n              }\n            }\n          ]\n        }\n        ', 'description': "Permissions required by the Kubernetes AWS ALB Ingress controller to do it's job.", 'force_detach_policies': True, 'inline_policies': None, 'managed_policy_arns': None, 'max_session_duration': None, 'name': None, 'name_prefix': None, 'path': None, 'permissions_boundary': None, 'tags': None, 'arn': None, 'create_date': None, 'unique_id': None} prepared
    debug: resource registration prepared: ty=aws:iam/role:Role, name=eks-main-alb-controller-role
    debug: resource read successful: ty=pulumi:pulumi:StackReference, urn=urn:pulumi:dev::eks-main::pulumi:pulumi:StackReference::demo/eks-vpc/dev
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: demo/eks-vpc/dev -> demo/eks-vpc/dev
    debug: incoming output property translated: secretOutputNames -> secret_output_names
    debug: incoming output value translated: [] -> []
    debug: incoming output property translated: outputs -> outputs
    debug: incoming output value translated: {'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpcId': 'vpc-0b7b646c66cd6f099'} -> {'privateSubnetIds': ['subnet-044974ee15921bd4d', 'subnet-0a8eed68bc61c6768'], 'vpcId': 'vpc-0b7b646c66cd6f099'}
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name secret_output_names
    debug: looking for resolver using translated name outputs
    debug: top-level input property translated: private_subnet_ids -> privateSubnetIds
    debug: top-level input property translated: vpc_id -> vpcId
    debug: resource {'cluster_security_group': None, 'cluster_security_group_tags': None, 'cluster_tags': None, 'create_oidc_provider': True, 'creation_role_provider': None, 'desired_capacity': None, 'enabled_cluster_log_types': None, 'encrypt_root_block_device': None, 'encryption_config_key_arn': None, 'endpoint_private_access': None, 'endpoint_public_access': None, 'fargate': <pulumi_eks._inputs.FargateProfileArgs object at 0x10e42adf0>, 'gpu': None, 'instance_profile_name': None, 'instance_role': None, 'instance_roles': None, 'instance_type': None, 'kubernetes_service_ip_address_range': None, 'max_size': None, 'min_size': None, 'name': None, 'node_ami_id': None, 'node_associate_public_ip_address': None, 'node_group_options': None, 'node_public_key': None, 'node_root_volume_size': None, 'node_security_group_tags': None, 'node_subnet_ids': None, 'node_user_data': None, 'private_subnet_ids': <pulumi.output.Output object at 0x10e424af0>, 'provider_credential_opts': None, 'proxy': None, 'public_access_cidrs': None, 'public_subnet_ids': None, 'role_mappings': None, 'service_role': None, 'skip_default_node_group': None, 'storage_classes': None, 'subnet_ids': None, 'tags': None, 'use_default_vpc_cni': None, 'user_mappings': None, 'version': None, 'vpc_cni_options': None, 'vpc_id': <pulumi.output.Output object at 0x10e3f6430>, 'aws_provider': None, 'core': None, 'default_node_group': None, 'eks_cluster': None, 'eks_cluster_ingress_rule': None, 'kubeconfig': None, 'node_security_group': None, 'provider': None} prepared
    debug: resource registration prepared: ty=eks:index:Cluster, name=eks-main-eks
    debug: resource registration successful: ty=aws:iam/policy:Policy, urn=urn:pulumi:dev::eks-main::custom:resource:IngressCtl$aws:iam/policy:Policy::eks-main-alb-controller-policy
    debug: No meta timeoutkey found in Apply()
    debug: Waiting for state to become: [success]
    debug: incoming output property translated: arn -> arn
    debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    debug: incoming output property translated: name -> name
    debug: incoming output value translated: eks-main-alb-controller-policy-1929516 -> eks-main-alb-controller-policy-1929516
    debug: incoming output property translated: path -> path
    debug: incoming output value translated: / -> /
    debug: incoming output property translated: description -> description
    debug: incoming output value translated:  -> 
    debug: incoming output property translated: id -> id
    debug: incoming output value translated: arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516 -> arn:aws:iam::052848974346:policy/eks-main-alb-controller-policy-1929516
    debug: incoming output property translated: policy -> policy
    debug: incoming output value translated: {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "acm:DescribeCertificate",
                    "acm:ListCertificates",
                    "acm:GetCertificate"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateTags",
                    "ec2:DeleteTags",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeAddresses",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInstanceStatus",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:ModifyInstanceAttribute",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:RevokeSecurityGroupIngress"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticloadbalancing:AddListenerCertificates",
                    "elasticloadbalancing:AddTags",
                    "elasticloadbalancing:CreateListener",
                    "elasticloadbalancing:CreateLoadBalancer",
                    "elasticloadbalancing:CreateRule",
                    "elasticloadbalancing:CreateTargetGroup",
                    "elasticloadbalancing:DeleteListener",
                    "elasticloadbalancing:DeleteLoadBalancer",
                    "elasticloadbalancing:DeleteRule",
                    "elasticloadbalancing:DeleteTargetGroup",
                    "elasticloadbalancing:DeregisterTargets",
                    "elasticloadbalancing:DescribeListenerCertificates",
                    "elasticloadbalancing:DescribeListeners",
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                    "elasticloadbalancing:DescribeRules",
                    "elasticloadbalancing:DescribeSSLPolicies",
                    "elasticloadbalancing:DescribeTags",
                    "elasticloadbalancing:DescribeTargetGroups",
                    "elasticloadbalancing:DescribeTargetGroupAttributes",
                    "elasticloadbalancing:DescribeTargetHealth",
                    "elasticloadbalancing:ModifyListener",
                    "elasticloadbalancing:ModifyLoadBalancerAttributes",
                    "elasticloadbalancing:ModifyRule",
                    "elasticloadbalancing:ModifyTargetGroup",
                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                    "elasticloadbalancing:RegisterTargets",
                    "elasticloadbalancing:RemoveListenerCertificates",
                    "elasticloadbalancing:RemoveTags",
                    "elasticloadbalancing:SetIpAddressType",
                    "elasticloadbalancing:SetSecurityGroups",
                    "elasticloadbalancing:SetSubnets",
                    "elasticloadbalancing:SetWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:CreateServiceLinkedRole",
                    "iam:GetServerCertificate",
                    "iam:ListServerCertificates"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:DescribeUserPoolClient"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf-regional:GetWebACLForResource",
                    "waf-regional:GetWebACL",
                    "waf-regional:AssociateWebACL",
                    "waf-regional:DisassociateWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "tag:GetResources",
                    "tag:TagResources"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf:GetWebACL"
                  ],
                  "Resource": "*"
                }
              ]
            }
             -> {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "acm:DescribeCertificate",
                    "acm:ListCertificates",
                    "acm:GetCertificate"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateTags",
                    "ec2:DeleteTags",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeAddresses",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInstanceStatus",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:ModifyInstanceAttribute",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:RevokeSecurityGroupIngress"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticloadbalancing:AddListenerCertificates",
                    "elasticloadbalancing:AddTags",
                    "elasticloadbalancing:CreateListener",
                    "elasticloadbalancing:CreateLoadBalancer",
                    "elasticloadbalancing:CreateRule",
                    "elasticloadbalancing:CreateTargetGroup",
                    "elasticloadbalancing:DeleteListener",
                    "elasticloadbalancing:DeleteLoadBalancer",
                    "elasticloadbalancing:DeleteRule",
                    "elasticloadbalancing:DeleteTargetGroup",
                    "elasticloadbalancing:DeregisterTargets",
                    "elasticloadbalancing:DescribeListenerCertificates",
                    "elasticloadbalancing:DescribeListeners",
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                    "elasticloadbalancing:DescribeRules",
                    "elasticloadbalancing:DescribeSSLPolicies",
                    "elasticloadbalancing:DescribeTags",
                    "elasticloadbalancing:DescribeTargetGroups",
                    "elasticloadbalancing:DescribeTargetGroupAttributes",
                    "elasticloadbalancing:DescribeTargetHealth",
                    "elasticloadbalancing:ModifyListener",
                    "elasticloadbalancing:ModifyLoadBalancerAttributes",
                    "elasticloadbalancing:ModifyRule",
                    "elasticloadbalancing:ModifyTargetGroup",
                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                    "elasticloadbalancing:RegisterTargets",
                    "elasticloadbalancing:RemoveListenerCertificates",
                    "elasticloadbalancing:RemoveTags",
                    "elasticloadbalancing:SetIpAddressType",
                    "elasticloadbalancing:SetSecurityGroups",
                    "elasticloadbalancing:SetSubnets",
                    "elasticloadbalancing:SetWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:CreateServiceLinkedRole",
                    "iam:GetServerCertificate",
                    "iam:ListServerCertificates"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:DescribeUserPoolClient"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf-regional:GetWebACLForResource",
                    "waf-regional:GetWebACL",
                    "waf-regional:AssociateWebACL",
                    "waf-regional:DisassociateWebACL"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "tag:GetResources",
                    "tag:TagResources"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "waf:GetWebACL"
                  ],
                  "Resource": "*"
                }
              ]
            }
    debug: looking for resolver using translated name arn
    debug: looking for resolver using translated name name
    debug: looking for resolver using translated name path
    debug: looking for resolver using translated name description
    debug: looking for resolver using translated name policy
    debug: top-level input property translated: policy_arn -> policyArn
    error: update failed
 
  aws:iam:Role (eks-main-alb-controller-role):
    error: 1 error occurred:
    	* Error creating IAM Role eks-main-alb-controller-role-b2109b9: MalformedPolicyDocument: Federated principals must be valid domain names or SAML metadata ARNs
    	status code: 400, request id: 0b3eb09f-00ed-4296-9492-d8fc739ead9e
 
Policy Violations:
    [advisory]  aws v0.1.20201015-2  require-region (pulumi:providers:aws: default_3_30_1)
    Must use an approved region.
    Region [us-east-2] is not allowed.
    
Outputs:
  - App Namespace          : "eks-main-app"
  - cluster oidc arn       : "arn:aws:iam::052848974346:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F"
  - cluster oidc issuer url: "oidc.eks.us-east-2.amazonaws.com/id/A72B1F6DBDD97583B52B25D4AFD7D57F"
  - kubeconfig             : "[secret]"

warning: A new version of Pulumi is available. To upgrade from version '2.20.0' to '2.21.2', run 
   $ brew upgrade pulumi
or visit https://pulumi.com/docs/reference/install/ for manual instructions and release notes.
